webpackHotUpdate_N_E("pages/color-generator",{

/***/ "./lib/color-generator/generateColors.js":
/*!***********************************************!*\
  !*** ./lib/color-generator/generateColors.js ***!
  \***********************************************/
/*! exports provided: generateColors, getColors, hexToHSL, HSLToHex, getNeutralBaseColorFromBrandPrimaryHex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColors\", function() { return generateColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColors\", function() { return getColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToHSL\", function() { return hexToHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HSLToHex\", function() { return HSLToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutralBaseColorFromBrandPrimaryHex\", function() { return getNeutralBaseColorFromBrandPrimaryHex; });\n/* harmony import */ var _babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/readOnlyError */ \"./node_modules/@babel/runtime/helpers/esm/readOnlyError.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n\n\n\n\nvar Color = function Color(color, name) {\n  Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Color);\n\n  this.hex = color;\n  this.rgb = hexToRgb(color);\n  this.name = name;\n};\n\nvar hex = function hex(color) {\n  var colorString = color.toString(16);\n  return colorString.length === 1 ? \"0\".concat(colorString) : colorString;\n};\n\nvar calculateColor = function calculateColor(color1, color2, ratio) {\n  ratio = (Math.round(ratio * 100) / 100).toFixed(2);\n  var r = Math.ceil(parseInt(color2.substring(0, 2), 16) * ratio + parseInt(color1.substring(0, 2), 16) * (1 - ratio));\n  var g = Math.ceil(parseInt(color2.substring(2, 4), 16) * ratio + parseInt(color1.substring(2, 4), 16) * (1 - ratio));\n  var b = Math.ceil(parseInt(color2.substring(4, 6), 16) * ratio + parseInt(color1.substring(4, 6), 16) * (1 - ratio));\n  return hex(r) + hex(g) + hex(b);\n};\n\nvar hexToRgb = function hexToRgb(hex) {\n  var r = parseInt(hex.substring(1, 3), 16);\n  var g = parseInt(hex.substring(3, 5), 16);\n  var b = parseInt(hex.substring(5, 7), 16);\n  return \"\".concat(r, \",\").concat(g, \",\").concat(b);\n};\n\nvar generateColors = function generateColors(color1, color2, variations) {\n  if (!variations) {\n    return [];\n  }\n\n  color1 = color1.startsWith('#') ? color1 : \"#\".concat(color1);\n  color2 = color2.startsWith('#') ? color2 : \"#\".concat(color2);\n  var percentage = 1 / variations;\n  var numberOfLoops = 1 / percentage - 1;\n  var colors = [];\n\n  for (var i = 1; i <= numberOfLoops; i++) {\n    colors = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(colors), ['#' + calculateColor(color1.slice(1), color2.slice(1), i * percentage)]);\n  }\n\n  return colors;\n};\n\nvar generateColorRange = function generateColorRange(color, lightVariations, lightPercentage, darkVariations, darkPercentage, hook, startIndex, includeEnds, isDark) {\n  var firstColor = calculateColor('ffffff', color.slice(1), 1 - lightPercentage);\n  var lastColor = calculateColor(color.slice(1), '000000', darkPercentage);\n  var lightColors = generateColors(firstColor, color, lightVariations);\n  var darkColors = generateColors(color, lastColor, darkVariations);\n  var out = [];\n\n  if (lightVariations) {\n    out = [\"#\".concat(firstColor)].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lightColors), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out));\n  }\n\n  out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [color]);\n\n  if (darkVariations) {\n    out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(darkColors), [\"#\".concat(lastColor)]);\n  }\n\n  if (includeEnds) {\n    out = [\"#ffffff\"].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [\"#000000\"]);\n  }\n\n  if (isDark) {\n    out.reverse();\n  }\n\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook, \"-\").concat(index + (startIndex ? startIndex : 0));\n    return new Color(color, name);\n  });\n};\n\nvar getColors = function getColors(colorsJson, selectedColors, isDark) {\n  var generated = {};\n\n  for (var _i = 0, _Object$values = Object.values(colorsJson.colors); _i < _Object$values.length; _i++) {\n    var color = _Object$values[_i];\n    var id = color.id,\n        lightVariations = color.lightVariations,\n        lightPercentage = color.lightPercentage,\n        darkVariations = color.darkVariations,\n        darkPercentage = color.darkPercentage,\n        hook = color.hook,\n        startIndex = color.startIndex;\n    var baseColor = selectedColors[id];\n\n    if (!baseColor || baseColor.length !== 7 || id === 'surfaceNeutral' || id === 'surfaceDivider') {\n      continue;\n    }\n\n    generated[id] = generateColorRange(baseColor, lightVariations, lightPercentage, darkVariations, darkPercentage, hook, startIndex, id === 'neutrals' ? true : false, isDark && id === 'neutrals' ? true : false);\n  }\n\n  if (generated.neutrals) {\n    var neutralColors = generated.neutrals;\n    var surfaceNeutralBase = neutralColors[4].hex;\n    var surfaceNeutralColors = generateColorRange(surfaceNeutralBase, colorsJson.colors.surfaceNeutral.lightVariations, colorsJson.colors.surfaceNeutral.lightPercentage, colorsJson.colors.surfaceNeutral.darkVariations, colorsJson.colors.surfaceNeutral.darkPercentage, colorsJson.colors.surfaceNeutral.hook, colorsJson.colors.surfaceNeutral.startIndex, false, isDark);\n    isDark ? surfaceNeutralColors.shift() : surfaceNeutralColors.pop();\n    generated.surfaceNeutral = surfaceNeutralColors;\n    var surfaceDividerBase = neutralColors[8].hex;\n    var surfaceDividerColors = generateColorRange(surfaceDividerBase, colorsJson.colors.surfaceDivider.lightVariations, colorsJson.colors.surfaceDivider.lightPercentage, colorsJson.colors.surfaceDivider.darkVariations, colorsJson.colors.surfaceDivider.darkPercentage, colorsJson.colors.surfaceDivider.hook, colorsJson.colors.surfaceDivider.startIndex, false, isDark);\n    isDark ? surfaceDividerColors.shift() : surfaceDividerColors.pop();\n    generated.surfaceDivider = surfaceDividerColors;\n  }\n\n  return generated;\n};\n\nvar isHex = function isHex(hex) {\n  return /^#[0-9A-F]{6}$/i.test(hex);\n};\n\nvar hexToHSL = function hexToHSL(H) {\n  // Convert hex to RGB first\n  var r = 0,\n      g = 0,\n      b = 0;\n\n  if (H.length == 4) {\n    r = \"0x\" + H[1] + H[1];\n    g = \"0x\" + H[2] + H[2];\n    b = \"0x\" + H[3] + H[3];\n  } else if (H.length == 7) {\n    r = \"0x\" + H[1] + H[2];\n    g = \"0x\" + H[3] + H[4];\n    b = \"0x\" + H[5] + H[6];\n  } // Then to HSL\n\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta == 0) h = 0;else if (cmax == r) h = (g - b) / delta % 6;else if (cmax == g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1); // return \"hsl(\" + Math.round(h) + \",\" + Math.round(s) + \",\" + Math.round(l) + \")\";\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n};\nvar HSLToHex = function HSLToHex(h, s, l) {\n  s /= 100;\n  l /= 100;\n  var c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n      m = l - c / 2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  } // Having obtained RGB, convert channels to hex\n\n\n  r = Math.round((r + m) * 255).toString(16);\n  g = Math.round((g + m) * 255).toString(16);\n  b = Math.round((b + m) * 255).toString(16); // Prepend 0s, if necessary\n\n  if (r.length == 1) r = \"0\" + r;\n  if (g.length == 1) g = \"0\" + g;\n  if (b.length == 1) b = \"0\" + b;\n  return \"#\" + r + g + b;\n};\n_c = HSLToHex;\nvar getNeutralBaseColorFromBrandPrimaryHex = function getNeutralBaseColorFromBrandPrimaryHex(hex) {\n  var _hexToHSL = hexToHSL('#293e40'),\n      h = _hexToHSL.h,\n      s = _hexToHSL.s,\n      l = _hexToHSL.l;\n\n  h = (Object(_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h\"), h + 2 > 360 ? 360 : h + 2);\n  s = (Object(_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"s\"), s - 12 < 0 ? 0 : s - 12);\n  l = (Object(_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"l\"), l + 11 > 100 ? 100 : l + 11);\n  return HSLToHex(h, s, l);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HSLToHex\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/color-generator/generateColors.js\n");

/***/ })

})