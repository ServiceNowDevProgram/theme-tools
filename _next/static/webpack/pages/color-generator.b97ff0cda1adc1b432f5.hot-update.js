webpackHotUpdate_N_E("pages/color-generator",{

/***/ "./lib/color-generator/generateColors.js":
/*!***********************************************!*\
  !*** ./lib/color-generator/generateColors.js ***!
  \***********************************************/
/*! exports provided: generateColors, getColors, isHex, hexToHSL, HSLToHex, getNeutralBaseColorsFromBrandPrimaryHex, getNeutrals, getBaseColors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColors\", function() { return generateColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColors\", function() { return getColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHex\", function() { return isHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToHSL\", function() { return hexToHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HSLToHex\", function() { return HSLToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutralBaseColorsFromBrandPrimaryHex\", function() { return getNeutralBaseColorsFromBrandPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutrals\", function() { return getNeutrals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBaseColors\", function() { return getBaseColors; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n\n\n\n\nvar Color = function Color(color, name) {\n  Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Color);\n\n  this.hex = color;\n  this.rgb = hexToRgb(color);\n  this.name = name;\n};\n\nvar hex = function hex(color) {\n  var colorString = color.toString(16);\n  return colorString.length === 1 ? \"0\".concat(colorString) : colorString;\n};\n\nvar calculateColor = function calculateColor(color1, color2, ratio) {\n  ratio = (Math.round(ratio * 100) / 100).toFixed(2);\n  var r = Math.ceil(parseInt(color2.substring(0, 2), 16) * ratio + parseInt(color1.substring(0, 2), 16) * (1 - ratio));\n  var g = Math.ceil(parseInt(color2.substring(2, 4), 16) * ratio + parseInt(color1.substring(2, 4), 16) * (1 - ratio));\n  var b = Math.ceil(parseInt(color2.substring(4, 6), 16) * ratio + parseInt(color1.substring(4, 6), 16) * (1 - ratio));\n  return hex(r) + hex(g) + hex(b);\n};\n\nvar hexToRgb = function hexToRgb(hex) {\n  var r = parseInt(hex.substring(1, 3), 16);\n  var g = parseInt(hex.substring(3, 5), 16);\n  var b = parseInt(hex.substring(5, 7), 16);\n  return \"\".concat(r, \",\").concat(g, \",\").concat(b);\n};\n\nvar rgbToHex = function rgbToHex(rgb) {\n  console.log(rgb);\n  if (!rgb) return '';\n  var rgbArr = rgb.split(',');\n  console.log(rgbArr);\n  var hex = rgbArr.map(function (color) {\n    var h = parseInt(color).toString(16);\n    console.log(h);\n    return h.length === 1 ? '0' + h : h;\n  }).join('');\n  console.log(hex);\n  return \"#\".concat(hex);\n};\n\nvar generateColors = function generateColors(color1, color2, variations) {\n  if (!variations) {\n    return [];\n  }\n\n  color1 = color1.startsWith('#') ? color1 : \"#\".concat(color1);\n  color2 = color2.startsWith('#') ? color2 : \"#\".concat(color2);\n  var percentage = 1 / variations;\n  var numberOfLoops = 1 / percentage - 1;\n  var colors = [];\n\n  for (var i = 1; i <= numberOfLoops; i++) {\n    colors = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(colors), ['#' + calculateColor(color1.slice(1), color2.slice(1), i * percentage)]);\n  }\n\n  return colors;\n};\n\nvar generateColorRange = function generateColorRange(_ref) {\n  var color = _ref.color,\n      lightVariations = _ref.lightVariations,\n      lightPercentage = _ref.lightPercentage,\n      darkVariations = _ref.darkVariations,\n      darkPercentage = _ref.darkPercentage,\n      hook = _ref.hook,\n      startIndex = _ref.startIndex,\n      includeEnds = _ref.includeEnds,\n      isDark = _ref.isDark;\n  var firstColor = calculateColor('ffffff', color.slice(1), 1 - lightPercentage);\n  var lastColor = calculateColor(color.slice(1), '000000', darkPercentage);\n  var lightColors = generateColors(firstColor, color, lightVariations);\n  var darkColors = generateColors(color, lastColor, darkVariations);\n  var out = [];\n\n  if (lightVariations) {\n    out = [\"#\".concat(firstColor)].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lightColors), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out));\n  }\n\n  out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [color]);\n\n  if (darkVariations) {\n    out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(darkColors), [\"#\".concat(lastColor)]);\n  }\n\n  if (includeEnds) {\n    out = [\"#ffffff\"].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [\"#000000\"]);\n  }\n\n  if (isDark) {\n    out.reverse();\n  }\n\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\n\nvar getColors = function getColors(selectedColors) {\n  var isDark = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var generated = {};\n\n  for (var i in selectedColors) {\n    switch (i) {\n      case 'neutrals':\n        generated[i] = getNeutrals(selectedColors[i]);\n        generated['surfaceNeutral'] = getSurfaceNeutral(selectedColors[i], isDark);\n        generated['surfaceDivider'] = getSurfaceDivider(selectedColors[i], isDark);\n        generated['backgroundPrimary'] = getBackgroundPrimary(selectedColors[i], isDark);\n        generated['backgroundSecondary'] = getBackgroundSecondary(selectedColors[i], isDark);\n        generated['backgroundTertiary'] = getBackgroundTertiary(selectedColors[i], isDark);\n        generated['dividerPrimary'] = getDividerPrimary(selectedColors[i], isDark);\n        generated['dividerSecondary'] = getDividerSecondary(selectedColors[i], isDark);\n        generated['dividerTertiary'] = getDividerTertiary(selectedColors[i], isDark);\n        generated['textPrimary'] = getTextPrimary(selectedColors[i], isDark);\n        generated['textSecondary'] = getTextSecondary(selectedColors[i], isDark);\n        generated['textTertiary'] = getTextTertiary(selectedColors[i], isDark);\n        generated['borderPrimary'] = getBorderPrimary(selectedColors[i], isDark);\n        generated['borderSecondary'] = getBorderSecondary(selectedColors[i], isDark);\n        generated['borderTertiary'] = getBorderTertiary(selectedColors[i]);\n        break;\n\n      case 'primary':\n        generated[i] = getPrimary(selectedColors[i]);\n        break;\n\n      case 'secondary':\n        generated[i] = getSecondary(selectedColors[i]);\n        break;\n\n      case 'selectionPrimary':\n        generated[i] = getSelectionPrimary(selectedColors[i]);\n        break;\n\n      case 'selectionSecondary':\n        generated[i] = getSelectionSecondary(selectedColors[i]);\n        break;\n\n      case 'interactive':\n        generated[i] = getInteractive(selectedColors[i]);\n        break;\n\n      case 'link':\n        generated[i] = getLink(selectedColors[i]);\n        break;\n\n      case 'focus':\n        generated[i] = getFocus(selectedColors[i]);\n        break;\n\n      case 'alertCritical':\n      case 'alertHigh':\n      case 'alertWarning':\n      case 'alertModerate':\n      case 'alertInfo':\n      case 'alertPositive':\n      case 'alertLow':\n        generated[i] = getAlert(selectedColors[i], i);\n        break;\n\n      case 'brandNeutral':\n      case 'brandPrimary':\n      case 'brandSecondary':\n        generated[i] = getBrand(selectedColors[i], i);\n        break;\n\n      case 'surfaceBrand':\n        generated[i] = getSurfaceBrand(selectedColors[i], isDark);\n        break;\n\n      case 'chromeBrand':\n        generated[i] = getChromeBrand(selectedColors[i]);\n        break;\n\n      case 'chromeDivider':\n        generated[i] = getChromeDivider(selectedColors[i]);\n        break;\n\n      case 'groupedBlue':\n      case 'groupedBrown':\n      case 'groupedGray':\n      case 'groupedGreen':\n      case 'groupedGreenYellow':\n      case 'groupedMagenta':\n      case 'groupedOrange':\n      case 'groupedPink':\n      case 'groupedPurple':\n      case 'groupedTeal':\n      case 'groupedYellow':\n        generated[i] = getGrouped(selectedColors[i], i);\n        break;\n\n      default:\n    }\n  }\n\n  return generated;\n};\nvar isHex = function isHex(hex) {\n  return /^#[0-9A-F]{6}$/i.test(hex);\n};\nvar hexToHSL = function hexToHSL(H) {\n  // Convert hex to RGB first\n  var r = 0,\n      g = 0,\n      b = 0;\n\n  if (H.length == 4) {\n    r = '0x' + H[1] + H[1];\n    g = '0x' + H[2] + H[2];\n    b = '0x' + H[3] + H[3];\n  } else if (H.length == 7) {\n    r = '0x' + H[1] + H[2];\n    g = '0x' + H[3] + H[4];\n    b = '0x' + H[5] + H[6];\n  } // Then to HSL\n\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta == 0) h = 0;else if (cmax == r) h = (g - b) / delta % 6;else if (cmax == g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1); // return \"hsl(\" + Math.round(h) + \",\" + Math.round(s) + \",\" + Math.round(l) + \")\";\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n};\nvar HSLToHex = function HSLToHex(h, s, l) {\n  s /= 100;\n  l /= 100;\n  var c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n      m = l - c / 2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  } // Having obtained RGB, convert channels to hex\n\n\n  r = Math.round((r + m) * 255).toString(16);\n  g = Math.round((g + m) * 255).toString(16);\n  b = Math.round((b + m) * 255).toString(16); // Prepend 0s, if necessary\n\n  if (r.length == 1) r = '0' + r;\n  if (g.length == 1) g = '0' + g;\n  if (b.length == 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n_c = HSLToHex;\nvar getNeutralBaseColorsFromBrandPrimaryHex = function getNeutralBaseColorsFromBrandPrimaryHex(hex) {\n  var _hexToHSL = hexToHSL(hex),\n      h = _hexToHSL.h,\n      s = _hexToHSL.s,\n      l = _hexToHSL.l;\n\n  s = s - 25 < 0 ? 0 : s - 25;\n  l = l - 18 < 0 ? 0 : l - 18;\n  return HSLToHex(h, s, l);\n};\nvar getNeutrals = function getNeutrals(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightVariations: 10,\n    lightPercentage: 0.95,\n    darkVariations: 9,\n    darkPercentage: 0.9,\n    hook: 'now-color--neutral',\n    startIndex: 0,\n    includeEnds: true\n  });\n};\n\nvar getPrimary = function getPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 1,\n    darkPercentage: 0.5,\n    darkVariations: 2,\n    hook: 'now-color--primary'\n  });\n};\n\nvar getSecondary = function getSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 1,\n    darkPercentage: 0.5,\n    darkVariations: 2,\n    hook: 'now-color--secondary'\n  });\n};\n\nvar getSelectionPrimary = function getSelectionPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 2,\n    darkPercentage: 0.5,\n    darkVariations: 2,\n    hook: 'now-color_selection--primary'\n  });\n};\n\nvar getSelectionSecondary = function getSelectionSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.61,\n    lightVariations: 2,\n    darkPercentage: 0.1,\n    darkVariations: 2,\n    hook: 'now-color_selection--secondary'\n  });\n};\n\nvar getInteractive = function getInteractive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 2,\n    darkPercentage: 0.5,\n    darkVariations: 2,\n    hook: 'now-color--interactive'\n  });\n};\n\nvar getLink = function getLink(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.3,\n    lightVariations: 1,\n    darkPercentage: 0.25,\n    darkVariations: 2,\n    startIndex: 1,\n    hook: 'now-color--link'\n  });\n};\n\nvar getFocus = function getFocus(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.3,\n    lightVariations: 1,\n    darkPercentage: 0.25,\n    darkVariations: 1,\n    startIndex: 1,\n    hook: 'now-color--focus'\n  });\n};\n\nvar getAlert = function getAlert(hex, name) {\n  if (!hex) return [];\n  name = name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ')[1].toLowerCase();\n  return generateColorRange({\n    color: hex,\n    lightVariations: 2,\n    lightPercentage: 0.75,\n    darkVariations: 3,\n    darkPercentage: 0.6,\n    hook: \"now-color_alert--\".concat(name),\n    startIndex: 0\n  });\n};\n\nvar getBrand = function getBrand(hex, name) {\n  if (!hex) return [];\n  name = '--now-color_brand--' + name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ')[1].toLowerCase();\n  return [new Color(hex, name)];\n};\n\nvar getSurfaceNeutral = function getSurfaceNeutral(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = generateColorRange({\n    color: hex,\n    lightVariations: 10,\n    lightPercentage: 0.95,\n    darkVariations: 9,\n    darkPercentage: 0.9,\n    hook: 'now-color--neutral',\n    startIndex: 0,\n    includeEnds: true\n  });\n  var baseNeutral = isDark ? neutrals[17].hex : neutrals[4].hex;\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: 0.95,\n    lightVariations: 6,\n    darkPercentage: 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--neutral',\n    includeEnds: false,\n    isDark: isDark\n  });\n  colors.pop();\n  return colors;\n};\n\nvar getSurfaceDivider = function getSurfaceDivider(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = generateColorRange({\n    color: hex,\n    lightVariations: 10,\n    lightPercentage: 0.95,\n    darkVariations: 9,\n    darkPercentage: 0.9,\n    hook: 'now-color--neutral',\n    startIndex: 0,\n    includeEnds: true\n  });\n  var baseNeutral = isDark ? neutrals[15].hex : neutrals[8].hex;\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: 0.9,\n    lightVariations: 6,\n    darkPercentage: 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--divider',\n    includeEnds: false,\n    isDark: isDark\n  });\n  colors.pop();\n  return colors;\n};\n\nvar getSurfaceBrand = function getSurfaceBrand(hex, isDark) {\n  if (!hex) return [];\n  var colors = generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--brand',\n    includeEnds: false,\n    isDark: isDark\n  });\n  return colors;\n};\n\nvar getChromeBrand = function getChromeBrand(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 5,\n    hook: 'now-color_chrome--brand'\n  });\n};\n\nvar getChromeDivider = function getChromeDivider(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.6,\n    lightVariations: 5,\n    darkPercentage: 0.8,\n    darkVariations: 5,\n    hook: 'now-color_chrome--divider'\n  });\n};\n\nvar getGrouped = function getGrouped(hex, name) {\n  if (!hex) return [];\n  name = name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ');\n  name.shift();\n  name = name.map(function (e) {\n    return e.toLowerCase();\n  }).join('-');\n  return generateColorRange({\n    color: hex,\n    lightVariations: 2,\n    lightPercentage: 0.7,\n    darkVariations: 3,\n    darkPercentage: 0.45,\n    hook: \"now-color_grouped--\".concat(name),\n    startIndex: 0\n  });\n};\n\nvar getBackgroundPrimary = function getBackgroundPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[0].hex;\n  return [new Color(baseNeutral, '--now-color_background--primary')];\n};\n\nvar getBackgroundSecondary = function getBackgroundSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[1].hex;\n  return [new Color(baseNeutral, '--now-color_background--secondary')];\n};\n\nvar getBackgroundTertiary = function getBackgroundTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[14].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_background--tertiary')];\n};\n\nvar getDividerPrimary = function getDividerPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[8].hex : neutrals[4].hex;\n  return [new Color(baseNeutral, '--now-color_divider--primary')];\n};\n\nvar getDividerSecondary = function getDividerSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[10].hex : neutrals[3].hex;\n  return [new Color(baseNeutral, '--now-color_divider--secondary')];\n};\n\nvar getDividerTertiary = function getDividerTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[12].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_divider--tertiary')];\n};\n\nvar getTextPrimary = function getTextPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[0].hex : neutrals[18].hex;\n  return [new Color(baseNeutral, '--now-color_text--primary')];\n};\n\nvar getTextSecondary = function getTextSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[4].hex : neutrals[12].hex;\n  return [new Color(baseNeutral, '--now-color_text--secondary')];\n};\n\nvar getTextTertiary = function getTextTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[6].hex : neutrals[9].hex;\n  return [new Color(baseNeutral, '--now-color_text--tertiary')];\n};\n\nvar getBorderPrimary = function getBorderPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[1].hex : neutrals[7].hex;\n  return [new Color(baseNeutral, '--now-color_border--primary')];\n};\n\nvar getBorderSecondary = function getBorderSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[2].hex : neutrals[5].hex;\n  return [new Color(baseNeutral, '--now-color_border--secondary')];\n};\n\nvar getBorderTertiary = function getBorderTertiary(hex) {\n  if (!hex) return [];\n  return [new Color(hex, '--now-color_border--tertiary')];\n};\n\nvar getBaseColors = function getBaseColors(theme) {\n  var _ref2;\n\n  return _ref2 = {\n    neutrals: rgbToHex(theme['--now-color--neutral-11']) || '',\n    primary: theme['--now-color--primary-1'] || '',\n    secondary: theme[' --now-color--secondary-1'] || '',\n    selectionPrimary: theme['--now-color_selection--primary-2'] || '',\n    selectionSecondary: theme['--now-color_selection--secondary-2'] || '',\n    interactive: theme['--now-color--interactive-2'] || '',\n    chromeBrand: theme['--now-color_chrome--brand-5'] || '',\n    chromeDivider: theme['--now-color_chrome--divider-5'] || '',\n    brandNeutral: theme['--now-color_brand--neutral'] || '',\n    brandPrimary: theme['--now-color_brand--primary'] || '',\n    brandSecondary: theme['--now-color_brand--secondary'] || '',\n    surfaceNeutral: theme['--now-color--neutral-11'] || '',\n    surfaceDivider: theme['--now-color--neutral-11'] || '',\n    surfaceBrand: theme['--now-color_surface--brand-6'] || ''\n  }, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"chromeBrand\", theme['--now-color_chrome--brand-5'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"chromeDivider\", theme['--now-color_chrome--divider-5'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"backgroundPrimary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"backgroundSecondary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"backgroundTertiary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"dividerPrimary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"dividerSecondary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"dividerTertiary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"textPrimary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"textSecondary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"textTertiary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"borderPrimary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"borderSecondary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"borderTertiary\", theme['--now-color--neutral-11'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertCritical\", theme['--now-color_alert--critical-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertHigh\", theme['--now-color_alert--high-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertWarning\", theme['--now-color_alert--warning-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertModerate\", theme['--now-color_alert--moderate-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertInfo\", theme['--now-color_alert--info-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertPositive\", theme['--now-color_alert--positive-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertLow\", theme['--now-color_alert--low-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedBlue\", theme['--now-color_grouped--blue-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedBrown\", theme['--now-color_grouped--brown-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedGray\", theme['--now-color_grouped--gray-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedGreen\", theme['--now-color_grouped--green-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedGreenYellow\", theme['--now-color_grouped--green-yellow-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedMagenta\", theme['--now-color_grouped--magenta-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedOrange\", theme['--now-color_grouped--orange-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedPink\", theme['--now-color_grouped--pink-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedPurple\", theme['--now-color_grouped--purple-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedTeal\", theme['--now-color_grouped--teal-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedYellow\", theme['--now-color_grouped--yellow-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"link\", theme['--now-color--link-2'] || ''), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"focus\", theme['--now-color--focus-2'] || ''), _ref2;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HSLToHex\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/color-generator/generateColors.js\n");

/***/ })

})