webpackHotUpdate_N_E("pages/color-range",{

/***/ "./lib/color-generator/generateColorsP.js":
/*!************************************************!*\
  !*** ./lib/color-generator/generateColorsP.js ***!
  \************************************************/
/*! exports provided: generateColors, generateColorRange, generateColorScale, getColors, isHex, hexToHSL, HSLToHex, getNeutralBaseColorsFromBrandPrimaryHex, getNeutrals, getBaseColors, getContrastRatio, getComplimentaryColors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColors\", function() { return generateColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColorRange\", function() { return generateColorRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColorScale\", function() { return generateColorScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColors\", function() { return getColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHex\", function() { return isHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToHSL\", function() { return hexToHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HSLToHex\", function() { return HSLToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutralBaseColorsFromBrandPrimaryHex\", function() { return getNeutralBaseColorsFromBrandPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutrals\", function() { return getNeutrals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBaseColors\", function() { return getBaseColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContrastRatio\", function() { return getContrastRatio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getComplimentaryColors\", function() { return getComplimentaryColors; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n\n\n\n\nvar Color = function Color(color, name) {\n  Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Color);\n\n  this.hex = color;\n  this.rgb = hexToRgb(color);\n  this.name = name;\n};\n\nvar hex = function hex(color) {\n  var colorString = color.toString(16);\n  return colorString.length === 1 ? \"0\".concat(colorString) : colorString;\n};\n\nvar calculateColor = function calculateColor(color1, color2, ratio) {\n  ratio = (Math.round(ratio * 100) / 100).toFixed(2);\n  var r = Math.round(parseInt(color2.substring(0, 2), 16) * ratio + parseInt(color1.substring(0, 2), 16) * (1 - ratio));\n  var g = Math.round(parseInt(color2.substring(2, 4), 16) * ratio + parseInt(color1.substring(2, 4), 16) * (1 - ratio));\n  var b = Math.round(parseInt(color2.substring(4, 6), 16) * ratio + parseInt(color1.substring(4, 6), 16) * (1 - ratio));\n  return hex(r) + hex(g) + hex(b);\n};\n\nvar hexToRgb = function hexToRgb(hex) {\n  var r = parseInt(hex.substring(1, 3), 16);\n  var g = parseInt(hex.substring(3, 5), 16);\n  var b = parseInt(hex.substring(5, 7), 16);\n  return \"\".concat(r, \",\").concat(g, \",\").concat(b);\n};\n\nvar rgbToHex = function rgbToHex(rgb) {\n  if (!rgb) return '';\n  var newRGB = rgb.split(',');\n  var r = parseInt(newRGB[0]).toString(16);\n  var g = parseInt(newRGB[1]).toString(16);\n  var b = parseInt(newRGB[2]).toString(16);\n  if (r.length === 1) r = '0' + r;\n  if (g.length === 1) g = '0' + g;\n  if (b.length === 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n\nvar generateColors = function generateColors(color1, color2, variations) {\n  if (!variations) {\n    return [];\n  }\n\n  color1 = color1.startsWith('#') ? color1 : \"#\".concat(color1);\n  color2 = color2.startsWith('#') ? color2 : \"#\".concat(color2);\n  var percentage = 1 / variations;\n  var colors = [];\n\n  for (var i = 1; i <= variations - 1; i++) {\n    colors = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(colors), ['#' + calculateColor(color1.slice(1), color2.slice(1), i * percentage)]);\n  }\n\n  return colors;\n};\nvar generateColorRange = function generateColorRange(_ref) {\n  var color = _ref.color,\n      lightVariations = _ref.lightVariations,\n      lightPercentage = _ref.lightPercentage,\n      lightSaturation = _ref.lightSaturation,\n      darkVariations = _ref.darkVariations,\n      darkPercentage = _ref.darkPercentage,\n      darkSaturation = _ref.darkSaturation,\n      _ref$hook = _ref.hook,\n      hook = _ref$hook === void 0 ? 'hook' : _ref$hook,\n      startIndex = _ref.startIndex,\n      includeEnds = _ref.includeEnds,\n      isDark = _ref.isDark,\n      removeEnd = _ref.removeEnd;\n  if (!color) return [];\n\n  if (lightSaturation) {\n    var lightBaseColorHSL = hexToHSL(color);\n    lightBaseColorHSL.s = lightBaseColorHSL.s + lightBaseColorHSL.s * lightSaturation;\n    color = HSLToHex(lightBaseColorHSL.h, lightBaseColorHSL.s, lightBaseColorHSL.l);\n  }\n\n  var firstColor = calculateColor('ffffff', color.slice(1), 1 - lightPercentage);\n  var lastColor = calculateColor(color.slice(1), '000000', darkPercentage); // if (lightSaturation) {\n  // \tlet firstHSL = hexToHSL('#' + firstColor);\n  // \tconst newFirstS = firstHSL.s + lightSaturation * firstHSL.s;\n  // \tfirstHSL.s = newFirstS > 100 ? 100 : newFirstS;\n  // \t// const firstHDiff = hexToHSL(color).h - firstHSL.h;\n  // \t// if (Math.abs(firstHDiff) > 20) {\n  // \t// \tfirstHSL.h = hexToHSL(color).h;\n  // \t// }\n  // \tfirstColor = HSLToHex(firstHSL.h, firstHSL.s, firstHSL.l).substring(1);\n  // }\n  // if (darkSaturation) {\n  // \tlet lastHSL = hexToHSL('#' + lastColor);\n  // \tconst newLastS = lastHSL.s + darkSaturation * lastHSL.s;\n  // \tlastHSL.s = newLastS > 100 ? 100 : newLastS;\n  // \t// const lastHDiff = hexToHSL(color).h - lastHSL.h;\n  // \t// if (Math.abs(lastHDiff) > 20) {\n  // \t// \tlastHSL.h = hexToHSL(color).h;\n  // \t// }\n  // \tlastColor = HSLToHex(lastHSL.h, lastHSL.s, lastHSL.l).substring(1);\n  // }\n\n  var lightColors = generateColors(firstColor, color, lightVariations);\n  var darkColors = generateColors(color, lastColor, darkVariations);\n  var out = [];\n\n  if (lightVariations) {\n    out = [\"#\".concat(firstColor)].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lightColors), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out));\n  }\n\n  out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [color]);\n\n  if (darkVariations) {\n    out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(darkColors), [\"#\".concat(lastColor)]);\n  }\n\n  if (includeEnds) {\n    out = [\"#ffffff\"].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [\"#000000\"]);\n  }\n\n  if (removeEnd) {\n    out.pop();\n  }\n\n  if (isDark) {\n    out.reverse();\n  }\n\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\nvar generateColorScale = function generateColorScale(_ref2) {\n  var color = _ref2.color,\n      lightVariations = _ref2.lightVariations,\n      lightPercentage = _ref2.lightPercentage,\n      lightSaturation = _ref2.lightSaturation,\n      darkVariations = _ref2.darkVariations,\n      darkPercentage = _ref2.darkPercentage,\n      darkSaturation = _ref2.darkSaturation,\n      _ref2$hook = _ref2.hook,\n      hook = _ref2$hook === void 0 ? 'hook' : _ref2$hook,\n      startIndex = _ref2.startIndex,\n      includeEnds = _ref2.includeEnds,\n      isDark = _ref2.isDark,\n      removeEnd = _ref2.removeEnd;\n  if (!color) return [];\n  var lightColors = [];\n  var darkColors = []; // #5e6573\n  // 94, 101, 115\n  // 220째, 10%, 41%\n  // #616875\n  // 97, 104, 117\n  // 219째, 9%, 42%\n  // without saturation\n  // #5f6572\n  // 95, 101, 114\n  // 221째, 9%, 41%\n  // #626874\n  // 98, 104, 116\n  // 220째, 8%, 42%\n\n  var lightIncrements = lightPercentage / lightVariations;\n  var saturationIncrements = lightSaturation / lightVariations; // const\n\n  for (var i = 0; i < lightVariations; i++) {\n    var calculatedColor = calculateColor('ffffff', color.slice(1), 1 - (i + 1) * lightIncrements);\n    console.log(calculatedColor);\n\n    var _hexToHSL = hexToHSL(\"#\".concat(calculatedColor)),\n        h = _hexToHSL.h,\n        s = _hexToHSL.s,\n        l = _hexToHSL.l;\n\n    console.log(s);\n    console.log(saturationIncrements);\n    console.log('------', (i + 1) * saturationIncrements);\n    console.log('sat increments', s + (i + 1) * saturationIncrements);\n    var sInc = s + (i + 1) * saturationIncrements;\n    s = sInc > 100 ? 100 : sInc;\n    var newHex = HSLToHex(h, s, l);\n    lightColors.push(newHex);\n  }\n\n  console.log(lightColors);\n\n  if (includeEnds) {\n    lightColors.push('#ffffff');\n  }\n\n  lightColors.reverse();\n  var out = [].concat(lightColors, [color]);\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\nvar getColors = function getColors(selectedColors) {\n  var isDark = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var generated = {};\n\n  for (var i in selectedColors) {\n    switch (i) {\n      case 'neutrals':\n        generated[i] = getNeutrals(selectedColors[i]);\n        generated['surfaceNeutral'] = getSurfaceNeutral(selectedColors[i], isDark);\n        generated['surfaceDivider'] = getSurfaceDivider(selectedColors[i], isDark);\n        generated['backgroundPrimary'] = getBackgroundPrimary(selectedColors[i], isDark);\n        generated['backgroundSecondary'] = getBackgroundSecondary(selectedColors[i], isDark);\n        generated['backgroundTertiary'] = getBackgroundTertiary(selectedColors[i], isDark);\n        generated['dividerPrimary'] = getDividerPrimary(selectedColors[i], isDark);\n        generated['dividerSecondary'] = getDividerSecondary(selectedColors[i], isDark);\n        generated['dividerTertiary'] = getDividerTertiary(selectedColors[i], isDark);\n        generated['textPrimary'] = getTextPrimary(selectedColors[i], isDark);\n        generated['textSecondary'] = getTextSecondary(selectedColors[i], isDark);\n        generated['textTertiary'] = getTextTertiary(selectedColors[i], isDark);\n        generated['borderPrimary'] = getBorderPrimary(selectedColors[i], isDark);\n        generated['borderSecondary'] = getBorderSecondary(selectedColors[i], isDark);\n        generated['borderTertiary'] = getBorderTertiary(selectedColors[i]);\n        break;\n\n      case 'primary':\n        generated[i] = getPrimary(selectedColors[i]);\n        break;\n\n      case 'secondary':\n        generated[i] = getSecondary(selectedColors[i]);\n        break;\n\n      case 'selectionPrimary':\n        generated[i] = getSelectionPrimary(selectedColors[i]);\n        break;\n\n      case 'selectionSecondary':\n        generated[i] = getSelectionSecondary(selectedColors[i]);\n        break;\n\n      case 'interactive':\n        generated[i] = getInteractive(selectedColors[i]);\n        break;\n\n      case 'link':\n        generated[i] = getLink(selectedColors[i]);\n        break;\n\n      case 'focus':\n        generated[i] = getFocus(selectedColors[i]);\n        break;\n\n      case 'alertCritical':\n        generated[i] = getAlertCritical(selectedColors[i]);\n        break;\n\n      case 'alertHigh':\n        generated[i] = getAlertHigh(selectedColors[i]);\n        break;\n\n      case 'alertWarning':\n        generated[i] = getAlertWarning(selectedColors[i]);\n        break;\n\n      case 'alertModerate':\n        generated[i] = getAlertModerate(selectedColors[i]);\n        break;\n\n      case 'alertInfo':\n        generated[i] = getAlertInfo(selectedColors[i]);\n        break;\n\n      case 'alertPositive':\n        generated[i] = getAlertPositive(selectedColors[i]);\n        break;\n\n      case 'alertLow':\n        generated[i] = getAlertLow(selectedColors[i]);\n        break;\n\n      case 'brandNeutral':\n      case 'brandPrimary':\n      case 'brandSecondary':\n        generated[i] = getBrand(selectedColors[i], i);\n        break;\n\n      case 'surfaceBrand':\n        generated[i] = getSurfaceBrand(selectedColors[i], isDark);\n        break;\n\n      case 'chromeBrand':\n        generated[i] = getChromeBrand(selectedColors[i]);\n        break;\n\n      case 'chromeDivider':\n        generated[i] = getChromeDivider(selectedColors[i]);\n        break;\n\n      case 'groupedBlue':\n      case 'groupedBrown':\n      case 'groupedGray':\n      case 'groupedGreen':\n      case 'groupedGreenYellow':\n      case 'groupedMagenta':\n      case 'groupedOrange':\n      case 'groupedPink':\n      case 'groupedPurple':\n      case 'groupedTeal':\n      case 'groupedYellow':\n        generated[i] = getGrouped(selectedColors[i], i);\n        break;\n\n      default:\n    }\n  }\n\n  return generated;\n};\nvar isHex = function isHex(hex) {\n  return /^#[0-9A-F]{6}$/i.test(hex);\n};\nvar hexToHSL = function hexToHSL(H) {\n  // Convert hex to RGB first\n  var r = 0,\n      g = 0,\n      b = 0;\n\n  if (H.length == 4) {\n    r = '0x' + H[1] + H[1];\n    g = '0x' + H[2] + H[2];\n    b = '0x' + H[3] + H[3];\n  } else if (H.length == 7) {\n    r = '0x' + H[1] + H[2];\n    g = '0x' + H[3] + H[4];\n    b = '0x' + H[5] + H[6];\n  } // Then to HSL\n\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta == 0) h = 0;else if (cmax == r) h = (g - b) / delta % 6;else if (cmax == g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1); // return \"hsl(\" + Math.round(h) + \",\" + Math.round(s) + \",\" + Math.round(l) + \")\";\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n};\nvar HSLToHex = function HSLToHex(h, s, l) {\n  s /= 100;\n  l /= 100;\n  var c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n      m = l - c / 2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  } // Having obtained RGB, convert channels to hex\n\n\n  r = Math.round((r + m) * 255).toString(16);\n  g = Math.round((g + m) * 255).toString(16);\n  b = Math.round((b + m) * 255).toString(16); // Prepend 0s, if necessary\n\n  if (r.length == 1) r = '0' + r;\n  if (g.length == 1) g = '0' + g;\n  if (b.length == 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n_c = HSLToHex;\nvar getNeutralBaseColorsFromBrandPrimaryHex = function getNeutralBaseColorsFromBrandPrimaryHex(hex) {\n  var _hexToHSL2 = hexToHSL(hex),\n      h = _hexToHSL2.h,\n      s = _hexToHSL2.s,\n      l = _hexToHSL2.l;\n\n  s = s - 25 < 0 ? 0 : s - 25;\n  l = l - 18 < 0 ? 0 : l - 18;\n  return HSLToHex(h, s, l);\n};\nvar getNeutrals = function getNeutrals(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightVariations: 10,\n    lightPercentage: 0.95,\n    lightSaturation: 1,\n    darkVariations: 9,\n    darkPercentage: 0.9,\n    darkSaturation: 1,\n    hook: 'now-color--neutral',\n    startIndex: 0,\n    includeEnds: true\n  });\n};\n\nvar getPrimary = function getPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 1,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color--primary'\n  });\n};\n\nvar getSecondary = function getSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 1,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color--secondary'\n  });\n};\n\nvar getSelectionPrimary = function getSelectionPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 2,\n    darkPercentage: 0.5,\n    darkVariations: 2,\n    hook: 'now-color_selection--primary'\n  });\n};\n\nvar getSelectionSecondary = function getSelectionSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color_selection--secondary'\n  });\n};\n\nvar getInteractive = function getInteractive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.7,\n    darkVariations: 2,\n    hook: 'now-color--interactive'\n  });\n};\n\nvar getLink = function getLink(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.32,\n    lightVariations: 1,\n    darkPercentage: 0.63,\n    darkVariations: 2,\n    startIndex: 1,\n    hook: 'now-color--link'\n  });\n};\n\nvar getFocus = function getFocus(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.3,\n    lightVariations: 1,\n    darkPercentage: 0.63,\n    darkVariations: 1,\n    startIndex: 1,\n    hook: 'now-color--focus'\n  });\n};\n\nvar getAlertCritical = function getAlertCritical(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.6,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--critical'\n  });\n};\n\nvar getAlertHigh = function getAlertHigh(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--high'\n  });\n};\n\nvar getAlertWarning = function getAlertWarning(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--warning'\n  });\n};\n\nvar getAlertModerate = function getAlertModerate(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--moderate'\n  });\n};\n\nvar getAlertInfo = function getAlertInfo(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--info'\n  });\n};\n\nvar getAlertPositive = function getAlertPositive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.79,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--positive'\n  });\n};\n\nvar getAlertLow = function getAlertLow(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.79,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--low'\n  });\n};\n\nvar getBrand = function getBrand(hex, name) {\n  if (!hex) return [];\n  name = '--now-color_brand--' + name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ')[1].toLowerCase();\n  return [new Color(hex, name)];\n};\n\nvar getSurfaceNeutral = function getSurfaceNeutral(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[4].hex;\n\n  if (isDark) {\n    var _hexToHSL3 = hexToHSL(baseNeutral),\n        h = _hexToHSL3.h,\n        s = _hexToHSL3.s,\n        l = _hexToHSL3.l;\n\n    baseNeutral = HSLToHex(h, s * 2 > 100 ? 100 : s * 2, l);\n  }\n\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: isDark ? 0.2 : 0.95,\n    lightVariations: 6,\n    darkPercentage: isDark ? 0.4 : 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--neutral',\n    includeEnds: false,\n    isDark: isDark,\n    removeEnd: true\n  });\n  return colors;\n};\n\nvar getSurfaceDivider = function getSurfaceDivider(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[8].hex;\n\n  if (isDark) {\n    var _hexToHSL4 = hexToHSL(baseNeutral),\n        h = _hexToHSL4.h,\n        s = _hexToHSL4.s,\n        l = _hexToHSL4.l;\n\n    baseNeutral = HSLToHex(h, s * 2 > 100 ? 100 : s * 2, l);\n  }\n\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: isDark ? 0.2 : 0.9,\n    lightVariations: 6,\n    darkPercentage: isDark ? 0.4 : 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--divider',\n    includeEnds: false,\n    isDark: isDark,\n    removeEnd: true\n  });\n  return colors;\n};\n\nvar getSurfaceBrand = function getSurfaceBrand(hex, isDark) {\n  if (!hex) return [];\n  var colors = generateColorRange({\n    color: hex,\n    lightPercentage: isDark ? 0.15 : 0.9,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--brand',\n    includeEnds: false,\n    isDark: isDark\n  });\n  return colors;\n};\n\nvar getChromeBrand = function getChromeBrand(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 5,\n    hook: 'now-color_chrome--brand'\n  });\n};\n\nvar getChromeDivider = function getChromeDivider(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.6,\n    lightVariations: 5,\n    darkPercentage: 0.8,\n    darkVariations: 5,\n    hook: 'now-color_chrome--divider'\n  });\n};\n\nvar getGrouped = function getGrouped(hex, name) {\n  if (!hex) return [];\n  name = name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ');\n  name.shift();\n  name = name.map(function (e) {\n    return e.toLowerCase();\n  }).join('-');\n  return generateColorRange({\n    color: hex,\n    lightVariations: 2,\n    lightPercentage: 0.75,\n    darkVariations: 3,\n    darkPercentage: 0.65,\n    hook: \"now-color_grouped--\".concat(name),\n    startIndex: 0\n  });\n};\n\nvar getBackgroundPrimary = function getBackgroundPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[0].hex;\n  return [new Color(baseNeutral, '--now-color_background--primary')];\n};\n\nvar getBackgroundSecondary = function getBackgroundSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[1].hex;\n  return [new Color(baseNeutral, '--now-color_background--secondary')];\n};\n\nvar getBackgroundTertiary = function getBackgroundTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[14].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_background--tertiary')];\n};\n\nvar getDividerPrimary = function getDividerPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[8].hex : neutrals[4].hex;\n  return [new Color(baseNeutral, '--now-color_divider--primary')];\n};\n\nvar getDividerSecondary = function getDividerSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[10].hex : neutrals[3].hex;\n  return [new Color(baseNeutral, '--now-color_divider--secondary')];\n};\n\nvar getDividerTertiary = function getDividerTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[12].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_divider--tertiary')];\n};\n\nvar getTextPrimary = function getTextPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[0].hex : neutrals[18].hex;\n  return [new Color(baseNeutral, '--now-color_text--primary')];\n};\n\nvar getTextSecondary = function getTextSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[4].hex : neutrals[12].hex;\n  return [new Color(baseNeutral, '--now-color_text--secondary')];\n};\n\nvar getTextTertiary = function getTextTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[6].hex : neutrals[9].hex;\n  return [new Color(baseNeutral, '--now-color_text--tertiary')];\n};\n\nvar getBorderPrimary = function getBorderPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[1].hex : neutrals[7].hex;\n  return [new Color(baseNeutral, '--now-color_border--primary')];\n};\n\nvar getBorderSecondary = function getBorderSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[2].hex : neutrals[5].hex;\n  return [new Color(baseNeutral, '--now-color_border--secondary')];\n};\n\nvar getBorderTertiary = function getBorderTertiary(hex) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  return [new Color(neutrals[3].hex, '--now-color_border--tertiary')];\n};\n\nvar getBaseColors = function getBaseColors(theme) {\n  var _ref3;\n\n  return _ref3 = {\n    neutrals: rgbToHex(theme['--now-color--neutral-11']),\n    primary: rgbToHex(theme['--now-color--primary-1']),\n    secondary: rgbToHex(theme['--now-color--secondary-1']),\n    selectionPrimary: rgbToHex(theme['--now-color_selection--primary-2']),\n    selectionSecondary: rgbToHex(theme['--now-color_selection--secondary-2']),\n    interactive: rgbToHex(theme['--now-color--interactive-2']),\n    chromeBrand: rgbToHex(theme['--now-color_chrome--brand-5']),\n    chromeDivider: rgbToHex(theme['--now-color_chrome--divider-5']),\n    brandNeutral: rgbToHex(theme['--now-color_brand--neutral']),\n    brandPrimary: rgbToHex(theme['--now-color_brand--primary']),\n    brandSecondary: rgbToHex(theme['--now-color_brand--secondary']),\n    surfaceNeutral: rgbToHex(theme['--now-color--neutral-11']),\n    surfaceDivider: rgbToHex(theme['--now-color--neutral-11']),\n    surfaceBrand: rgbToHex(theme['--now-color_surface--brand-6'])\n  }, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"chromeBrand\", rgbToHex(theme['--now-color_chrome--brand-5'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"chromeDivider\", rgbToHex(theme['--now-color_chrome--divider-5'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertCritical\", rgbToHex(theme['--now-color_alert--critical-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertHigh\", rgbToHex(theme['--now-color_alert--high-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertWarning\", rgbToHex(theme['--now-color_alert--warning-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertModerate\", rgbToHex(theme['--now-color_alert--moderate-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertInfo\", rgbToHex(theme['--now-color_alert--info-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertPositive\", rgbToHex(theme['--now-color_alert--positive-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertLow\", rgbToHex(theme['--now-color_alert--low-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedBlue\", rgbToHex(theme['--now-color_grouped--blue-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedBrown\", rgbToHex(theme['--now-color_grouped--brown-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGray\", rgbToHex(theme['--now-color_grouped--gray-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGreen\", rgbToHex(theme['--now-color_grouped--green-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGreenYellow\", rgbToHex(theme['--now-color_grouped--green-yellow-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedMagenta\", rgbToHex(theme['--now-color_grouped--magenta-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedOrange\", rgbToHex(theme['--now-color_grouped--orange-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedPink\", rgbToHex(theme['--now-color_grouped--pink-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedPurple\", rgbToHex(theme['--now-color_grouped--purple-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedTeal\", rgbToHex(theme['--now-color_grouped--teal-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedYellow\", rgbToHex(theme['--now-color_grouped--yellow-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"link\", rgbToHex(theme['--now-color--link-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"focus\", rgbToHex(theme['--now-color--focus-2'])), _ref3;\n};\n\nvar luminance = function luminance(rgb) {\n  var a = rgb.split(',').map(function (v) {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n};\n\nvar getContrastRatio = function getContrastRatio(color1, color2) {\n  if (!color1 || !color2) return {\n    normal: {},\n    large: {},\n    ratio: null\n  };\n\n  if (isHex(color1)) {\n    color1 = hexToRgb(color1);\n  }\n\n  if (isHex(color2)) {\n    color2 = hexToRgb(color2);\n  }\n\n  var color1luminance = luminance(color1);\n  var color2luminance = luminance(color2);\n  var ratio = color1luminance > color2luminance ? (color2luminance + 0.05) / (color1luminance + 0.05) : (color1luminance + 0.05) / (color2luminance + 0.05);\n  var out = {\n    normal: {\n      aa: ratio < 1 / 4.5 ? 'Pass' : 'Fail',\n      aaa: ratio < 1 / 7 ? 'Pass' : 'Fail'\n    },\n    large: {\n      aa: ratio < 1 / 3 ? 'Pass' : 'Fail',\n      aaa: ratio < 1 / 4.5 ? 'Pass' : 'Fail'\n    },\n    nonText: {\n      aa: ratio < 1 / 3 ? 'Pass' : 'Fail'\n    },\n    ratio: Math.floor(1 / ratio * 10) / 10\n  };\n  return out;\n};\nvar getComplimentaryColors = function getComplimentaryColors(baseColor, variations) {\n  if (!baseColor || !variations) {\n    return [];\n  }\n\n  var _hexToHSL5 = hexToHSL(baseColor),\n      h = _hexToHSL5.h,\n      s = _hexToHSL5.s,\n      l = _hexToHSL5.l;\n\n  var range = Math.round(360 / variations);\n  var out = [new Color(baseColor)];\n\n  for (var i = 1; i < variations; i++) {\n    var newH = h - range * i;\n\n    if (newH < 0) {\n      newH = 360 - Math.abs(newH);\n    }\n\n    out.push(new Color(HSLToHex(newH, s, l)));\n  }\n\n  return out;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HSLToHex\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2NvbG9yLWdlbmVyYXRvci9nZW5lcmF0ZUNvbG9yc1AuanM/YWQyNCJdLCJuYW1lcyI6WyJDb2xvciIsImNvbG9yIiwibmFtZSIsImhleCIsInJnYiIsImhleFRvUmdiIiwiY29sb3JTdHJpbmciLCJ0b1N0cmluZyIsImxlbmd0aCIsImNhbGN1bGF0ZUNvbG9yIiwiY29sb3IxIiwiY29sb3IyIiwicmF0aW8iLCJNYXRoIiwicm91bmQiLCJ0b0ZpeGVkIiwiciIsInBhcnNlSW50Iiwic3Vic3RyaW5nIiwiZyIsImIiLCJyZ2JUb0hleCIsIm5ld1JHQiIsInNwbGl0IiwiZ2VuZXJhdGVDb2xvcnMiLCJ2YXJpYXRpb25zIiwic3RhcnRzV2l0aCIsInBlcmNlbnRhZ2UiLCJjb2xvcnMiLCJpIiwic2xpY2UiLCJnZW5lcmF0ZUNvbG9yUmFuZ2UiLCJsaWdodFZhcmlhdGlvbnMiLCJsaWdodFBlcmNlbnRhZ2UiLCJsaWdodFNhdHVyYXRpb24iLCJkYXJrVmFyaWF0aW9ucyIsImRhcmtQZXJjZW50YWdlIiwiZGFya1NhdHVyYXRpb24iLCJob29rIiwic3RhcnRJbmRleCIsImluY2x1ZGVFbmRzIiwiaXNEYXJrIiwicmVtb3ZlRW5kIiwibGlnaHRCYXNlQ29sb3JIU0wiLCJoZXhUb0hTTCIsInMiLCJIU0xUb0hleCIsImgiLCJsIiwiZmlyc3RDb2xvciIsImxhc3RDb2xvciIsImxpZ2h0Q29sb3JzIiwiZGFya0NvbG9ycyIsIm91dCIsInBvcCIsInJldmVyc2UiLCJtYXAiLCJpbmRleCIsImdlbmVyYXRlQ29sb3JTY2FsZSIsImxpZ2h0SW5jcmVtZW50cyIsInNhdHVyYXRpb25JbmNyZW1lbnRzIiwiY2FsY3VsYXRlZENvbG9yIiwiY29uc29sZSIsImxvZyIsInNJbmMiLCJuZXdIZXgiLCJwdXNoIiwiZ2V0Q29sb3JzIiwic2VsZWN0ZWRDb2xvcnMiLCJnZW5lcmF0ZWQiLCJnZXROZXV0cmFscyIsImdldFN1cmZhY2VOZXV0cmFsIiwiZ2V0U3VyZmFjZURpdmlkZXIiLCJnZXRCYWNrZ3JvdW5kUHJpbWFyeSIsImdldEJhY2tncm91bmRTZWNvbmRhcnkiLCJnZXRCYWNrZ3JvdW5kVGVydGlhcnkiLCJnZXREaXZpZGVyUHJpbWFyeSIsImdldERpdmlkZXJTZWNvbmRhcnkiLCJnZXREaXZpZGVyVGVydGlhcnkiLCJnZXRUZXh0UHJpbWFyeSIsImdldFRleHRTZWNvbmRhcnkiLCJnZXRUZXh0VGVydGlhcnkiLCJnZXRCb3JkZXJQcmltYXJ5IiwiZ2V0Qm9yZGVyU2Vjb25kYXJ5IiwiZ2V0Qm9yZGVyVGVydGlhcnkiLCJnZXRQcmltYXJ5IiwiZ2V0U2Vjb25kYXJ5IiwiZ2V0U2VsZWN0aW9uUHJpbWFyeSIsImdldFNlbGVjdGlvblNlY29uZGFyeSIsImdldEludGVyYWN0aXZlIiwiZ2V0TGluayIsImdldEZvY3VzIiwiZ2V0QWxlcnRDcml0aWNhbCIsImdldEFsZXJ0SGlnaCIsImdldEFsZXJ0V2FybmluZyIsImdldEFsZXJ0TW9kZXJhdGUiLCJnZXRBbGVydEluZm8iLCJnZXRBbGVydFBvc2l0aXZlIiwiZ2V0QWxlcnRMb3ciLCJnZXRCcmFuZCIsImdldFN1cmZhY2VCcmFuZCIsImdldENocm9tZUJyYW5kIiwiZ2V0Q2hyb21lRGl2aWRlciIsImdldEdyb3VwZWQiLCJpc0hleCIsInRlc3QiLCJIIiwiY21pbiIsIm1pbiIsImNtYXgiLCJtYXgiLCJkZWx0YSIsImFicyIsImMiLCJ4IiwibSIsImdldE5ldXRyYWxCYXNlQ29sb3JzRnJvbUJyYW5kUHJpbWFyeUhleCIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsIm5ldXRyYWxzIiwiYmFzZU5ldXRyYWwiLCJzaGlmdCIsImUiLCJqb2luIiwiZ2V0QmFzZUNvbG9ycyIsInRoZW1lIiwicHJpbWFyeSIsInNlY29uZGFyeSIsInNlbGVjdGlvblByaW1hcnkiLCJzZWxlY3Rpb25TZWNvbmRhcnkiLCJpbnRlcmFjdGl2ZSIsImNocm9tZUJyYW5kIiwiY2hyb21lRGl2aWRlciIsImJyYW5kTmV1dHJhbCIsImJyYW5kUHJpbWFyeSIsImJyYW5kU2Vjb25kYXJ5Iiwic3VyZmFjZU5ldXRyYWwiLCJzdXJmYWNlRGl2aWRlciIsInN1cmZhY2VCcmFuZCIsImx1bWluYW5jZSIsImEiLCJ2IiwicG93IiwiZ2V0Q29udHJhc3RSYXRpbyIsIm5vcm1hbCIsImxhcmdlIiwiY29sb3IxbHVtaW5hbmNlIiwiY29sb3IybHVtaW5hbmNlIiwiYWEiLCJhYWEiLCJub25UZXh0IiwiZmxvb3IiLCJnZXRDb21wbGltZW50YXJ5Q29sb3JzIiwiYmFzZUNvbG9yIiwicmFuZ2UiLCJuZXdIIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUFNQSxLLEdBQ0wsZUFBWUMsS0FBWixFQUFtQkMsSUFBbkIsRUFBeUI7QUFBQTs7QUFDeEIsT0FBS0MsR0FBTCxHQUFXRixLQUFYO0FBQ0EsT0FBS0csR0FBTCxHQUFXQyxRQUFRLENBQUNKLEtBQUQsQ0FBbkI7QUFDQSxPQUFLQyxJQUFMLEdBQVlBLElBQVo7QUFDQSxDOztBQUdGLElBQU1DLEdBQUcsR0FBRyxTQUFOQSxHQUFNLENBQUNGLEtBQUQsRUFBVztBQUN0QixNQUFNSyxXQUFXLEdBQUdMLEtBQUssQ0FBQ00sUUFBTixDQUFlLEVBQWYsQ0FBcEI7QUFDQSxTQUFPRCxXQUFXLENBQUNFLE1BQVosS0FBdUIsQ0FBdkIsY0FBK0JGLFdBQS9CLElBQStDQSxXQUF0RDtBQUNBLENBSEQ7O0FBS0EsSUFBTUcsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixDQUFDQyxNQUFELEVBQVNDLE1BQVQsRUFBaUJDLEtBQWpCLEVBQTJCO0FBQ2pEQSxPQUFLLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDQyxLQUFMLENBQVdGLEtBQUssR0FBRyxHQUFuQixJQUEwQixHQUEzQixFQUFnQ0csT0FBaEMsQ0FBd0MsQ0FBeEMsQ0FBUjtBQUVBLE1BQU1DLENBQUMsR0FBR0gsSUFBSSxDQUFDQyxLQUFMLENBQ1RHLFFBQVEsQ0FBQ04sTUFBTSxDQUFDTyxTQUFQLENBQWlCLENBQWpCLEVBQW9C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R0osVUFBcEIsRUFBZ0NJLENBQUMsRUFBakMsRUFBcUM7QUFDcEMsUUFBSThILElBQUksR0FBRzVHLENBQUMsR0FBRzJHLEtBQUssR0FBRzdILENBQXZCOztBQUNBLFFBQUk4SCxJQUFJLEdBQUcsQ0FBWCxFQUFjO0FBQ2JBLFVBQUksR0FBRyxNQUFNOUksSUFBSSxDQUFDbUcsR0FBTCxDQUFTMkMsSUFBVCxDQUFiO0FBQ0E7O0FBRUR0RyxPQUFHLENBQUNhLElBQUosQ0FBUyxJQUFJbEUsS0FBSixDQUFVOEMsUUFBUSxDQUFDNkcsSUFBRCxFQUFPOUcsQ0FBUCxFQUFVRyxDQUFWLENBQWxCLENBQVQ7QUFDQTs7QUFFRCxTQUFPSyxHQUFQO0FBQ0EsQ0FuQk0iLCJmaWxlIjoiLi9saWIvY29sb3ItZ2VuZXJhdG9yL2dlbmVyYXRlQ29sb3JzUC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENvbG9yIHtcblx0Y29uc3RydWN0b3IoY29sb3IsIG5hbWUpIHtcblx0XHR0aGlzLmhleCA9IGNvbG9yO1xuXHRcdHRoaXMucmdiID0gaGV4VG9SZ2IoY29sb3IpO1xuXHRcdHRoaXMubmFtZSA9IG5hbWU7XG5cdH1cbn1cblxuY29uc3QgaGV4ID0gKGNvbG9yKSA9PiB7XG5cdGNvbnN0IGNvbG9yU3RyaW5nID0gY29sb3IudG9TdHJpbmcoMTYpO1xuXHRyZXR1cm4gY29sb3JTdHJpbmcubGVuZ3RoID09PSAxID8gYDAke2NvbG9yU3RyaW5nfWAgOiBjb2xvclN0cmluZztcbn07XG5cbmNvbnN0IGNhbGN1bGF0ZUNvbG9yID0gKGNvbG9yMSwgY29sb3IyLCByYXRpbykgPT4ge1xuXHRyYXRpbyA9IChNYXRoLnJvdW5kKHJhdGlvICogMTAwKSAvIDEwMCkudG9GaXhlZCgyKTtcblxuXHRjb25zdCByID0gTWF0aC5yb3VuZChcblx0XHRwYXJzZUludChjb2xvcjIuc3Vic3RyaW5nKDAsIDIpLCAxNikgKiByYXRpbyArXG5cdFx0XHRwYXJzZUludChjb2xvcjEuc3Vic3RyaW5nKDAsIDIpLCAxNikgKiAoMSAtIHJhdGlvKVxuXHQpO1xuXHRjb25zdCBnID0gTWF0aC5yb3VuZChcblx0XHRwYXJzZUludChjb2xvcjIuc3Vic3RyaW5nKDIsIDQpLCAxNikgKiByYXRpbyArXG5cdFx0XHRwYXJzZUludChjb2xvcjEuc3Vic3RyaW5nKDIsIDQpLCAxNikgKiAoMSAtIHJhdGlvKVxuXHQpO1xuXHRjb25zdCBiID0gTWF0aC5yb3VuZChcblx0XHRwYXJzZUludChjb2xvcjIuc3Vic3RyaW5nKDQsIDYpLCAxNikgKiByYXRpbyArXG5cdFx0XHRwYXJzZUludChjb2xvcjEuc3Vic3RyaW5nKDQsIDYpLCAxNikgKiAoMSAtIHJhdGlvKVxuXHQpO1xuXG5cdHJldHVybiBoZXgocikgKyBoZXgoZykgKyBoZXgoYik7XG59O1xuXG5jb25zdCBoZXhUb1JnYiA9IChoZXgpID0+IHtcblx0Y29uc3QgciA9IHBhcnNlSW50KGhleC5zdWJzdHJpbmcoMSwgMyksIDE2KTtcblx0Y29uc3QgZyA9IHBhcnNlSW50KGhleC5zdWJzdHJpbmcoMywgNSksIDE2KTtcblx0Y29uc3QgYiA9IHBhcnNlSW50KGhleC5zdWJzdHJpbmcoNSwgNyksIDE2KTtcblxuXHRyZXR1cm4gYCR7cn0sJHtnfSwke2J9YDtcbn07XG5cbmNvbnN0IHJnYlRvSGV4ID0gKHJnYikgPT4ge1xuXHRpZiAoIXJnYikgcmV0dXJuICcnO1xuXG5cdGNvbnN0IG5ld1JHQiA9IHJnYi5zcGxpdCgnLCcpO1xuXG5cdGxldCByID0gcGFyc2VJbnQobmV3UkdCWzBdKS50b1N0cmluZygxNik7XG5cdGxldCBnID0gcGFyc2VJbnQobmV3UkdCWzFdKS50b1N0cmluZygxNik7XG5cdGxldCBiID0gcGFyc2VJbnQobmV3UkdCWzJdKS50b1N0cmluZygxNik7XG5cblx0aWYgKHIubGVuZ3RoID09PSAxKSByID0gJzAnICsgcjtcblx0aWYgKGcubGVuZ3RoID09PSAxKSBnID0gJzAnICsgZztcblx0aWYgKGIubGVuZ3RoID09PSAxKSBiID0gJzAnICsgYjtcblxuXHRyZXR1cm4gJyMnICsgciArIGcgKyBiO1xufTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ29sb3JzID0gKGNvbG9yMSwgY29sb3IyLCB2YXJpYXRpb25zKSA9PiB7XG5cdGlmICghdmFyaWF0aW9ucykge1xuXHRcdHJldHVybiBbXTtcblx0fVxuXG5cdGNvbG9yMSA9IGNvbG9yMS5zdGFydHNXaXRoKCcjJykgPyBjb2xvcjEgOiBgIyR7Y29sb3IxfWA7XG5cdGNvbG9yMiA9IGNvbG9yMi5zdGFydHNXaXRoKCcjJykgPyBjb2xvcjIgOiBgIyR7Y29sb3IyfWA7XG5cdGxldCBwZXJjZW50YWdlID0gMSAvIHZhcmlhdGlvbnM7XG5cdGxldCBjb2xvcnMgPSBbXTtcblxuXHRmb3IgKGxldCBpID0gMTsgaSA8PSB2YXJpYXRpb25zIC0gMTsgaSsrKSB7XG5cdFx0Y29sb3JzID0gW1xuXHRcdFx0Li4uY29sb3JzLFxuXHRcdFx0JyMnICsgY2FsY3VsYXRlQ29sb3IoY29sb3IxLnNsaWNlKDEpLCBjb2xvcjIuc2xpY2UoMSksIGkgKiBwZXJjZW50YWdlKSxcblx0XHRdO1xuXHR9XG5cblx0cmV0dXJuIGNvbG9ycztcbn07XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZUNvbG9yUmFuZ2UgPSAoe1xuXHRjb2xvcixcblx0bGlnaHRWYXJpYXRpb25zLFxuXHRsaWdodFBlcmNlbnRhZ2UsXG5cdGxpZ2h0U2F0dXJhdGlvbixcblx0ZGFya1ZhcmlhdGlvbnMsXG5cdGRhcmtQZXJjZW50YWdlLFxuXHRkYXJrU2F0dXJhdGlvbixcblx0aG9vayA9ICdob29rJyxcblx0c3RhcnRJbmRleCxcblx0aW5jbHVkZUVuZHMsXG5cdGlzRGFyayxcblx0cmVtb3ZlRW5kLFxufSkgPT4ge1xuXHRpZiAoIWNvbG9yKSByZXR1cm4gW107XG5cblxuXHRpZiAobGlnaHRTYXR1cmF0aW9uKSB7XG5cdFx0Y29uc3QgbGlnaHRCYXNlQ29sb3JIU0wgPSBoZXhUb0hTTChjb2xvcik7XG5cdFx0bGlnaHRCYXNlQ29sb3JIU0wucyA9IGxpZ2h0QmFzZUNvbG9ySFNMLnMgKyBsaWdodEJhc2VDb2xvckhTTC5zICogbGlnaHRTYXR1cmF0aW9uO1xuXHRcdGNvbG9yID0gSFNMVG9IZXgobGlnaHRCYXNlQ29sb3JIU0wuaCwgbGlnaHRCYXNlQ29sb3JIU0wucywgbGlnaHRCYXNlQ29sb3JIU0wubCk7XG5cdH1cblxuXG5cblx0bGV0IGZpcnN0Q29sb3IgPSBjYWxjdWxhdGVDb2xvcihcblx0XHQnZmZmZmZmJyxcblx0XHRjb2xvci5zbGljZSgxKSxcblx0XHQxIC0gbGlnaHRQZXJjZW50YWdlXG5cdCk7XG5cdGxldCBsYXN0Q29sb3IgPSBjYWxjdWxhdGVDb2xvcihjb2xvci5zbGljZSgxKSwgJzAwMDAwMCcsIGRhcmtQZXJjZW50YWdlKTtcblxuXG5cdC8vIGlmIChsaWdodFNhdHVyYXRpb24pIHtcblx0Ly8gXHRsZXQgZmlyc3RIU0wgPSBoZXhUb0hTTCgnIycgKyBmaXJzdENvbG9yKTtcblx0Ly8gXHRjb25zdCBuZXdGaXJzdFMgPSBmaXJzdEhTTC5zICsgbGlnaHRTYXR1cmF0aW9uICogZmlyc3RIU0wucztcblx0Ly8gXHRmaXJzdEhTTC5zID0gbmV3Rmlyc3RTID4gMTAwID8gMTAwIDogbmV3Rmlyc3RTO1xuXG5cdC8vIFx0Ly8gY29uc3QgZmlyc3RIRGlmZiA9IGhleFRvSFNMKGNvbG9yKS5oIC0gZmlyc3RIU0wuaDtcblx0Ly8gXHQvLyBpZiAoTWF0aC5hYnMoZmlyc3RIRGlmZikgPiAyMCkge1xuXHQvLyBcdC8vIFx0Zmlyc3RIU0wuaCA9IGhleFRvSFNMKGNvbG9yKS5oO1xuXHQvLyBcdC8vIH1cblxuXHQvLyBcdGZpcnN0Q29sb3IgPSBIU0xUb0hleChmaXJzdEhTTC5oLCBmaXJzdEhTTC5zLCBmaXJzdEhTTC5sKS5zdWJzdHJpbmcoMSk7XG5cdC8vIH1cblxuXHQvLyBpZiAoZGFya1NhdHVyYXRpb24pIHtcblx0Ly8gXHRsZXQgbGFzdEhTTCA9IGhleFRvSFNMKCcjJyArIGxhc3RDb2xvcik7XG5cdC8vIFx0Y29uc3QgbmV3TGFzdFMgPSBsYXN0SFNMLnMgKyBkYXJrU2F0dXJhdGlvbiAqIGxhc3RIU0wucztcblx0Ly8gXHRsYXN0SFNMLnMgPSBuZXdMYXN0UyA+IDEwMCA/IDEwMCA6IG5ld0xhc3RTO1xuXG5cdC8vIFx0Ly8gY29uc3QgbGFzdEhEaWZmID0gaGV4VG9IU0woY29sb3IpLmggLSBsYXN0SFNMLmg7XG5cdC8vIFx0Ly8gaWYgKE1hdGguYWJzKGxhc3RIRGlmZikgPiAyMCkge1xuXHQvLyBcdC8vIFx0bGFzdEhTTC5oID0gaGV4VG9IU0woY29sb3IpLmg7XG5cdC8vIFx0Ly8gfVxuXG5cdC8vIFx0bGFzdENvbG9yID0gSFNMVG9IZXgobGFzdEhTTC5oLCBsYXN0SFNMLnMsIGxhc3RIU0wubCkuc3Vic3RyaW5nKDEpO1xuXHQvLyB9XG5cblx0Y29uc3QgbGlnaHRDb2xvcnMgPSBnZW5lcmF0ZUNvbG9ycyhmaXJzdENvbG9yLCBjb2xvciwgbGlnaHRWYXJpYXRpb25zKTtcblx0Y29uc3QgZGFya0NvbG9ycyA9IGdlbmVyYXRlQ29sb3JzKGNvbG9yLCBsYXN0Q29sb3IsIGRhcmtWYXJpYXRpb25zKTtcblxuXHRsZXQgb3V0ID0gW107XG5cdGlmIChsaWdodFZhcmlhdGlvbnMpIHtcblx0XHRvdXQgPSBbYCMke2ZpcnN0Q29sb3J9YCwgLi4ubGlnaHRDb2xvcnMsIC4uLm91dF07XG5cdH1cblxuXHRvdXQgPSBbLi4ub3V0LCBjb2xvcl07XG5cblx0aWYgKGRhcmtWYXJpYXRpb25zKSB7XG5cdFx0b3V0ID0gWy4uLm91dCwgLi4uZGFya0NvbG9ycywgYCMke2xhc3RDb2xvcn1gXTtcblx0fVxuXG5cdGlmIChpbmNsdWRlRW5kcykge1xuXHRcdG91dCA9IFtgI2ZmZmZmZmAsIC4uLm91dCwgYCMwMDAwMDBgXTtcblx0fVxuXG5cdGlmIChyZW1vdmVFbmQpIHtcblx0XHRvdXQucG9wKCk7XG5cdH1cblxuXHRpZiAoaXNEYXJrKSB7XG5cdFx0b3V0LnJldmVyc2UoKTtcblx0fVxuXG5cdHJldHVybiBvdXQubWFwKChjb2xvciwgaW5kZXgpID0+IHtcblx0XHRsZXQgbmFtZSA9IGAtLSR7aG9va31gO1xuXHRcdGlmIChzdGFydEluZGV4ICE9PSBudWxsKSB7XG5cdFx0XHRuYW1lICs9IGAtJHtpbmRleCArIChzdGFydEluZGV4ID8gc3RhcnRJbmRleCA6IDApfWA7XG5cdFx0fVxuXHRcdHJldHVybiBuZXcgQ29sb3IoY29sb3IsIG5hbWUpO1xuXHR9KTtcbn07XG5cblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ29sb3JTY2FsZSA9ICh7XG5cdGNvbG9yLFxuXHRsaWdodFZhcmlhdGlvbnMsXG5cdGxpZ2h0UGVyY2VudGFnZSxcblx0bGlnaHRTYXR1cmF0aW9uLFxuXHRkYXJrVmFyaWF0aW9ucyxcblx0ZGFya1BlcmNlbnRhZ2UsXG5cdGRhcmtTYXR1cmF0aW9uLFxuXHRob29rID0gJ2hvb2snLFxuXHRzdGFydEluZGV4LFxuXHRpbmNsdWRlRW5kcyxcblx0aXNEYXJrLFxuXHRyZW1vdmVFbmQsXG59KSA9PiB7XG5cdGlmICghY29sb3IpIHJldHVybiBbXTtcblxuXHRjb25zdCBsaWdodENvbG9ycyA9IFtdO1xuXHRjb25zdCBkYXJrQ29sb3JzID0gW107XG5cblxuXHQvLyAjNWU2NTczXG5cdC8vIDk0LCAxMDEsIDExNVxuXHQvLyAyMjDCsCwgMTAlLCA0MSVcblxuXHQvLyAjNjE2ODc1XG5cdC8vIDk3LCAxMDQsIDExN1xuXHQvLyAyMTnCsCwgOSUsIDQyJVxuXG5cblxuXG5cdC8vIHdpdGhvdXQgc2F0dXJhdGlvblxuXHQvLyAjNWY2NTcyXG5cdC8vIDk1LCAxMDEsIDExNFxuXHQvLyAyMjHCsCwgOSUsIDQxJVxuXG5cdC8vICM2MjY4NzRcblx0Ly8gOTgsIDEwNCwgMTE2XG5cdC8vIDIyMMKwLCA4JSwgNDIlXG5cblxuXG5cblx0Y29uc3QgbGlnaHRJbmNyZW1lbnRzID0gbGlnaHRQZXJjZW50YWdlL2xpZ2h0VmFyaWF0aW9ucztcblx0Y29uc3Qgc2F0dXJhdGlvbkluY3JlbWVudHMgPSBsaWdodFNhdHVyYXRpb24vbGlnaHRWYXJpYXRpb25zO1xuXG5cblx0Ly8gY29uc3RcblxuXHRmb3IodmFyIGk9MDsgaTxsaWdodFZhcmlhdGlvbnM7IGkrKykge1xuXHRcdGNvbnN0IGNhbGN1bGF0ZWRDb2xvciA9IGNhbGN1bGF0ZUNvbG9yKFxuXHRcdFx0J2ZmZmZmZicsXG5cdFx0XHRjb2xvci5zbGljZSgxKSxcblx0XHRcdDEgLSAoKGkgKyAxKSAqIGxpZ2h0SW5jcmVtZW50cylcblx0XHQpO1xuXHRcdGNvbnNvbGUubG9nKGNhbGN1bGF0ZWRDb2xvcik7XG5cblx0XHRsZXQge2gsIHMsIGx9ID0gaGV4VG9IU0woYCMke2NhbGN1bGF0ZWRDb2xvcn1gKTtcblx0XHRjb25zb2xlLmxvZyhzKTtcblx0XHRjb25zb2xlLmxvZyhzYXR1cmF0aW9uSW5jcmVtZW50cylcblx0XHRjb25zb2xlLmxvZygnLS0tLS0tJywgKGkgKyAxKSAqIHNhdHVyYXRpb25JbmNyZW1lbnRzKTtcblx0XHRjb25zb2xlLmxvZygnc2F0IGluY3JlbWVudHMnLCBzICsgKChpICsgMSkgKiBzYXR1cmF0aW9uSW5jcmVtZW50cykpXG5cdFx0Y29uc3Qgc0luYyA9IHMgKyAoKGkgKyAxKSAqIHNhdHVyYXRpb25JbmNyZW1lbnRzKTtcblx0XHRzID0gc0luYyA+IDEwMCA/IDEwMCA6IHNJbmM7XG5cblx0XHRjb25zdCBuZXdIZXggPSBIU0xUb0hleChoLCBzLCBsKTtcblx0XHRsaWdodENvbG9ycy5wdXNoKG5ld0hleCk7XG5cdH1cblxuXHRjb25zb2xlLmxvZyhsaWdodENvbG9ycylcblxuXHRpZiAoaW5jbHVkZUVuZHMpIHtcblx0XHRsaWdodENvbG9ycy5wdXNoKCcjZmZmZmZmJylcblx0fVxuXG5cdGxpZ2h0Q29sb3JzLnJldmVyc2UoKTtcblxuXG5cdGNvbnN0IG91dCA9IFsuLi5saWdodENvbG9ycywgY29sb3JdO1xuXG5cblx0cmV0dXJuIG91dC5tYXAoKGNvbG9yLCBpbmRleCkgPT4ge1xuXHRcdGxldCBuYW1lID0gYC0tJHtob29rfWA7XG5cdFx0aWYgKHN0YXJ0SW5kZXggIT09IG51bGwpIHtcblx0XHRcdG5hbWUgKz0gYC0ke2luZGV4ICsgKHN0YXJ0SW5kZXggPyBzdGFydEluZGV4IDogMCl9YDtcblx0XHR9XG5cdFx0cmV0dXJuIG5ldyBDb2xvcihjb2xvciwgbmFtZSk7XG5cdH0pO1xuXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q29sb3JzID0gKHNlbGVjdGVkQ29sb3JzLCBpc0RhcmsgPSBmYWxzZSkgPT4ge1xuXHRjb25zdCBnZW5lcmF0ZWQgPSB7fTtcblxuXHRmb3IgKGNvbnN0IGkgaW4gc2VsZWN0ZWRDb2xvcnMpIHtcblx0XHRzd2l0Y2ggKGkpIHtcblx0XHRcdGNhc2UgJ25ldXRyYWxzJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0TmV1dHJhbHMoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ3N1cmZhY2VOZXV0cmFsJ10gPSBnZXRTdXJmYWNlTmV1dHJhbChcblx0XHRcdFx0XHRzZWxlY3RlZENvbG9yc1tpXSxcblx0XHRcdFx0XHRpc0Rhcmtcblx0XHRcdFx0KTtcblx0XHRcdFx0Z2VuZXJhdGVkWydzdXJmYWNlRGl2aWRlciddID0gZ2V0U3VyZmFjZURpdmlkZXIoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnYmFja2dyb3VuZFByaW1hcnknXSA9IGdldEJhY2tncm91bmRQcmltYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2JhY2tncm91bmRTZWNvbmRhcnknXSA9IGdldEJhY2tncm91bmRTZWNvbmRhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnYmFja2dyb3VuZFRlcnRpYXJ5J10gPSBnZXRCYWNrZ3JvdW5kVGVydGlhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnZGl2aWRlclByaW1hcnknXSA9IGdldERpdmlkZXJQcmltYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2RpdmlkZXJTZWNvbmRhcnknXSA9IGdldERpdmlkZXJTZWNvbmRhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnZGl2aWRlclRlcnRpYXJ5J10gPSBnZXREaXZpZGVyVGVydGlhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsndGV4dFByaW1hcnknXSA9IGdldFRleHRQcmltYXJ5KHNlbGVjdGVkQ29sb3JzW2ldLCBpc0RhcmspO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ3RleHRTZWNvbmRhcnknXSA9IGdldFRleHRTZWNvbmRhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsndGV4dFRlcnRpYXJ5J10gPSBnZXRUZXh0VGVydGlhcnkoc2VsZWN0ZWRDb2xvcnNbaV0sIGlzRGFyayk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnYm9yZGVyUHJpbWFyeSddID0gZ2V0Qm9yZGVyUHJpbWFyeShcblx0XHRcdFx0XHRzZWxlY3RlZENvbG9yc1tpXSxcblx0XHRcdFx0XHRpc0Rhcmtcblx0XHRcdFx0KTtcblx0XHRcdFx0Z2VuZXJhdGVkWydib3JkZXJTZWNvbmRhcnknXSA9IGdldEJvcmRlclNlY29uZGFyeShcblx0XHRcdFx0XHRzZWxlY3RlZENvbG9yc1tpXSxcblx0XHRcdFx0XHRpc0Rhcmtcblx0XHRcdFx0KTtcblx0XHRcdFx0Z2VuZXJhdGVkWydib3JkZXJUZXJ0aWFyeSddID0gZ2V0Qm9yZGVyVGVydGlhcnkoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAncHJpbWFyeSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldFByaW1hcnkoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnc2Vjb25kYXJ5Jzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0U2Vjb25kYXJ5KHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ3NlbGVjdGlvblByaW1hcnknOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRTZWxlY3Rpb25QcmltYXJ5KHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ3NlbGVjdGlvblNlY29uZGFyeSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldFNlbGVjdGlvblNlY29uZGFyeShzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdpbnRlcmFjdGl2ZSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEludGVyYWN0aXZlKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2xpbmsnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRMaW5rKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2ZvY3VzJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0Rm9jdXMoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRDcml0aWNhbCc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEFsZXJ0Q3JpdGljYWwoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRIaWdoJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0QWxlcnRIaWdoKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2FsZXJ0V2FybmluZyc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEFsZXJ0V2FybmluZyhzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdhbGVydE1vZGVyYXRlJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0QWxlcnRNb2RlcmF0ZShzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdhbGVydEluZm8nOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRBbGVydEluZm8oc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRQb3NpdGl2ZSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEFsZXJ0UG9zaXRpdmUoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRMb3cnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRBbGVydExvdyhzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdicmFuZE5ldXRyYWwnOlxuXHRcdFx0Y2FzZSAnYnJhbmRQcmltYXJ5Jzpcblx0XHRcdGNhc2UgJ2JyYW5kU2Vjb25kYXJ5Jzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0QnJhbmQoc2VsZWN0ZWRDb2xvcnNbaV0sIGkpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3N1cmZhY2VCcmFuZCc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldFN1cmZhY2VCcmFuZChzZWxlY3RlZENvbG9yc1tpXSwgaXNEYXJrKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdjaHJvbWVCcmFuZCc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldENocm9tZUJyYW5kKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2Nocm9tZURpdmlkZXInOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRDaHJvbWVEaXZpZGVyKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2dyb3VwZWRCbHVlJzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRCcm93bic6XG5cdFx0XHRjYXNlICdncm91cGVkR3JheSc6XG5cdFx0XHRjYXNlICdncm91cGVkR3JlZW4nOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZEdyZWVuWWVsbG93Jzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRNYWdlbnRhJzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRPcmFuZ2UnOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZFBpbmsnOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZFB1cnBsZSc6XG5cdFx0XHRjYXNlICdncm91cGVkVGVhbCc6XG5cdFx0XHRjYXNlICdncm91cGVkWWVsbG93Jzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0R3JvdXBlZChzZWxlY3RlZENvbG9yc1tpXSwgaSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRkZWZhdWx0OlxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBnZW5lcmF0ZWQ7XG59O1xuXG5leHBvcnQgY29uc3QgaXNIZXggPSAoaGV4KSA9PiB7XG5cdHJldHVybiAvXiNbMC05QS1GXXs2fSQvaS50ZXN0KGhleCk7XG59O1xuXG5leHBvcnQgY29uc3QgaGV4VG9IU0wgPSAoSCkgPT4ge1xuXHQvLyBDb252ZXJ0IGhleCB0byBSR0IgZmlyc3Rcblx0bGV0IHIgPSAwLFxuXHRcdGcgPSAwLFxuXHRcdGIgPSAwO1xuXHRpZiAoSC5sZW5ndGggPT0gNCkge1xuXHRcdHIgPSAnMHgnICsgSFsxXSArIEhbMV07XG5cdFx0ZyA9ICcweCcgKyBIWzJdICsgSFsyXTtcblx0XHRiID0gJzB4JyArIEhbM10gKyBIWzNdO1xuXHR9IGVsc2UgaWYgKEgubGVuZ3RoID09IDcpIHtcblx0XHRyID0gJzB4JyArIEhbMV0gKyBIWzJdO1xuXHRcdGcgPSAnMHgnICsgSFszXSArIEhbNF07XG5cdFx0YiA9ICcweCcgKyBIWzVdICsgSFs2XTtcblx0fVxuXHQvLyBUaGVuIHRvIEhTTFxuXHRyIC89IDI1NTtcblx0ZyAvPSAyNTU7XG5cdGIgLz0gMjU1O1xuXHRsZXQgY21pbiA9IE1hdGgubWluKHIsIGcsIGIpLFxuXHRcdGNtYXggPSBNYXRoLm1heChyLCBnLCBiKSxcblx0XHRkZWx0YSA9IGNtYXggLSBjbWluLFxuXHRcdGggPSAwLFxuXHRcdHMgPSAwLFxuXHRcdGwgPSAwO1xuXG5cdGlmIChkZWx0YSA9PSAwKSBoID0gMDtcblx0ZWxzZSBpZiAoY21heCA9PSByKSBoID0gKChnIC0gYikgLyBkZWx0YSkgJSA2O1xuXHRlbHNlIGlmIChjbWF4ID09IGcpIGggPSAoYiAtIHIpIC8gZGVsdGEgKyAyO1xuXHRlbHNlIGggPSAociAtIGcpIC8gZGVsdGEgKyA0O1xuXG5cdGggPSBNYXRoLnJvdW5kKGggKiA2MCk7XG5cblx0aWYgKGggPCAwKSBoICs9IDM2MDtcblxuXHRsID0gKGNtYXggKyBjbWluKSAvIDI7XG5cdHMgPSBkZWx0YSA9PSAwID8gMCA6IGRlbHRhIC8gKDEgLSBNYXRoLmFicygyICogbCAtIDEpKTtcblx0cyA9ICsocyAqIDEwMCkudG9GaXhlZCgxKTtcblx0bCA9ICsobCAqIDEwMCkudG9GaXhlZCgxKTtcblxuXHQvLyByZXR1cm4gXCJoc2woXCIgKyBNYXRoLnJvdW5kKGgpICsgXCIsXCIgKyBNYXRoLnJvdW5kKHMpICsgXCIsXCIgKyBNYXRoLnJvdW5kKGwpICsgXCIpXCI7XG5cdHJldHVybiB7XG5cdFx0aDogTWF0aC5yb3VuZChoKSxcblx0XHRzOiBNYXRoLnJvdW5kKHMpLFxuXHRcdGw6IE1hdGgucm91bmQobCksXG5cdH07XG59O1xuXG5leHBvcnQgY29uc3QgSFNMVG9IZXggPSAoaCwgcywgbCkgPT4ge1xuXHRzIC89IDEwMDtcblx0bCAvPSAxMDA7XG5cblx0bGV0IGMgPSAoMSAtIE1hdGguYWJzKDIgKiBsIC0gMSkpICogcyxcblx0XHR4ID0gYyAqICgxIC0gTWF0aC5hYnMoKChoIC8gNjApICUgMikgLSAxKSksXG5cdFx0bSA9IGwgLSBjIC8gMixcblx0XHRyID0gMCxcblx0XHRnID0gMCxcblx0XHRiID0gMDtcblxuXHRpZiAoMCA8PSBoICYmIGggPCA2MCkge1xuXHRcdHIgPSBjO1xuXHRcdGcgPSB4O1xuXHRcdGIgPSAwO1xuXHR9IGVsc2UgaWYgKDYwIDw9IGggJiYgaCA8IDEyMCkge1xuXHRcdHIgPSB4O1xuXHRcdGcgPSBjO1xuXHRcdGIgPSAwO1xuXHR9IGVsc2UgaWYgKDEyMCA8PSBoICYmIGggPCAxODApIHtcblx0XHRyID0gMDtcblx0XHRnID0gYztcblx0XHRiID0geDtcblx0fSBlbHNlIGlmICgxODAgPD0gaCAmJiBoIDwgMjQwKSB7XG5cdFx0ciA9IDA7XG5cdFx0ZyA9IHg7XG5cdFx0YiA9IGM7XG5cdH0gZWxzZSBpZiAoMjQwIDw9IGggJiYgaCA8IDMwMCkge1xuXHRcdHIgPSB4O1xuXHRcdGcgPSAwO1xuXHRcdGIgPSBjO1xuXHR9IGVsc2UgaWYgKDMwMCA8PSBoICYmIGggPCAzNjApIHtcblx0XHRyID0gYztcblx0XHRnID0gMDtcblx0XHRiID0geDtcblx0fVxuXHQvLyBIYXZpbmcgb2J0YWluZWQgUkdCLCBjb252ZXJ0IGNoYW5uZWxzIHRvIGhleFxuXHRyID0gTWF0aC5yb3VuZCgociArIG0pICogMjU1KS50b1N0cmluZygxNik7XG5cdGcgPSBNYXRoLnJvdW5kKChnICsgbSkgKiAyNTUpLnRvU3RyaW5nKDE2KTtcblx0YiA9IE1hdGgucm91bmQoKGIgKyBtKSAqIDI1NSkudG9TdHJpbmcoMTYpO1xuXG5cdC8vIFByZXBlbmQgMHMsIGlmIG5lY2Vzc2FyeVxuXHRpZiAoci5sZW5ndGggPT0gMSkgciA9ICcwJyArIHI7XG5cdGlmIChnLmxlbmd0aCA9PSAxKSBnID0gJzAnICsgZztcblx0aWYgKGIubGVuZ3RoID09IDEpIGIgPSAnMCcgKyBiO1xuXG5cdHJldHVybiAnIycgKyByICsgZyArIGI7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0TmV1dHJhbEJhc2VDb2xvcnNGcm9tQnJhbmRQcmltYXJ5SGV4ID0gKGhleCkgPT4ge1xuXHRsZXQge2gsIHMsIGx9ID0gaGV4VG9IU0woaGV4KTtcblx0cyA9IHMgLSAyNSA8IDAgPyAwIDogcyAtIDI1O1xuXHRsID0gbCAtIDE4IDwgMCA/IDAgOiBsIC0gMTg7XG5cblx0cmV0dXJuIEhTTFRvSGV4KGgsIHMsIGwpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE5ldXRyYWxzID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAxMCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuOTUsXG5cdFx0bGlnaHRTYXR1cmF0aW9uOiAxLFxuXHRcdGRhcmtWYXJpYXRpb25zOiA5LFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjksXG5cdFx0ZGFya1NhdHVyYXRpb246IDEsXG5cdFx0aG9vazogJ25vdy1jb2xvci0tbmV1dHJhbCcsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0XHRpbmNsdWRlRW5kczogdHJ1ZSxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRQcmltYXJ5ID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC42NSxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yLS1wcmltYXJ5Jyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRTZWNvbmRhcnkgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzQsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAxLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjY1LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAyLFxuXHRcdGhvb2s6ICdub3ctY29sb3ItLXNlY29uZGFyeScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0U2VsZWN0aW9uUHJpbWFyeSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC44NSxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNSxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yX3NlbGVjdGlvbi0tcHJpbWFyeScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0U2VsZWN0aW9uU2Vjb25kYXJ5ID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC42NSxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yX3NlbGVjdGlvbi0tc2Vjb25kYXJ5Jyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRJbnRlcmFjdGl2ZSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNyxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yLS1pbnRlcmFjdGl2ZScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0TGluayA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC4zMixcblx0XHRsaWdodFZhcmlhdGlvbnM6IDEsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNjMsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDIsXG5cdFx0c3RhcnRJbmRleDogMSxcblx0XHRob29rOiAnbm93LWNvbG9yLS1saW5rJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRGb2N1cyA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC4zLFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC42Myxcblx0XHRkYXJrVmFyaWF0aW9uczogMSxcblx0XHRzdGFydEluZGV4OiAxLFxuXHRcdGhvb2s6ICdub3ctY29sb3ItLWZvY3VzJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRBbGVydENyaXRpY2FsID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc1LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC42LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9hbGVydC0tY3JpdGljYWwnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEFsZXJ0SGlnaCA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NSxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNzIsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDMsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0XHRob29rOiAnbm93LWNvbG9yX2FsZXJ0LS1oaWdoJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRBbGVydFdhcm5pbmcgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzUsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjcyLFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9hbGVydC0td2FybmluZycsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QWxlcnRNb2RlcmF0ZSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNzIsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDMsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0XHRob29rOiAnbm93LWNvbG9yX2FsZXJ0LS1tb2RlcmF0ZScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QWxlcnRJbmZvID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC43Mixcblx0XHRkYXJrVmFyaWF0aW9uczogMyxcblx0XHRzdGFydEluZGV4OiAwLFxuXHRcdGhvb2s6ICdub3ctY29sb3JfYWxlcnQtLWluZm8nLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEFsZXJ0UG9zaXRpdmUgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzQsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjc5LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9hbGVydC0tcG9zaXRpdmUnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEFsZXJ0TG93ID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC43OSxcblx0XHRkYXJrVmFyaWF0aW9uczogMyxcblx0XHRzdGFydEluZGV4OiAwLFxuXHRcdGhvb2s6ICdub3ctY29sb3JfYWxlcnQtLWxvdycsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QnJhbmQgPSAoaGV4LCBuYW1lKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cdG5hbWUgPVxuXHRcdCctLW5vdy1jb2xvcl9icmFuZC0tJyArXG5cdFx0bmFtZVxuXHRcdFx0LnJlcGxhY2UoLyhbYS16XSg/PVtBLVpdKSkvZywgJyQxICcpXG5cdFx0XHQuc3BsaXQoJyAnKVsxXVxuXHRcdFx0LnRvTG93ZXJDYXNlKCk7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoaGV4LCBuYW1lKV07XG59O1xuXG5jb25zdCBnZXRTdXJmYWNlTmV1dHJhbCA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0bGV0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMThdLmhleCA6IG5ldXRyYWxzWzRdLmhleDtcblxuXHRpZiAoaXNEYXJrKSB7XG5cdFx0Y29uc3Qge2gsIHMsIGx9ID0gaGV4VG9IU0woYmFzZU5ldXRyYWwpO1xuXHRcdGJhc2VOZXV0cmFsID0gSFNMVG9IZXgoaCwgcyAqIDIgPiAxMDAgPyAxMDAgOiBzICogMiwgbCk7XG5cdH1cblxuXHRjb25zdCBjb2xvcnMgPSBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBiYXNlTmV1dHJhbCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IGlzRGFyayA/IDAuMiA6IDAuOTUsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiA2LFxuXHRcdGRhcmtQZXJjZW50YWdlOiBpc0RhcmsgPyAwLjQgOiAwLjgxLFxuXHRcdGRhcmtWYXJpYXRpb25zOiAwLFxuXHRcdHN0YXJ0SW5kZXg6IDEsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9zdXJmYWNlLS1uZXV0cmFsJyxcblx0XHRpbmNsdWRlRW5kczogZmFsc2UsXG5cdFx0aXNEYXJrLFxuXHRcdHJlbW92ZUVuZDogdHJ1ZSxcblx0fSk7XG5cblx0cmV0dXJuIGNvbG9ycztcbn07XG5cbmNvbnN0IGdldFN1cmZhY2VEaXZpZGVyID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRsZXQgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxNl0uaGV4IDogbmV1dHJhbHNbOF0uaGV4O1xuXG5cdGlmIChpc0RhcmspIHtcblx0XHRjb25zdCB7aCwgcywgbH0gPSBoZXhUb0hTTChiYXNlTmV1dHJhbCk7XG5cdFx0YmFzZU5ldXRyYWwgPSBIU0xUb0hleChoLCBzICogMiA+IDEwMCA/IDEwMCA6IHMgKiAyLCBsKTtcblx0fVxuXG5cdGNvbnN0IGNvbG9ycyA9IGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGJhc2VOZXV0cmFsLFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogaXNEYXJrID8gMC4yIDogMC45LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNixcblx0XHRkYXJrUGVyY2VudGFnZTogaXNEYXJrID8gMC40IDogMC44MSxcblx0XHRkYXJrVmFyaWF0aW9uczogMCxcblx0XHRzdGFydEluZGV4OiAxLFxuXHRcdGhvb2s6ICdub3ctY29sb3Jfc3VyZmFjZS0tZGl2aWRlcicsXG5cdFx0aW5jbHVkZUVuZHM6IGZhbHNlLFxuXHRcdGlzRGFyayxcblx0XHRyZW1vdmVFbmQ6IHRydWUsXG5cdH0pO1xuXG5cdHJldHVybiBjb2xvcnM7XG59O1xuXG5jb25zdCBnZXRTdXJmYWNlQnJhbmQgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBjb2xvcnMgPSBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiBpc0RhcmsgPyAwLjE1IDogMC45LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC41LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAwLFxuXHRcdHN0YXJ0SW5kZXg6IDEsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9zdXJmYWNlLS1icmFuZCcsXG5cdFx0aW5jbHVkZUVuZHM6IGZhbHNlLFxuXHRcdGlzRGFyayxcblx0fSk7XG5cblx0cmV0dXJuIGNvbG9ycztcbn07XG5cbmNvbnN0IGdldENocm9tZUJyYW5kID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjg1LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC41LFxuXHRcdGRhcmtWYXJpYXRpb25zOiA1LFxuXHRcdGhvb2s6ICdub3ctY29sb3JfY2hyb21lLS1icmFuZCcsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0Q2hyb21lRGl2aWRlciA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC42LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC44LFxuXHRcdGRhcmtWYXJpYXRpb25zOiA1LFxuXHRcdGhvb2s6ICdub3ctY29sb3JfY2hyb21lLS1kaXZpZGVyJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRHcm91cGVkID0gKGhleCwgbmFtZSkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXHRuYW1lID0gbmFtZS5yZXBsYWNlKC8oW2Etel0oPz1bQS1aXSkpL2csICckMSAnKS5zcGxpdCgnICcpO1xuXHRuYW1lLnNoaWZ0KCk7XG5cdG5hbWUgPSBuYW1lLm1hcCgoZSkgPT4gZS50b0xvd2VyQ2FzZSgpKS5qb2luKCctJyk7XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc1LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjY1LFxuXHRcdGhvb2s6IGBub3ctY29sb3JfZ3JvdXBlZC0tJHtuYW1lfWAsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRCYWNrZ3JvdW5kUHJpbWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxOF0uaGV4IDogbmV1dHJhbHNbMF0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfYmFja2dyb3VuZC0tcHJpbWFyeScpXTtcbn07XG5cbmNvbnN0IGdldEJhY2tncm91bmRTZWNvbmRhcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMTZdLmhleCA6IG5ldXRyYWxzWzFdLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX2JhY2tncm91bmQtLXNlY29uZGFyeScpXTtcbn07XG5cbmNvbnN0IGdldEJhY2tncm91bmRUZXJ0aWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxNF0uaGV4IDogbmV1dHJhbHNbMl0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfYmFja2dyb3VuZC0tdGVydGlhcnknKV07XG59O1xuXG5jb25zdCBnZXREaXZpZGVyUHJpbWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1s4XS5oZXggOiBuZXV0cmFsc1s0XS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl9kaXZpZGVyLS1wcmltYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0RGl2aWRlclNlY29uZGFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxMF0uaGV4IDogbmV1dHJhbHNbM10uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfZGl2aWRlci0tc2Vjb25kYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0RGl2aWRlclRlcnRpYXJ5ID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRjb25zdCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzEyXS5oZXggOiBuZXV0cmFsc1syXS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl9kaXZpZGVyLS10ZXJ0aWFyeScpXTtcbn07XG5cbmNvbnN0IGdldFRleHRQcmltYXJ5ID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRjb25zdCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzBdLmhleCA6IG5ldXRyYWxzWzE4XS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl90ZXh0LS1wcmltYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0VGV4dFNlY29uZGFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1s0XS5oZXggOiBuZXV0cmFsc1sxMl0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfdGV4dC0tc2Vjb25kYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0VGV4dFRlcnRpYXJ5ID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRjb25zdCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzZdLmhleCA6IG5ldXRyYWxzWzldLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX3RleHQtLXRlcnRpYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0Qm9yZGVyUHJpbWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxXS5oZXggOiBuZXV0cmFsc1s3XS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl9ib3JkZXItLXByaW1hcnknKV07XG59O1xuXG5jb25zdCBnZXRCb3JkZXJTZWNvbmRhcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMl0uaGV4IDogbmV1dHJhbHNbNV0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfYm9yZGVyLS1zZWNvbmRhcnknKV07XG59O1xuXG5jb25zdCBnZXRCb3JkZXJUZXJ0aWFyeSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IobmV1dHJhbHNbM10uaGV4LCAnLS1ub3ctY29sb3JfYm9yZGVyLS10ZXJ0aWFyeScpXTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRCYXNlQ29sb3JzID0gKHRoZW1lKSA9PiB7XG5cdHJldHVybiB7XG5cdFx0bmV1dHJhbHM6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRwcmltYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLXByaW1hcnktMSddKSxcblx0XHRzZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tc2Vjb25kYXJ5LTEnXSksXG5cdFx0c2VsZWN0aW9uUHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX3NlbGVjdGlvbi0tcHJpbWFyeS0yJ10pLFxuXHRcdHNlbGVjdGlvblNlY29uZGFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX3NlbGVjdGlvbi0tc2Vjb25kYXJ5LTInXSksXG5cdFx0aW50ZXJhY3RpdmU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0taW50ZXJhY3RpdmUtMiddKSxcblx0XHRjaHJvbWVCcmFuZDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2Nocm9tZS0tYnJhbmQtNSddKSxcblx0XHRjaHJvbWVEaXZpZGVyOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfY2hyb21lLS1kaXZpZGVyLTUnXSksXG5cdFx0YnJhbmROZXV0cmFsOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYnJhbmQtLW5ldXRyYWwnXSksXG5cdFx0YnJhbmRQcmltYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYnJhbmQtLXByaW1hcnknXSksXG5cdFx0YnJhbmRTZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9icmFuZC0tc2Vjb25kYXJ5J10pLFxuXHRcdHN1cmZhY2VOZXV0cmFsOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0c3VyZmFjZURpdmlkZXI6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRzdXJmYWNlQnJhbmQ6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9zdXJmYWNlLS1icmFuZC02J10pLFxuXHRcdGNocm9tZUJyYW5kOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfY2hyb21lLS1icmFuZC01J10pLFxuXHRcdGNocm9tZURpdmlkZXI6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9jaHJvbWUtLWRpdmlkZXItNSddKSxcblx0XHRiYWNrZ3JvdW5kUHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdGJhY2tncm91bmRTZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRiYWNrZ3JvdW5kVGVydGlhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRkaXZpZGVyUHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdGRpdmlkZXJTZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRkaXZpZGVyVGVydGlhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHR0ZXh0UHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdHRleHRTZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHR0ZXh0VGVydGlhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRib3JkZXJQcmltYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0Ym9yZGVyU2Vjb25kYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0Ym9yZGVyVGVydGlhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRhbGVydENyaXRpY2FsOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYWxlcnQtLWNyaXRpY2FsLTInXSksXG5cdFx0YWxlcnRIaWdoOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYWxlcnQtLWhpZ2gtMiddKSxcblx0XHRhbGVydFdhcm5pbmc6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0td2FybmluZy0yJ10pLFxuXHRcdGFsZXJ0TW9kZXJhdGU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0tbW9kZXJhdGUtMiddKSxcblx0XHRhbGVydEluZm86IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0taW5mby0yJ10pLFxuXHRcdGFsZXJ0UG9zaXRpdmU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0tcG9zaXRpdmUtMiddKSxcblx0XHRhbGVydExvdzogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2FsZXJ0LS1sb3ctMiddKSxcblx0XHRncm91cGVkQmx1ZTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLWJsdWUtMiddKSxcblx0XHRncm91cGVkQnJvd246IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1icm93bi0yJ10pLFxuXHRcdGdyb3VwZWRHcmF5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tZ3JheS0yJ10pLFxuXHRcdGdyb3VwZWRHcmVlbjogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLWdyZWVuLTInXSksXG5cdFx0Z3JvdXBlZEdyZWVuWWVsbG93OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tZ3JlZW4teWVsbG93LTInXSksXG5cdFx0Z3JvdXBlZE1hZ2VudGE6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1tYWdlbnRhLTInXSksXG5cdFx0Z3JvdXBlZE9yYW5nZTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLW9yYW5nZS0yJ10pLFxuXHRcdGdyb3VwZWRQaW5rOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tcGluay0yJ10pLFxuXHRcdGdyb3VwZWRQdXJwbGU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1wdXJwbGUtMiddKSxcblx0XHRncm91cGVkVGVhbDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLXRlYWwtMiddKSxcblx0XHRncm91cGVkWWVsbG93OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0teWVsbG93LTInXSksXG5cdFx0bGluazogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1saW5rLTInXSksXG5cdFx0Zm9jdXM6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tZm9jdXMtMiddKSxcblx0fTtcbn07XG5cbmNvbnN0IGx1bWluYW5jZSA9IChyZ2IpID0+IHtcblx0dmFyIGEgPSByZ2Iuc3BsaXQoJywnKS5tYXAoZnVuY3Rpb24gKHYpIHtcblx0XHR2IC89IDI1NTtcblx0XHRyZXR1cm4gdiA8PSAwLjAzOTI4ID8gdiAvIDEyLjkyIDogTWF0aC5wb3coKHYgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcblx0fSk7XG5cdHJldHVybiBhWzBdICogMC4yMTI2ICsgYVsxXSAqIDAuNzE1MiArIGFbMl0gKiAwLjA3MjI7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q29udHJhc3RSYXRpbyA9IChjb2xvcjEsIGNvbG9yMikgPT4ge1xuXHRpZiAoIWNvbG9yMSB8fCAhY29sb3IyKSByZXR1cm4ge25vcm1hbDoge30sIGxhcmdlOiB7fSwgcmF0aW86IG51bGx9O1xuXG5cdGlmIChpc0hleChjb2xvcjEpKSB7XG5cdFx0Y29sb3IxID0gaGV4VG9SZ2IoY29sb3IxKTtcblx0fVxuXG5cdGlmIChpc0hleChjb2xvcjIpKSB7XG5cdFx0Y29sb3IyID0gaGV4VG9SZ2IoY29sb3IyKTtcblx0fVxuXG5cdGNvbnN0IGNvbG9yMWx1bWluYW5jZSA9IGx1bWluYW5jZShjb2xvcjEpO1xuXHRjb25zdCBjb2xvcjJsdW1pbmFuY2UgPSBsdW1pbmFuY2UoY29sb3IyKTtcblxuXHRjb25zdCByYXRpbyA9XG5cdFx0Y29sb3IxbHVtaW5hbmNlID4gY29sb3IybHVtaW5hbmNlXG5cdFx0XHQ/IChjb2xvcjJsdW1pbmFuY2UgKyAwLjA1KSAvIChjb2xvcjFsdW1pbmFuY2UgKyAwLjA1KVxuXHRcdFx0OiAoY29sb3IxbHVtaW5hbmNlICsgMC4wNSkgLyAoY29sb3IybHVtaW5hbmNlICsgMC4wNSk7XG5cblx0Y29uc3Qgb3V0ID0ge1xuXHRcdG5vcm1hbDoge1xuXHRcdFx0YWE6IHJhdGlvIDwgMSAvIDQuNSA/ICdQYXNzJyA6ICdGYWlsJyxcblx0XHRcdGFhYTogcmF0aW8gPCAxIC8gNyA/ICdQYXNzJyA6ICdGYWlsJyxcblx0XHR9LFxuXHRcdGxhcmdlOiB7XG5cdFx0XHRhYTogcmF0aW8gPCAxIC8gMyA/ICdQYXNzJyA6ICdGYWlsJyxcblx0XHRcdGFhYTogcmF0aW8gPCAxIC8gNC41ID8gJ1Bhc3MnIDogJ0ZhaWwnLFxuXHRcdH0sXG5cdFx0bm9uVGV4dDoge1xuXHRcdFx0YWE6IHJhdGlvIDwgMSAvIDMgPyAnUGFzcycgOiAnRmFpbCcsXG5cdFx0fSxcblx0XHRyYXRpbzogTWF0aC5mbG9vcigoMSAvIHJhdGlvKSAqIDEwKSAvIDEwLFxuXHR9O1xuXG5cdHJldHVybiBvdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q29tcGxpbWVudGFyeUNvbG9ycyA9IChiYXNlQ29sb3IsIHZhcmlhdGlvbnMpID0+IHtcblx0aWYgKCFiYXNlQ29sb3IgfHwgIXZhcmlhdGlvbnMpIHtcblx0XHRyZXR1cm4gW107XG5cdH1cblxuXHRjb25zdCB7aCwgcywgbH0gPSBoZXhUb0hTTChiYXNlQ29sb3IpO1xuXHRjb25zdCByYW5nZSA9IE1hdGgucm91bmQoMzYwIC8gdmFyaWF0aW9ucyk7XG5cdGNvbnN0IG91dCA9IFtuZXcgQ29sb3IoYmFzZUNvbG9yKV07XG5cblx0Zm9yIChsZXQgaSA9IDE7IGkgPCB2YXJpYXRpb25zOyBpKyspIHtcblx0XHRsZXQgbmV3SCA9IGggLSByYW5nZSAqIGk7XG5cdFx0aWYgKG5ld0ggPCAwKSB7XG5cdFx0XHRuZXdIID0gMzYwIC0gTWF0aC5hYnMobmV3SCk7XG5cdFx0fVxuXG5cdFx0b3V0LnB1c2gobmV3IENvbG9yKEhTTFRvSGV4KG5ld0gsIHMsIGwpKSk7XG5cdH1cblxuXHRyZXR1cm4gb3V0O1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/color-generator/generateColorsP.js\n");

/***/ })

})