webpackHotUpdate_N_E("pages/validator",{

/***/ "./lib/color.js":
/*!**********************!*\
  !*** ./lib/color.js ***!
  \**********************/
/*! exports provided: isValidHexString, isValidRgbString, hexToRgb, toRgbTriplet, createColorSet, COLOR_SET_4, COLOR_SET_5, COLOR_SET_21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidHexString\", function() { return isValidHexString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidRgbString\", function() { return isValidRgbString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToRgb\", function() { return hexToRgb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toRgbTriplet\", function() { return toRgbTriplet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createColorSet\", function() { return createColorSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COLOR_SET_4\", function() { return COLOR_SET_4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COLOR_SET_5\", function() { return COLOR_SET_5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COLOR_SET_21\", function() { return COLOR_SET_21; });\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar isPlainObject = function isPlainObject(value) {\n  return typeof value === 'object' && value !== null;\n};\n/************ PARSE AND VALIDATE COLOR VALUES ************/\n\n\nfunction parseColorHex() {\n  if (!isValidHexString(hex)) {\n    console.error('Not a valid hex color: ' + hex);\n    return null;\n  }\n\n  var values = hex.slice(1); // short hex (e.g. '#fff')\n\n  if (values.length === 3) {\n    return wrapped({\n      r: parseInt(values[0] + values[0], 16),\n      g: parseInt(values[1] + values[1], 16),\n      b: parseInt(values[2] + values[2], 16)\n    });\n  } // full hex (e.g. '#ffffff')\n\n\n  return wrapped({\n    r: parseInt(values[0] + values[1], 16),\n    g: parseInt(values[2] + values[3], 16),\n    b: parseInt(values[4] + values[5], 16)\n  });\n}\n\nvar wrapped = function wrapped(rgbObject) {\n  rgbObject.toString = function () {\n    return rgbObject.r + ',' + rgbObject.g + ',' + rgbObject.b;\n  };\n\n  return rgbObject;\n};\n/**\n * @typedef {Object} ColorWrapper\n * @property {number} r - red channel for color (0-255)\n * @property {number} g - green channel for color (0-255)\n * @property {number} b - blue channel for color (0-255)\n */\n\n/**\n * Checks if a given string is a valid hex color.\n * @param {string} value\n * @returns {boolean}\n */\n\n\nfunction isValidHexString(value) {\n  return /^#(?:[0-9a-fA-F]{3}){1,2}$/.test(value);\n}\n/**\n * Checks if a given string is a valid rgb color.\n * @param {string} hex\n * @returns {boolean}\n */\n\nfunction isValidRgbString(value) {\n  return /^[0-9]{1,3}[ ]?,[ ]?[0-9]{1,3}[ ]?,[ ]?[0-9]{1,3}$/.test(value) && !value.split(',').some(function (v) {\n    return parseInt(v) > 255;\n  });\n}\n/**\n * Parses a hex string and returns an object with the following formats for\n * the color: hex, RGB.\n * @param {string} hex - Valid hex color with pound sign, either 3 or 6 hex values (e.g. '#fff' or '#ffffff')\n * @returns {ColorWrapper}\n */\n\nfunction hexToRgb(hex) {\n  if (!isValidHexString(hex)) {\n    console.error('Not a valid hex color: ' + hex);\n    return null;\n  }\n\n  var values = hex.slice(1); // short hex (e.g. '#fff')\n\n  if (values.length === 3) {\n    return wrapped({\n      r: parseInt(values[0] + values[0], 16),\n      g: parseInt(values[1] + values[1], 16),\n      b: parseInt(values[2] + values[2], 16)\n    });\n  } // full hex (e.g. '#ffffff')\n\n\n  return wrapped({\n    r: parseInt(values[0] + values[1], 16),\n    g: parseInt(values[2] + values[3], 16),\n    b: parseInt(values[4] + values[5], 16)\n  });\n}\n/**\n * Converts a color wrapper to an RGB triplate suitable for use as a value\n * for any design system CSS Custom Properties.\n * @param {ColorWrapper} color\n * @return {string} e.g. '255,255,255'\n */\n\nfunction toRgbTriplet(color) {\n  return color.r + ',' + color.g + ',' + color.b;\n}\n/************ MAKE COLOR SETS ************/\n\n/**\n * @param {ColorWrapper} start - Base color\n * @param {ColorWrapper} mix - Color to mix with base\n * @param {number} weight - How strong to weight the mix color, e.g. 0.2 for 20%\n * @returns {ColorWrapper}\n */\n\nfunction mixColor(base, mix, weight) {\n  var w = 2 * weight - 1;\n  var a = 0; // alpha channel, we don't allow it to be configurable yet so setting it to static 0\n\n  var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2;\n  var w2 = 1 - w1;\n  var result = {\n    r: Math.min(Math.round(w1 * mix.r + w2 * base.r), 255),\n    g: Math.min(Math.round(w1 * mix.g + w2 * base.g), 255),\n    b: Math.min(Math.round(w1 * mix.b + w2 * base.b), 255)\n  };\n  return wrapped(result);\n}\n/**\n * @param {ColorWrapper} base - Base color\n * @param {ColorWrapper} mix - Color to mix with base\n * @param {number} stops - Number of stops in the color range\n * @param {number} weight - How strongly to weight the mix color, e.g. 0.2 for 20%\n */\n\n\nfunction createColorRange(base, mix, stops, weight) {\n  var colors = [];\n\n  for (var i = 0; i < stops; i++) {\n    var w = weight * (i + 1) / stops;\n    colors.push(mixColor(base, mix, w));\n  }\n\n  return colors;\n}\n/**\n * @typedef {Object} ColorRange\n * @description Creates a set of colors that are mixed from a base color to mix color\n * @property {ColorWrapper} mix - Color to with with base as a valid hex string\n * @property {number} stops - Number of stops in color set\n * @property {number} weight - How strongly to weight the mix color, e.g. 0.2 for 20%\n */\n\n/**\n * @param {ColorWrapper} base - Base color to create set from as a valid hex string\n * @param {{prepend: ColorRange, append: ColorRange}} ranges - Ranges to mix base color to left and right\n */\n\n\nfunction createColorSet(base) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$prepend = _ref.prepend,\n      prepend = _ref$prepend === void 0 ? [] : _ref$prepend,\n      _ref$append = _ref.append,\n      append = _ref$append === void 0 ? [] : _ref$append;\n\n  var prependRange = prepend.reduce(function (acc, value) {\n    if (isString(value)) {\n      acc.push(hexToRgb(value));\n    }\n\n    if (isPlainObject(value)) {\n      var range = createColorRange(base, hexToRgb(value.mix), value.stops, value.weight).reverse();\n      acc = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(acc), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(range));\n    }\n\n    return acc;\n  }, []);\n  var appendRange = append.reduce(function (acc, value) {\n    if (isString(value)) {\n      acc.push(hexToRgb(value));\n    }\n\n    if (isPlainObject(value)) {\n      var range = createColorRange(base, hexToRgb(value.mix), value.stops, value.weight);\n      acc = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(acc), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(range));\n    }\n\n    return acc;\n  }, []);\n  return [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(prependRange), [base], Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(appendRange));\n}\nvar COLOR_SET_4 = {\n  prepend: [{\n    stops: 1,\n    mix: '#fff',\n    weight: 0.85\n  }],\n  append: [{\n    stops: 2,\n    mix: '#000',\n    weight: 0.5\n  }]\n};\nvar COLOR_SET_5 = {\n  prepend: [{\n    stops: 1,\n    mix: '#fff',\n    weight: 0.85\n  }],\n  append: [{\n    stops: 3,\n    mix: '#000',\n    weight: 0.5\n  }]\n};\nvar COLOR_SET_21 = {\n  prepend: ['#fff', {\n    stops: 10,\n    mix: '#fff',\n    weight: 0.95\n  }],\n  append: [{\n    stops: 9,\n    mix: '#000',\n    weight: 0.9\n  }, '#000']\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/color.js\n");

/***/ })

})