webpackHotUpdate_N_E("pages/color-range",{

/***/ "./lib/color-generator/generateColorsP.js":
/*!************************************************!*\
  !*** ./lib/color-generator/generateColorsP.js ***!
  \************************************************/
/*! exports provided: generateColors, generateColorRange, generateColorScale, getColors, isHex, hexToHSL, HSLToHex, getNeutralBaseColorsFromBrandPrimaryHex, getNeutrals, getBaseColors, getContrastRatio, getComplimentaryColors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColors\", function() { return generateColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColorRange\", function() { return generateColorRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColorScale\", function() { return generateColorScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColors\", function() { return getColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHex\", function() { return isHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToHSL\", function() { return hexToHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HSLToHex\", function() { return HSLToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutralBaseColorsFromBrandPrimaryHex\", function() { return getNeutralBaseColorsFromBrandPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutrals\", function() { return getNeutrals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBaseColors\", function() { return getBaseColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContrastRatio\", function() { return getContrastRatio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getComplimentaryColors\", function() { return getComplimentaryColors; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n\n\n\n\nvar Color = function Color(color, name) {\n  Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Color);\n\n  this.hex = color;\n  this.rgb = hexToRgb(color);\n  this.name = name;\n};\n\nvar hex = function hex(color) {\n  var colorString = color.toString(16);\n  return colorString.length === 1 ? \"0\".concat(colorString) : colorString;\n};\n\nvar calculateColor = function calculateColor(color1, color2, ratio) {\n  ratio = (Math.round(ratio * 100) / 100).toFixed(2);\n  var r = Math.round(parseInt(color2.substring(0, 2), 16) * ratio + parseInt(color1.substring(0, 2), 16) * (1 - ratio));\n  var g = Math.round(parseInt(color2.substring(2, 4), 16) * ratio + parseInt(color1.substring(2, 4), 16) * (1 - ratio));\n  var b = Math.round(parseInt(color2.substring(4, 6), 16) * ratio + parseInt(color1.substring(4, 6), 16) * (1 - ratio));\n  return hex(r) + hex(g) + hex(b);\n};\n\nvar hexToRgb = function hexToRgb(hex) {\n  var r = parseInt(hex.substring(1, 3), 16);\n  var g = parseInt(hex.substring(3, 5), 16);\n  var b = parseInt(hex.substring(5, 7), 16);\n  return \"\".concat(r, \",\").concat(g, \",\").concat(b);\n};\n\nvar rgbToHex = function rgbToHex(rgb) {\n  if (!rgb) return '';\n  var newRGB = rgb.split(',');\n  var r = parseInt(newRGB[0]).toString(16);\n  var g = parseInt(newRGB[1]).toString(16);\n  var b = parseInt(newRGB[2]).toString(16);\n  if (r.length === 1) r = '0' + r;\n  if (g.length === 1) g = '0' + g;\n  if (b.length === 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n\nvar generateColors = function generateColors(color1, color2, variations) {\n  if (!variations) {\n    return [];\n  }\n\n  color1 = color1.startsWith('#') ? color1 : \"#\".concat(color1);\n  color2 = color2.startsWith('#') ? color2 : \"#\".concat(color2);\n  var percentage = 1 / variations;\n  var colors = [];\n\n  for (var i = 1; i <= variations - 1; i++) {\n    colors = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(colors), ['#' + calculateColor(color1.slice(1), color2.slice(1), i * percentage)]);\n  }\n\n  return colors;\n};\nvar generateColorRange = function generateColorRange(_ref) {\n  var color = _ref.color,\n      lightVariations = _ref.lightVariations,\n      lightPercentage = _ref.lightPercentage,\n      lightSaturation = _ref.lightSaturation,\n      darkVariations = _ref.darkVariations,\n      darkPercentage = _ref.darkPercentage,\n      darkSaturation = _ref.darkSaturation,\n      _ref$hook = _ref.hook,\n      hook = _ref$hook === void 0 ? 'hook' : _ref$hook,\n      startIndex = _ref.startIndex,\n      includeEnds = _ref.includeEnds,\n      isDark = _ref.isDark,\n      removeEnd = _ref.removeEnd;\n  if (!color) return [];\n  var newLightBaseColor = color;\n\n  if (lightSaturation) {\n    var lightBaseColorHSL = hexToHSL(color);\n    lightBaseColorHSL.s = lightBaseColorHSL.s + lightBaseColorHSL.s * lightSaturation;\n    newLightBaseColor = HSLToHex(lightBaseColorHSL.h, lightBaseColorHSL.s, lightBaseColorHSL.l);\n  }\n\n  var firstColor = calculateColor('ffffff', newLightBaseColor.slice(1), 1 - lightPercentage); // let firstColor = calculateColor(\n  // \t'ffffff',\n  // \tcolor.slice(1),\n  // \t1 - lightPercentage\n  // );\n\n  var lastColor = calculateColor(color.slice(1), '000000', darkPercentage); // if (lightSaturation) {\n  // \tlet firstHSL = hexToHSL('#' + firstColor);\n  // \tconst newFirstS = firstHSL.s + lightSaturation * firstHSL.s;\n  // \tfirstHSL.s = newFirstS > 100 ? 100 : newFirstS;\n  // \t// const firstHDiff = hexToHSL(color).h - firstHSL.h;\n  // \t// if (Math.abs(firstHDiff) > 20) {\n  // \t// \tfirstHSL.h = hexToHSL(color).h;\n  // \t// }\n  // \tfirstColor = HSLToHex(firstHSL.h, firstHSL.s, firstHSL.l).substring(1);\n  // }\n  // if (darkSaturation) {\n  // \tlet lastHSL = hexToHSL('#' + lastColor);\n  // \tconst newLastS = lastHSL.s + darkSaturation * lastHSL.s;\n  // \tlastHSL.s = newLastS > 100 ? 100 : newLastS;\n  // \t// const lastHDiff = hexToHSL(color).h - lastHSL.h;\n  // \t// if (Math.abs(lastHDiff) > 20) {\n  // \t// \tlastHSL.h = hexToHSL(color).h;\n  // \t// }\n  // \tlastColor = HSLToHex(lastHSL.h, lastHSL.s, lastHSL.l).substring(1);\n  // }\n\n  var lightColors = generateColors(firstColor, color, lightVariations);\n  var darkColors = generateColors(color, lastColor, darkVariations);\n  var out = [];\n\n  if (lightVariations) {\n    out = [\"#\".concat(firstColor)].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lightColors), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out));\n  }\n\n  out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [color]);\n\n  if (darkVariations) {\n    out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(darkColors), [\"#\".concat(lastColor)]);\n  }\n\n  if (includeEnds) {\n    out = [\"#ffffff\"].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [\"#000000\"]);\n  }\n\n  if (removeEnd) {\n    out.pop();\n  }\n\n  if (isDark) {\n    out.reverse();\n  }\n\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\nvar generateColorScale = function generateColorScale(_ref2) {\n  var color = _ref2.color,\n      lightVariations = _ref2.lightVariations,\n      lightPercentage = _ref2.lightPercentage,\n      lightSaturation = _ref2.lightSaturation,\n      darkVariations = _ref2.darkVariations,\n      darkPercentage = _ref2.darkPercentage,\n      darkSaturation = _ref2.darkSaturation,\n      _ref2$hook = _ref2.hook,\n      hook = _ref2$hook === void 0 ? 'hook' : _ref2$hook,\n      startIndex = _ref2.startIndex,\n      includeEnds = _ref2.includeEnds,\n      isDark = _ref2.isDark,\n      removeEnd = _ref2.removeEnd;\n  if (!color) return [];\n  var lightColors = [];\n  var darkColors = []; // #5e6573\n  // 94, 101, 115\n  // 220째, 10%, 41%\n  // #616875\n  // 97, 104, 117\n  // 219째, 9%, 42%\n  // without saturation\n  // #5f6572\n  // 95, 101, 114\n  // 221째, 9%, 41%\n  // #626874\n  // 98, 104, 116\n  // 220째, 8%, 42%\n\n  var lightIncrements = lightPercentage / lightVariations;\n  var saturationIncrements = lightSaturation / lightVariations; // const\n\n  var newLightBaseColor = color; // let firstColor = calculateColor(\n  // \t'ffffff',\n  // \tnewLightBaseColor.slice(1),\n  // \t1 - lightPercentage\n  // )\n\n  console.log(saturationIncrements);\n\n  for (var i = 0; i < lightVariations; i++) {\n    if (lightSaturation) {\n      var lightSaturationIncrements = saturationIncrements * (lightVariations - i);\n      console.log(lightSaturationIncrements);\n      var lightBaseColorHSL = hexToHSL(color);\n      lightBaseColorHSL.s = lightBaseColorHSL.s + lightBaseColorHSL.s * lightSaturationIncrements;\n      console.log(lightBaseColorHSL);\n      newLightBaseColor = HSLToHex(lightBaseColorHSL.h, lightBaseColorHSL.s, lightBaseColorHSL.l);\n    }\n\n    var calculatedColor = calculateColor('ffffff', newLightBaseColor.slice(1), 1 - (i + 1) * lightIncrements);\n    lightColors.push('#' + calculatedColor); // console.log(calculatedColor);\n    // let {h, s, l} = hexToHSL(`#${calculatedColor}`);\n    // console.log(s);\n    // console.log(saturationIncrements)\n    // console.log('------', (i + 1) * saturationIncrements);\n    // console.log('sat increments', s + ((i + 1) * saturationIncrements))\n    // const sInc = s + ((i + 1) * saturationIncrements);\n    // s = sInc > 100 ? 100 : sInc;\n    // const newHex = HSLToHex(h, s, l);\n    // lightColors.push(newHex);\n  }\n\n  console.log(lightColors);\n\n  if (includeEnds) {\n    lightColors.push('#ffffff');\n  }\n\n  lightColors.reverse();\n  var out = [].concat(lightColors, [color]);\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\nvar getColors = function getColors(selectedColors) {\n  var isDark = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var generated = {};\n\n  for (var i in selectedColors) {\n    switch (i) {\n      case 'neutrals':\n        generated[i] = getNeutrals(selectedColors[i]);\n        generated['surfaceNeutral'] = getSurfaceNeutral(selectedColors[i], isDark);\n        generated['surfaceDivider'] = getSurfaceDivider(selectedColors[i], isDark);\n        generated['backgroundPrimary'] = getBackgroundPrimary(selectedColors[i], isDark);\n        generated['backgroundSecondary'] = getBackgroundSecondary(selectedColors[i], isDark);\n        generated['backgroundTertiary'] = getBackgroundTertiary(selectedColors[i], isDark);\n        generated['dividerPrimary'] = getDividerPrimary(selectedColors[i], isDark);\n        generated['dividerSecondary'] = getDividerSecondary(selectedColors[i], isDark);\n        generated['dividerTertiary'] = getDividerTertiary(selectedColors[i], isDark);\n        generated['textPrimary'] = getTextPrimary(selectedColors[i], isDark);\n        generated['textSecondary'] = getTextSecondary(selectedColors[i], isDark);\n        generated['textTertiary'] = getTextTertiary(selectedColors[i], isDark);\n        generated['borderPrimary'] = getBorderPrimary(selectedColors[i], isDark);\n        generated['borderSecondary'] = getBorderSecondary(selectedColors[i], isDark);\n        generated['borderTertiary'] = getBorderTertiary(selectedColors[i]);\n        break;\n\n      case 'primary':\n        generated[i] = getPrimary(selectedColors[i]);\n        break;\n\n      case 'secondary':\n        generated[i] = getSecondary(selectedColors[i]);\n        break;\n\n      case 'selectionPrimary':\n        generated[i] = getSelectionPrimary(selectedColors[i]);\n        break;\n\n      case 'selectionSecondary':\n        generated[i] = getSelectionSecondary(selectedColors[i]);\n        break;\n\n      case 'interactive':\n        generated[i] = getInteractive(selectedColors[i]);\n        break;\n\n      case 'link':\n        generated[i] = getLink(selectedColors[i]);\n        break;\n\n      case 'focus':\n        generated[i] = getFocus(selectedColors[i]);\n        break;\n\n      case 'alertCritical':\n        generated[i] = getAlertCritical(selectedColors[i]);\n        break;\n\n      case 'alertHigh':\n        generated[i] = getAlertHigh(selectedColors[i]);\n        break;\n\n      case 'alertWarning':\n        generated[i] = getAlertWarning(selectedColors[i]);\n        break;\n\n      case 'alertModerate':\n        generated[i] = getAlertModerate(selectedColors[i]);\n        break;\n\n      case 'alertInfo':\n        generated[i] = getAlertInfo(selectedColors[i]);\n        break;\n\n      case 'alertPositive':\n        generated[i] = getAlertPositive(selectedColors[i]);\n        break;\n\n      case 'alertLow':\n        generated[i] = getAlertLow(selectedColors[i]);\n        break;\n\n      case 'brandNeutral':\n      case 'brandPrimary':\n      case 'brandSecondary':\n        generated[i] = getBrand(selectedColors[i], i);\n        break;\n\n      case 'surfaceBrand':\n        generated[i] = getSurfaceBrand(selectedColors[i], isDark);\n        break;\n\n      case 'chromeBrand':\n        generated[i] = getChromeBrand(selectedColors[i]);\n        break;\n\n      case 'chromeDivider':\n        generated[i] = getChromeDivider(selectedColors[i]);\n        break;\n\n      case 'groupedBlue':\n      case 'groupedBrown':\n      case 'groupedGray':\n      case 'groupedGreen':\n      case 'groupedGreenYellow':\n      case 'groupedMagenta':\n      case 'groupedOrange':\n      case 'groupedPink':\n      case 'groupedPurple':\n      case 'groupedTeal':\n      case 'groupedYellow':\n        generated[i] = getGrouped(selectedColors[i], i);\n        break;\n\n      default:\n    }\n  }\n\n  return generated;\n};\nvar isHex = function isHex(hex) {\n  return /^#[0-9A-F]{6}$/i.test(hex);\n};\nvar hexToHSL = function hexToHSL(H) {\n  // Convert hex to RGB first\n  var r = 0,\n      g = 0,\n      b = 0;\n\n  if (H.length == 4) {\n    r = '0x' + H[1] + H[1];\n    g = '0x' + H[2] + H[2];\n    b = '0x' + H[3] + H[3];\n  } else if (H.length == 7) {\n    r = '0x' + H[1] + H[2];\n    g = '0x' + H[3] + H[4];\n    b = '0x' + H[5] + H[6];\n  } // Then to HSL\n\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta == 0) h = 0;else if (cmax == r) h = (g - b) / delta % 6;else if (cmax == g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1); // return \"hsl(\" + Math.round(h) + \",\" + Math.round(s) + \",\" + Math.round(l) + \")\";\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n};\nvar HSLToHex = function HSLToHex(h, s, l) {\n  s /= 100;\n  l /= 100;\n  var c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n      m = l - c / 2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  } // Having obtained RGB, convert channels to hex\n\n\n  r = Math.round((r + m) * 255).toString(16);\n  g = Math.round((g + m) * 255).toString(16);\n  b = Math.round((b + m) * 255).toString(16); // Prepend 0s, if necessary\n\n  if (r.length == 1) r = '0' + r;\n  if (g.length == 1) g = '0' + g;\n  if (b.length == 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n_c = HSLToHex;\nvar getNeutralBaseColorsFromBrandPrimaryHex = function getNeutralBaseColorsFromBrandPrimaryHex(hex) {\n  var _hexToHSL = hexToHSL(hex),\n      h = _hexToHSL.h,\n      s = _hexToHSL.s,\n      l = _hexToHSL.l;\n\n  s = s - 25 < 0 ? 0 : s - 25;\n  l = l - 18 < 0 ? 0 : l - 18;\n  return HSLToHex(h, s, l);\n};\nvar getNeutrals = function getNeutrals(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightVariations: 10,\n    lightPercentage: 0.95,\n    lightSaturation: 1,\n    darkVariations: 9,\n    darkPercentage: 0.9,\n    darkSaturation: 1,\n    hook: 'now-color--neutral',\n    startIndex: 0,\n    includeEnds: true\n  });\n};\n\nvar getPrimary = function getPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 1,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color--primary'\n  });\n};\n\nvar getSecondary = function getSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 1,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color--secondary'\n  });\n};\n\nvar getSelectionPrimary = function getSelectionPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 2,\n    darkPercentage: 0.5,\n    darkVariations: 2,\n    hook: 'now-color_selection--primary'\n  });\n};\n\nvar getSelectionSecondary = function getSelectionSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color_selection--secondary'\n  });\n};\n\nvar getInteractive = function getInteractive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.7,\n    darkVariations: 2,\n    hook: 'now-color--interactive'\n  });\n};\n\nvar getLink = function getLink(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.32,\n    lightVariations: 1,\n    darkPercentage: 0.63,\n    darkVariations: 2,\n    startIndex: 1,\n    hook: 'now-color--link'\n  });\n};\n\nvar getFocus = function getFocus(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.3,\n    lightVariations: 1,\n    darkPercentage: 0.63,\n    darkVariations: 1,\n    startIndex: 1,\n    hook: 'now-color--focus'\n  });\n};\n\nvar getAlertCritical = function getAlertCritical(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.6,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--critical'\n  });\n};\n\nvar getAlertHigh = function getAlertHigh(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--high'\n  });\n};\n\nvar getAlertWarning = function getAlertWarning(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--warning'\n  });\n};\n\nvar getAlertModerate = function getAlertModerate(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--moderate'\n  });\n};\n\nvar getAlertInfo = function getAlertInfo(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--info'\n  });\n};\n\nvar getAlertPositive = function getAlertPositive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.79,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--positive'\n  });\n};\n\nvar getAlertLow = function getAlertLow(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.79,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--low'\n  });\n};\n\nvar getBrand = function getBrand(hex, name) {\n  if (!hex) return [];\n  name = '--now-color_brand--' + name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ')[1].toLowerCase();\n  return [new Color(hex, name)];\n};\n\nvar getSurfaceNeutral = function getSurfaceNeutral(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[4].hex;\n\n  if (isDark) {\n    var _hexToHSL2 = hexToHSL(baseNeutral),\n        h = _hexToHSL2.h,\n        s = _hexToHSL2.s,\n        l = _hexToHSL2.l;\n\n    baseNeutral = HSLToHex(h, s * 2 > 100 ? 100 : s * 2, l);\n  }\n\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: isDark ? 0.2 : 0.95,\n    lightVariations: 6,\n    darkPercentage: isDark ? 0.4 : 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--neutral',\n    includeEnds: false,\n    isDark: isDark,\n    removeEnd: true\n  });\n  return colors;\n};\n\nvar getSurfaceDivider = function getSurfaceDivider(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[8].hex;\n\n  if (isDark) {\n    var _hexToHSL3 = hexToHSL(baseNeutral),\n        h = _hexToHSL3.h,\n        s = _hexToHSL3.s,\n        l = _hexToHSL3.l;\n\n    baseNeutral = HSLToHex(h, s * 2 > 100 ? 100 : s * 2, l);\n  }\n\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: isDark ? 0.2 : 0.9,\n    lightVariations: 6,\n    darkPercentage: isDark ? 0.4 : 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--divider',\n    includeEnds: false,\n    isDark: isDark,\n    removeEnd: true\n  });\n  return colors;\n};\n\nvar getSurfaceBrand = function getSurfaceBrand(hex, isDark) {\n  if (!hex) return [];\n  var colors = generateColorRange({\n    color: hex,\n    lightPercentage: isDark ? 0.15 : 0.9,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--brand',\n    includeEnds: false,\n    isDark: isDark\n  });\n  return colors;\n};\n\nvar getChromeBrand = function getChromeBrand(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 5,\n    hook: 'now-color_chrome--brand'\n  });\n};\n\nvar getChromeDivider = function getChromeDivider(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.6,\n    lightVariations: 5,\n    darkPercentage: 0.8,\n    darkVariations: 5,\n    hook: 'now-color_chrome--divider'\n  });\n};\n\nvar getGrouped = function getGrouped(hex, name) {\n  if (!hex) return [];\n  name = name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ');\n  name.shift();\n  name = name.map(function (e) {\n    return e.toLowerCase();\n  }).join('-');\n  return generateColorRange({\n    color: hex,\n    lightVariations: 2,\n    lightPercentage: 0.75,\n    darkVariations: 3,\n    darkPercentage: 0.65,\n    hook: \"now-color_grouped--\".concat(name),\n    startIndex: 0\n  });\n};\n\nvar getBackgroundPrimary = function getBackgroundPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[0].hex;\n  return [new Color(baseNeutral, '--now-color_background--primary')];\n};\n\nvar getBackgroundSecondary = function getBackgroundSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[1].hex;\n  return [new Color(baseNeutral, '--now-color_background--secondary')];\n};\n\nvar getBackgroundTertiary = function getBackgroundTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[14].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_background--tertiary')];\n};\n\nvar getDividerPrimary = function getDividerPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[8].hex : neutrals[4].hex;\n  return [new Color(baseNeutral, '--now-color_divider--primary')];\n};\n\nvar getDividerSecondary = function getDividerSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[10].hex : neutrals[3].hex;\n  return [new Color(baseNeutral, '--now-color_divider--secondary')];\n};\n\nvar getDividerTertiary = function getDividerTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[12].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_divider--tertiary')];\n};\n\nvar getTextPrimary = function getTextPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[0].hex : neutrals[18].hex;\n  return [new Color(baseNeutral, '--now-color_text--primary')];\n};\n\nvar getTextSecondary = function getTextSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[4].hex : neutrals[12].hex;\n  return [new Color(baseNeutral, '--now-color_text--secondary')];\n};\n\nvar getTextTertiary = function getTextTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[6].hex : neutrals[9].hex;\n  return [new Color(baseNeutral, '--now-color_text--tertiary')];\n};\n\nvar getBorderPrimary = function getBorderPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[1].hex : neutrals[7].hex;\n  return [new Color(baseNeutral, '--now-color_border--primary')];\n};\n\nvar getBorderSecondary = function getBorderSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[2].hex : neutrals[5].hex;\n  return [new Color(baseNeutral, '--now-color_border--secondary')];\n};\n\nvar getBorderTertiary = function getBorderTertiary(hex) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  return [new Color(neutrals[3].hex, '--now-color_border--tertiary')];\n};\n\nvar getBaseColors = function getBaseColors(theme) {\n  var _ref3;\n\n  return _ref3 = {\n    neutrals: rgbToHex(theme['--now-color--neutral-11']),\n    primary: rgbToHex(theme['--now-color--primary-1']),\n    secondary: rgbToHex(theme['--now-color--secondary-1']),\n    selectionPrimary: rgbToHex(theme['--now-color_selection--primary-2']),\n    selectionSecondary: rgbToHex(theme['--now-color_selection--secondary-2']),\n    interactive: rgbToHex(theme['--now-color--interactive-2']),\n    chromeBrand: rgbToHex(theme['--now-color_chrome--brand-5']),\n    chromeDivider: rgbToHex(theme['--now-color_chrome--divider-5']),\n    brandNeutral: rgbToHex(theme['--now-color_brand--neutral']),\n    brandPrimary: rgbToHex(theme['--now-color_brand--primary']),\n    brandSecondary: rgbToHex(theme['--now-color_brand--secondary']),\n    surfaceNeutral: rgbToHex(theme['--now-color--neutral-11']),\n    surfaceDivider: rgbToHex(theme['--now-color--neutral-11']),\n    surfaceBrand: rgbToHex(theme['--now-color_surface--brand-6'])\n  }, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"chromeBrand\", rgbToHex(theme['--now-color_chrome--brand-5'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"chromeDivider\", rgbToHex(theme['--now-color_chrome--divider-5'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertCritical\", rgbToHex(theme['--now-color_alert--critical-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertHigh\", rgbToHex(theme['--now-color_alert--high-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertWarning\", rgbToHex(theme['--now-color_alert--warning-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertModerate\", rgbToHex(theme['--now-color_alert--moderate-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertInfo\", rgbToHex(theme['--now-color_alert--info-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertPositive\", rgbToHex(theme['--now-color_alert--positive-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertLow\", rgbToHex(theme['--now-color_alert--low-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedBlue\", rgbToHex(theme['--now-color_grouped--blue-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedBrown\", rgbToHex(theme['--now-color_grouped--brown-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGray\", rgbToHex(theme['--now-color_grouped--gray-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGreen\", rgbToHex(theme['--now-color_grouped--green-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGreenYellow\", rgbToHex(theme['--now-color_grouped--green-yellow-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedMagenta\", rgbToHex(theme['--now-color_grouped--magenta-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedOrange\", rgbToHex(theme['--now-color_grouped--orange-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedPink\", rgbToHex(theme['--now-color_grouped--pink-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedPurple\", rgbToHex(theme['--now-color_grouped--purple-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedTeal\", rgbToHex(theme['--now-color_grouped--teal-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedYellow\", rgbToHex(theme['--now-color_grouped--yellow-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"link\", rgbToHex(theme['--now-color--link-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"focus\", rgbToHex(theme['--now-color--focus-2'])), _ref3;\n};\n\nvar luminance = function luminance(rgb) {\n  var a = rgb.split(',').map(function (v) {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n};\n\nvar getContrastRatio = function getContrastRatio(color1, color2) {\n  if (!color1 || !color2) return {\n    normal: {},\n    large: {},\n    ratio: null\n  };\n\n  if (isHex(color1)) {\n    color1 = hexToRgb(color1);\n  }\n\n  if (isHex(color2)) {\n    color2 = hexToRgb(color2);\n  }\n\n  var color1luminance = luminance(color1);\n  var color2luminance = luminance(color2);\n  var ratio = color1luminance > color2luminance ? (color2luminance + 0.05) / (color1luminance + 0.05) : (color1luminance + 0.05) / (color2luminance + 0.05);\n  var out = {\n    normal: {\n      aa: ratio < 1 / 4.5 ? 'Pass' : 'Fail',\n      aaa: ratio < 1 / 7 ? 'Pass' : 'Fail'\n    },\n    large: {\n      aa: ratio < 1 / 3 ? 'Pass' : 'Fail',\n      aaa: ratio < 1 / 4.5 ? 'Pass' : 'Fail'\n    },\n    nonText: {\n      aa: ratio < 1 / 3 ? 'Pass' : 'Fail'\n    },\n    ratio: Math.floor(1 / ratio * 10) / 10\n  };\n  return out;\n};\nvar getComplimentaryColors = function getComplimentaryColors(baseColor, variations) {\n  if (!baseColor || !variations) {\n    return [];\n  }\n\n  var _hexToHSL4 = hexToHSL(baseColor),\n      h = _hexToHSL4.h,\n      s = _hexToHSL4.s,\n      l = _hexToHSL4.l;\n\n  var range = Math.round(360 / variations);\n  var out = [new Color(baseColor)];\n\n  for (var i = 1; i < variations; i++) {\n    var newH = h - range * i;\n\n    if (newH < 0) {\n      newH = 360 - Math.abs(newH);\n    }\n\n    out.push(new Color(HSLToHex(newH, s, l)));\n  }\n\n  return out;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HSLToHex\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/color-generator/generateColorsP.js\n");

/***/ })

})