webpackHotUpdate_N_E("pages/color-range",{

/***/ "./lib/color-generator/generateColorsP.js":
/*!************************************************!*\
  !*** ./lib/color-generator/generateColorsP.js ***!
  \************************************************/
/*! exports provided: generateColors, generateColorRange, generateColorScale, getColors, isHex, hexToHSL, HSLToHex, getNeutralBaseColorsFromBrandPrimaryHex, getNeutrals, getBaseColors, getContrastRatio, getComplimentaryColors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColors\", function() { return generateColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColorRange\", function() { return generateColorRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColorScale\", function() { return generateColorScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColors\", function() { return getColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHex\", function() { return isHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToHSL\", function() { return hexToHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HSLToHex\", function() { return HSLToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutralBaseColorsFromBrandPrimaryHex\", function() { return getNeutralBaseColorsFromBrandPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutrals\", function() { return getNeutrals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBaseColors\", function() { return getBaseColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContrastRatio\", function() { return getContrastRatio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getComplimentaryColors\", function() { return getComplimentaryColors; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n\n\n\n\nvar Color = function Color(color, name) {\n  Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Color);\n\n  this.hex = color;\n  this.rgb = hexToRgb(color);\n  this.name = name;\n};\n\nvar hex = function hex(color) {\n  var colorString = color.toString(16);\n  return colorString.length === 1 ? \"0\".concat(colorString) : colorString;\n};\n\nvar calculateColor = function calculateColor(color1, color2, ratio) {\n  ratio = (Math.round(ratio * 100) / 100).toFixed(2);\n  var r = Math.round(parseInt(color2.substring(0, 2), 16) * ratio + parseInt(color1.substring(0, 2), 16) * (1 - ratio));\n  var g = Math.round(parseInt(color2.substring(2, 4), 16) * ratio + parseInt(color1.substring(2, 4), 16) * (1 - ratio));\n  var b = Math.round(parseInt(color2.substring(4, 6), 16) * ratio + parseInt(color1.substring(4, 6), 16) * (1 - ratio));\n  return hex(r) + hex(g) + hex(b);\n};\n\nvar hexToRgb = function hexToRgb(hex) {\n  var r = parseInt(hex.substring(1, 3), 16);\n  var g = parseInt(hex.substring(3, 5), 16);\n  var b = parseInt(hex.substring(5, 7), 16);\n  return \"\".concat(r, \",\").concat(g, \",\").concat(b);\n};\n\nvar rgbToHex = function rgbToHex(rgb) {\n  if (!rgb) return '';\n  var newRGB = rgb.split(',');\n  var r = parseInt(newRGB[0]).toString(16);\n  var g = parseInt(newRGB[1]).toString(16);\n  var b = parseInt(newRGB[2]).toString(16);\n  if (r.length === 1) r = '0' + r;\n  if (g.length === 1) g = '0' + g;\n  if (b.length === 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n\nvar generateColors = function generateColors(color1, color2, variations) {\n  if (!variations) {\n    return [];\n  }\n\n  color1 = color1.startsWith('#') ? color1 : \"#\".concat(color1);\n  color2 = color2.startsWith('#') ? color2 : \"#\".concat(color2);\n  var percentage = 1 / variations;\n  var colors = [];\n\n  for (var i = 1; i <= variations - 1; i++) {\n    colors = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(colors), ['#' + calculateColor(color1.slice(1), color2.slice(1), i * percentage)]);\n  }\n\n  return colors;\n};\nvar generateColorRange = function generateColorRange(_ref) {\n  var color = _ref.color,\n      lightVariations = _ref.lightVariations,\n      lightPercentage = _ref.lightPercentage,\n      lightSaturation = _ref.lightSaturation,\n      darkVariations = _ref.darkVariations,\n      darkPercentage = _ref.darkPercentage,\n      darkSaturation = _ref.darkSaturation,\n      _ref$hook = _ref.hook,\n      hook = _ref$hook === void 0 ? 'hook' : _ref$hook,\n      startIndex = _ref.startIndex,\n      includeEnds = _ref.includeEnds,\n      isDark = _ref.isDark,\n      removeEnd = _ref.removeEnd;\n  if (!color) return [];\n  var firstColor = calculateColor('ffffff', color.slice(1), 1 - lightPercentage);\n  var lastColor = calculateColor(color.slice(1), '000000', darkPercentage);\n\n  if (lightSaturation) {\n    var firstHSL = hexToHSL('#' + firstColor);\n    var newFirstS = firstHSL.s + lightSaturation * firstHSL.s;\n    firstHSL.s = newFirstS > 100 ? 100 : newFirstS;\n    var firstHDiff = hexToHSL(color).h - firstHSL.h;\n\n    if (Math.abs(firstHDiff) > 20) {\n      firstHSL.h = hexToHSL(color).h;\n    }\n\n    firstColor = HSLToHex(firstHSL.h, firstHSL.s, firstHSL.l).substring(1);\n  }\n\n  if (darkSaturation) {\n    var lastHSL = hexToHSL('#' + lastColor);\n    var newLastS = lastHSL.s + darkSaturation * lastHSL.s;\n    lastHSL.s = newLastS > 100 ? 100 : newLastS; // const lastHDiff = hexToHSL(color).h - lastHSL.h;\n    // if (Math.abs(lastHDiff) > 20) {\n    // \tlastHSL.h = hexToHSL(color).h;\n    // }\n\n    lastColor = HSLToHex(lastHSL.h, lastHSL.s, lastHSL.l).substring(1);\n  }\n\n  var lightColors = generateColors(firstColor, color, lightVariations);\n  var darkColors = generateColors(color, lastColor, darkVariations);\n  var out = [];\n\n  if (lightVariations) {\n    out = [\"#\".concat(firstColor)].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lightColors), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out));\n  }\n\n  out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [color]);\n\n  if (darkVariations) {\n    out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(darkColors), [\"#\".concat(lastColor)]);\n  }\n\n  if (includeEnds) {\n    out = [\"#ffffff\"].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [\"#000000\"]);\n  }\n\n  if (removeEnd) {\n    out.pop();\n  }\n\n  if (isDark) {\n    out.reverse();\n  }\n\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\nvar generateColorScale = function generateColorScale(_ref2) {\n  var color = _ref2.color,\n      lightVariations = _ref2.lightVariations,\n      lightPercentage = _ref2.lightPercentage,\n      lightSaturation = _ref2.lightSaturation,\n      darkVariations = _ref2.darkVariations,\n      darkPercentage = _ref2.darkPercentage,\n      darkSaturation = _ref2.darkSaturation,\n      _ref2$hook = _ref2.hook,\n      hook = _ref2$hook === void 0 ? 'hook' : _ref2$hook,\n      startIndex = _ref2.startIndex,\n      includeEnds = _ref2.includeEnds,\n      isDark = _ref2.isDark,\n      removeEnd = _ref2.removeEnd;\n  if (!color) return [];\n  var lightColors = [];\n  var darkColors = []; // .95 = 1\n  // variations = .95/lightVariations;\n  // #4f5664\n  // 79, 86, 100\n  // 220°, 12%, 35%\n  // #616875\n  // 97, 104, 117\n  // 219°, 9%, 42%\n  // #626874\n  // 98, 104, 116\n  // 220°, 8%, 42%\n\n  var lightIncrements = lightPercentage / lightVariations;\n  var saturationIncrements = lightSaturation / lightVariations;\n\n  for (var i = 0; i < lightVariations; i++) {\n    var calculatedColor = calculateColor('ffffff', color.slice(1), 1 - (i + 1) * lightIncrements);\n    console.log(calculatedColor);\n\n    var _hexToHSL = hexToHSL(\"#\".concat(calculatedColor)),\n        h = _hexToHSL.h,\n        s = _hexToHSL.s,\n        l = _hexToHSL.l;\n\n    console.log(s);\n    console.log(saturationIncrements);\n    var sInc = s + s * saturationIncrements;\n    s = sInc > 100 ? 100 : sInc;\n    var newHex = HSLToHex(h, s, l);\n    lightColors.push(newHex);\n  }\n\n  console.log(lightColors);\n\n  if (includeEnds) {\n    lightColors.push('#ffffff');\n  }\n\n  lightColors.reverse();\n  var out = [].concat(lightColors, [color]);\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\nvar getColors = function getColors(selectedColors) {\n  var isDark = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var generated = {};\n\n  for (var i in selectedColors) {\n    switch (i) {\n      case 'neutrals':\n        generated[i] = getNeutrals(selectedColors[i]);\n        generated['surfaceNeutral'] = getSurfaceNeutral(selectedColors[i], isDark);\n        generated['surfaceDivider'] = getSurfaceDivider(selectedColors[i], isDark);\n        generated['backgroundPrimary'] = getBackgroundPrimary(selectedColors[i], isDark);\n        generated['backgroundSecondary'] = getBackgroundSecondary(selectedColors[i], isDark);\n        generated['backgroundTertiary'] = getBackgroundTertiary(selectedColors[i], isDark);\n        generated['dividerPrimary'] = getDividerPrimary(selectedColors[i], isDark);\n        generated['dividerSecondary'] = getDividerSecondary(selectedColors[i], isDark);\n        generated['dividerTertiary'] = getDividerTertiary(selectedColors[i], isDark);\n        generated['textPrimary'] = getTextPrimary(selectedColors[i], isDark);\n        generated['textSecondary'] = getTextSecondary(selectedColors[i], isDark);\n        generated['textTertiary'] = getTextTertiary(selectedColors[i], isDark);\n        generated['borderPrimary'] = getBorderPrimary(selectedColors[i], isDark);\n        generated['borderSecondary'] = getBorderSecondary(selectedColors[i], isDark);\n        generated['borderTertiary'] = getBorderTertiary(selectedColors[i]);\n        break;\n\n      case 'primary':\n        generated[i] = getPrimary(selectedColors[i]);\n        break;\n\n      case 'secondary':\n        generated[i] = getSecondary(selectedColors[i]);\n        break;\n\n      case 'selectionPrimary':\n        generated[i] = getSelectionPrimary(selectedColors[i]);\n        break;\n\n      case 'selectionSecondary':\n        generated[i] = getSelectionSecondary(selectedColors[i]);\n        break;\n\n      case 'interactive':\n        generated[i] = getInteractive(selectedColors[i]);\n        break;\n\n      case 'link':\n        generated[i] = getLink(selectedColors[i]);\n        break;\n\n      case 'focus':\n        generated[i] = getFocus(selectedColors[i]);\n        break;\n\n      case 'alertCritical':\n        generated[i] = getAlertCritical(selectedColors[i]);\n        break;\n\n      case 'alertHigh':\n        generated[i] = getAlertHigh(selectedColors[i]);\n        break;\n\n      case 'alertWarning':\n        generated[i] = getAlertWarning(selectedColors[i]);\n        break;\n\n      case 'alertModerate':\n        generated[i] = getAlertModerate(selectedColors[i]);\n        break;\n\n      case 'alertInfo':\n        generated[i] = getAlertInfo(selectedColors[i]);\n        break;\n\n      case 'alertPositive':\n        generated[i] = getAlertPositive(selectedColors[i]);\n        break;\n\n      case 'alertLow':\n        generated[i] = getAlertLow(selectedColors[i]);\n        break;\n\n      case 'brandNeutral':\n      case 'brandPrimary':\n      case 'brandSecondary':\n        generated[i] = getBrand(selectedColors[i], i);\n        break;\n\n      case 'surfaceBrand':\n        generated[i] = getSurfaceBrand(selectedColors[i], isDark);\n        break;\n\n      case 'chromeBrand':\n        generated[i] = getChromeBrand(selectedColors[i]);\n        break;\n\n      case 'chromeDivider':\n        generated[i] = getChromeDivider(selectedColors[i]);\n        break;\n\n      case 'groupedBlue':\n      case 'groupedBrown':\n      case 'groupedGray':\n      case 'groupedGreen':\n      case 'groupedGreenYellow':\n      case 'groupedMagenta':\n      case 'groupedOrange':\n      case 'groupedPink':\n      case 'groupedPurple':\n      case 'groupedTeal':\n      case 'groupedYellow':\n        generated[i] = getGrouped(selectedColors[i], i);\n        break;\n\n      default:\n    }\n  }\n\n  return generated;\n};\nvar isHex = function isHex(hex) {\n  return /^#[0-9A-F]{6}$/i.test(hex);\n};\nvar hexToHSL = function hexToHSL(H) {\n  // Convert hex to RGB first\n  var r = 0,\n      g = 0,\n      b = 0;\n\n  if (H.length == 4) {\n    r = '0x' + H[1] + H[1];\n    g = '0x' + H[2] + H[2];\n    b = '0x' + H[3] + H[3];\n  } else if (H.length == 7) {\n    r = '0x' + H[1] + H[2];\n    g = '0x' + H[3] + H[4];\n    b = '0x' + H[5] + H[6];\n  } // Then to HSL\n\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta == 0) h = 0;else if (cmax == r) h = (g - b) / delta % 6;else if (cmax == g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1); // return \"hsl(\" + Math.round(h) + \",\" + Math.round(s) + \",\" + Math.round(l) + \")\";\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n};\nvar HSLToHex = function HSLToHex(h, s, l) {\n  s /= 100;\n  l /= 100;\n  var c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n      m = l - c / 2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  } // Having obtained RGB, convert channels to hex\n\n\n  r = Math.round((r + m) * 255).toString(16);\n  g = Math.round((g + m) * 255).toString(16);\n  b = Math.round((b + m) * 255).toString(16); // Prepend 0s, if necessary\n\n  if (r.length == 1) r = '0' + r;\n  if (g.length == 1) g = '0' + g;\n  if (b.length == 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n_c = HSLToHex;\nvar getNeutralBaseColorsFromBrandPrimaryHex = function getNeutralBaseColorsFromBrandPrimaryHex(hex) {\n  var _hexToHSL2 = hexToHSL(hex),\n      h = _hexToHSL2.h,\n      s = _hexToHSL2.s,\n      l = _hexToHSL2.l;\n\n  s = s - 25 < 0 ? 0 : s - 25;\n  l = l - 18 < 0 ? 0 : l - 18;\n  return HSLToHex(h, s, l);\n};\nvar getNeutrals = function getNeutrals(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightVariations: 10,\n    lightPercentage: 0.95,\n    lightSaturation: 1,\n    darkVariations: 9,\n    darkPercentage: 0.9,\n    darkSaturation: 1,\n    hook: 'now-color--neutral',\n    startIndex: 0,\n    includeEnds: true\n  });\n};\n\nvar getPrimary = function getPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 1,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color--primary'\n  });\n};\n\nvar getSecondary = function getSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 1,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color--secondary'\n  });\n};\n\nvar getSelectionPrimary = function getSelectionPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 2,\n    darkPercentage: 0.5,\n    darkVariations: 2,\n    hook: 'now-color_selection--primary'\n  });\n};\n\nvar getSelectionSecondary = function getSelectionSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color_selection--secondary'\n  });\n};\n\nvar getInteractive = function getInteractive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.7,\n    darkVariations: 2,\n    hook: 'now-color--interactive'\n  });\n};\n\nvar getLink = function getLink(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.32,\n    lightVariations: 1,\n    darkPercentage: 0.63,\n    darkVariations: 2,\n    startIndex: 1,\n    hook: 'now-color--link'\n  });\n};\n\nvar getFocus = function getFocus(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.3,\n    lightVariations: 1,\n    darkPercentage: 0.63,\n    darkVariations: 1,\n    startIndex: 1,\n    hook: 'now-color--focus'\n  });\n};\n\nvar getAlertCritical = function getAlertCritical(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.6,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--critical'\n  });\n};\n\nvar getAlertHigh = function getAlertHigh(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--high'\n  });\n};\n\nvar getAlertWarning = function getAlertWarning(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--warning'\n  });\n};\n\nvar getAlertModerate = function getAlertModerate(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--moderate'\n  });\n};\n\nvar getAlertInfo = function getAlertInfo(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--info'\n  });\n};\n\nvar getAlertPositive = function getAlertPositive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.79,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--positive'\n  });\n};\n\nvar getAlertLow = function getAlertLow(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.79,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--low'\n  });\n};\n\nvar getBrand = function getBrand(hex, name) {\n  if (!hex) return [];\n  name = '--now-color_brand--' + name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ')[1].toLowerCase();\n  return [new Color(hex, name)];\n};\n\nvar getSurfaceNeutral = function getSurfaceNeutral(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[4].hex;\n\n  if (isDark) {\n    var _hexToHSL3 = hexToHSL(baseNeutral),\n        h = _hexToHSL3.h,\n        s = _hexToHSL3.s,\n        l = _hexToHSL3.l;\n\n    baseNeutral = HSLToHex(h, s * 2 > 100 ? 100 : s * 2, l);\n  }\n\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: isDark ? 0.2 : 0.95,\n    lightVariations: 6,\n    darkPercentage: isDark ? 0.4 : 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--neutral',\n    includeEnds: false,\n    isDark: isDark,\n    removeEnd: true\n  });\n  return colors;\n};\n\nvar getSurfaceDivider = function getSurfaceDivider(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[8].hex;\n\n  if (isDark) {\n    var _hexToHSL4 = hexToHSL(baseNeutral),\n        h = _hexToHSL4.h,\n        s = _hexToHSL4.s,\n        l = _hexToHSL4.l;\n\n    baseNeutral = HSLToHex(h, s * 2 > 100 ? 100 : s * 2, l);\n  }\n\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: isDark ? 0.2 : 0.9,\n    lightVariations: 6,\n    darkPercentage: isDark ? 0.4 : 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--divider',\n    includeEnds: false,\n    isDark: isDark,\n    removeEnd: true\n  });\n  return colors;\n};\n\nvar getSurfaceBrand = function getSurfaceBrand(hex, isDark) {\n  if (!hex) return [];\n  var colors = generateColorRange({\n    color: hex,\n    lightPercentage: isDark ? 0.15 : 0.9,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--brand',\n    includeEnds: false,\n    isDark: isDark\n  });\n  return colors;\n};\n\nvar getChromeBrand = function getChromeBrand(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 5,\n    hook: 'now-color_chrome--brand'\n  });\n};\n\nvar getChromeDivider = function getChromeDivider(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.6,\n    lightVariations: 5,\n    darkPercentage: 0.8,\n    darkVariations: 5,\n    hook: 'now-color_chrome--divider'\n  });\n};\n\nvar getGrouped = function getGrouped(hex, name) {\n  if (!hex) return [];\n  name = name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ');\n  name.shift();\n  name = name.map(function (e) {\n    return e.toLowerCase();\n  }).join('-');\n  return generateColorRange({\n    color: hex,\n    lightVariations: 2,\n    lightPercentage: 0.75,\n    darkVariations: 3,\n    darkPercentage: 0.65,\n    hook: \"now-color_grouped--\".concat(name),\n    startIndex: 0\n  });\n};\n\nvar getBackgroundPrimary = function getBackgroundPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[0].hex;\n  return [new Color(baseNeutral, '--now-color_background--primary')];\n};\n\nvar getBackgroundSecondary = function getBackgroundSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[1].hex;\n  return [new Color(baseNeutral, '--now-color_background--secondary')];\n};\n\nvar getBackgroundTertiary = function getBackgroundTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[14].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_background--tertiary')];\n};\n\nvar getDividerPrimary = function getDividerPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[8].hex : neutrals[4].hex;\n  return [new Color(baseNeutral, '--now-color_divider--primary')];\n};\n\nvar getDividerSecondary = function getDividerSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[10].hex : neutrals[3].hex;\n  return [new Color(baseNeutral, '--now-color_divider--secondary')];\n};\n\nvar getDividerTertiary = function getDividerTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[12].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_divider--tertiary')];\n};\n\nvar getTextPrimary = function getTextPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[0].hex : neutrals[18].hex;\n  return [new Color(baseNeutral, '--now-color_text--primary')];\n};\n\nvar getTextSecondary = function getTextSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[4].hex : neutrals[12].hex;\n  return [new Color(baseNeutral, '--now-color_text--secondary')];\n};\n\nvar getTextTertiary = function getTextTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[6].hex : neutrals[9].hex;\n  return [new Color(baseNeutral, '--now-color_text--tertiary')];\n};\n\nvar getBorderPrimary = function getBorderPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[1].hex : neutrals[7].hex;\n  return [new Color(baseNeutral, '--now-color_border--primary')];\n};\n\nvar getBorderSecondary = function getBorderSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[2].hex : neutrals[5].hex;\n  return [new Color(baseNeutral, '--now-color_border--secondary')];\n};\n\nvar getBorderTertiary = function getBorderTertiary(hex) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  return [new Color(neutrals[3].hex, '--now-color_border--tertiary')];\n};\n\nvar getBaseColors = function getBaseColors(theme) {\n  var _ref3;\n\n  return _ref3 = {\n    neutrals: rgbToHex(theme['--now-color--neutral-11']),\n    primary: rgbToHex(theme['--now-color--primary-1']),\n    secondary: rgbToHex(theme['--now-color--secondary-1']),\n    selectionPrimary: rgbToHex(theme['--now-color_selection--primary-2']),\n    selectionSecondary: rgbToHex(theme['--now-color_selection--secondary-2']),\n    interactive: rgbToHex(theme['--now-color--interactive-2']),\n    chromeBrand: rgbToHex(theme['--now-color_chrome--brand-5']),\n    chromeDivider: rgbToHex(theme['--now-color_chrome--divider-5']),\n    brandNeutral: rgbToHex(theme['--now-color_brand--neutral']),\n    brandPrimary: rgbToHex(theme['--now-color_brand--primary']),\n    brandSecondary: rgbToHex(theme['--now-color_brand--secondary']),\n    surfaceNeutral: rgbToHex(theme['--now-color--neutral-11']),\n    surfaceDivider: rgbToHex(theme['--now-color--neutral-11']),\n    surfaceBrand: rgbToHex(theme['--now-color_surface--brand-6'])\n  }, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"chromeBrand\", rgbToHex(theme['--now-color_chrome--brand-5'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"chromeDivider\", rgbToHex(theme['--now-color_chrome--divider-5'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"backgroundTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"dividerTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"textTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"borderTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertCritical\", rgbToHex(theme['--now-color_alert--critical-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertHigh\", rgbToHex(theme['--now-color_alert--high-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertWarning\", rgbToHex(theme['--now-color_alert--warning-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertModerate\", rgbToHex(theme['--now-color_alert--moderate-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertInfo\", rgbToHex(theme['--now-color_alert--info-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertPositive\", rgbToHex(theme['--now-color_alert--positive-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"alertLow\", rgbToHex(theme['--now-color_alert--low-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedBlue\", rgbToHex(theme['--now-color_grouped--blue-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedBrown\", rgbToHex(theme['--now-color_grouped--brown-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGray\", rgbToHex(theme['--now-color_grouped--gray-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGreen\", rgbToHex(theme['--now-color_grouped--green-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedGreenYellow\", rgbToHex(theme['--now-color_grouped--green-yellow-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedMagenta\", rgbToHex(theme['--now-color_grouped--magenta-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedOrange\", rgbToHex(theme['--now-color_grouped--orange-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedPink\", rgbToHex(theme['--now-color_grouped--pink-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedPurple\", rgbToHex(theme['--now-color_grouped--purple-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedTeal\", rgbToHex(theme['--now-color_grouped--teal-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"groupedYellow\", rgbToHex(theme['--now-color_grouped--yellow-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"link\", rgbToHex(theme['--now-color--link-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref3, \"focus\", rgbToHex(theme['--now-color--focus-2'])), _ref3;\n};\n\nvar luminance = function luminance(rgb) {\n  var a = rgb.split(',').map(function (v) {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n};\n\nvar getContrastRatio = function getContrastRatio(color1, color2) {\n  if (!color1 || !color2) return {\n    normal: {},\n    large: {},\n    ratio: null\n  };\n\n  if (isHex(color1)) {\n    color1 = hexToRgb(color1);\n  }\n\n  if (isHex(color2)) {\n    color2 = hexToRgb(color2);\n  }\n\n  var color1luminance = luminance(color1);\n  var color2luminance = luminance(color2);\n  var ratio = color1luminance > color2luminance ? (color2luminance + 0.05) / (color1luminance + 0.05) : (color1luminance + 0.05) / (color2luminance + 0.05);\n  var out = {\n    normal: {\n      aa: ratio < 1 / 4.5 ? 'Pass' : 'Fail',\n      aaa: ratio < 1 / 7 ? 'Pass' : 'Fail'\n    },\n    large: {\n      aa: ratio < 1 / 3 ? 'Pass' : 'Fail',\n      aaa: ratio < 1 / 4.5 ? 'Pass' : 'Fail'\n    },\n    nonText: {\n      aa: ratio < 1 / 3 ? 'Pass' : 'Fail'\n    },\n    ratio: Math.floor(1 / ratio * 10) / 10\n  };\n  return out;\n};\nvar getComplimentaryColors = function getComplimentaryColors(baseColor, variations) {\n  if (!baseColor || !variations) {\n    return [];\n  }\n\n  var _hexToHSL5 = hexToHSL(baseColor),\n      h = _hexToHSL5.h,\n      s = _hexToHSL5.s,\n      l = _hexToHSL5.l;\n\n  var range = Math.round(360 / variations);\n  var out = [new Color(baseColor)];\n\n  for (var i = 1; i < variations; i++) {\n    var newH = h - range * i;\n\n    if (newH < 0) {\n      newH = 360 - Math.abs(newH);\n    }\n\n    out.push(new Color(HSLToHex(newH, s, l)));\n  }\n\n  return out;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HSLToHex\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2NvbG9yLWdlbmVyYXRvci9nZW5lcmF0ZUNvbG9yc1AuanM/YWQyNCJdLCJuYW1lcyI6WyJDb2xvciIsImNvbG9yIiwibmFtZSIsImhleCIsInJnYiIsImhleFRvUmdiIiwiY29sb3JTdHJpbmciLCJ0b1N0cmluZyIsImxlbmd0aCIsImNhbGN1bGF0ZUNvbG9yIiwiY29sb3IxIiwiY29sb3IyIiwicmF0aW8iLCJNYXRoIiwicm91bmQiLCJ0b0ZpeGVkIiwiciIsInBhcnNlSW50Iiwic3Vic3RyaW5nIiwiZyIsImIiLCJyZ2JUb0hleCIsIm5ld1JHQiIsInNwbGl0IiwiZ2VuZXJhdGVDb2xvcnMiLCJ2YXJpYXRpb25zIiwic3RhcnRzV2l0aCIsInBlcmNlbnRhZ2UiLCJjb2xvcnMiLCJpIiwic2xpY2UiLCJnZW5lcmF0ZUNvbG9yUmFuZ2UiLCJsaWdodFZhcmlhdGlvbnMiLCJsaWdodFBlcmNlbnRhZ2UiLCJsaWdodFNhdHVyYXRpb24iLCJkYXJrVmFyaWF0aW9ucyIsImRhcmtQZXJjZW50YWdlIiwiZGFya1NhdHVyYXRpb24iLCJob29rIiwic3RhcnRJbmRleCIsImluY2x1ZGVFbmRzIiwiaXNEYXJrIiwicmVtb3ZlRW5kIiwiZmlyc3RDb2xvciIsImxhc3RDb2xvciIsImZpcnN0SFNMIiwiaGV4VG9IU0wiLCJuZXdGaXJzdFMiLCJzIiwiZmlyc3RIRGlmZiIsImgiLCJhYnMiLCJIU0xUb0hleCIsImwiLCJsYXN0SFNMIiwibmV3TGFzdFMiLCJsaWdodENvbG9ycyIsImRhcmtDb2xvcnMiLCJvdXQiLCJwb3AiLCJyZXZlcnNlIiwibWFwIiwiaW5kZXgiLCJnZW5lcmF0ZUNvbG9yU2NhbGUiLCJsaWdodEluY3JlbWVudHMiLCJzYXR1cmF0aW9uSW5jcmVtZW50cyIsImNhbGN1bGF0ZWRDb2xvciIsImNvbnNvbGUiLCJsb2ciLCJzSW5jIiwibmV3SGV4IiwicHVzaCIsImdldENvbG9ycyIsInNlbGVjdGVkQ29sb3JzIiwiZ2VuZXJhdGVkIiwiZ2V0TmV1dHJhbHMiLCJnZXRTdXJmYWNlTmV1dHJhbCIsImdldFN1cmZhY2VEaXZpZGVyIiwiZ2V0QmFja2dyb3VuZFByaW1hcnkiLCJnZXRCYWNrZ3JvdW5kU2Vjb25kYXJ5IiwiZ2V0QmFja2dyb3VuZFRlcnRpYXJ5IiwiZ2V0RGl2aWRlclByaW1hcnkiLCJnZXREaXZpZGVyU2Vjb25kYXJ5IiwiZ2V0RGl2aWRlclRlcnRpYXJ5IiwiZ2V0VGV4dFByaW1hcnkiLCJnZXRUZXh0U2Vjb25kYXJ5IiwiZ2V0VGV4dFRlcnRpYXJ5IiwiZ2V0Qm9yZGVyUHJpbWFyeSIsImdldEJvcmRlclNlY29uZGFyeSIsImdldEJvcmRlclRlcnRpYXJ5IiwiZ2V0UHJpbWFyeSIsImdldFNlY29uZGFyeSIsImdldFNlbGVjdGlvblByaW1hcnkiLCJnZXRTZWxlY3Rpb25TZWNvbmRhcnkiLCJnZXRJbnRlcmFjdGl2ZSIsImdldExpbmsiLCJnZXRGb2N1cyIsImdldEFsZXJ0Q3JpdGljYWwiLCJnZXRBbGVydEhpZ2giLCJnZXRBbGVydFdhcm5pbmciLCJnZXRBbGVydE1vZGVyYXRlIiwiZ2V0QWxlcnRJbmZvIiwiZ2V0QWxlcnRQb3NpdGl2ZSIsImdldEFsZXJ0TG93IiwiZ2V0QnJhbmQiLCJnZXRTdXJmYWNlQnJhbmQiLCJnZXRDaHJvbWVCcmFuZCIsImdldENocm9tZURpdmlkZXIiLCJnZXRHcm91cGVkIiwiaXNIZXgiLCJ0ZXN0IiwiSCIsImNtaW4iLCJtaW4iLCJjbWF4IiwibWF4IiwiZGVsdGEiLCJjIiwieCIsIm0iLCJnZXROZXV0cmFsQmFzZUNvbG9yc0Zyb21CcmFuZFByaW1hcnlIZXgiLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJuZXV0cmFscyIsImJhc2VOZXV0cmFsIiwic2hpZnQiLCJlIiwiam9pbiIsImdldEJhc2VDb2xvcnMiLCJ0aGVtZSIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJzZWxlY3Rpb25QcmltYXJ5Iiwic2VsZWN0aW9uU2Vjb25kYXJ5IiwiaW50ZXJhY3RpdmUiLCJjaHJvbWVCcmFuZCIsImNocm9tZURpdmlkZXIiLCJicmFuZE5ldXRyYWwiLCJicmFuZFByaW1hcnkiLCJicmFuZFNlY29uZGFyeSIsInN1cmZhY2VOZXV0cmFsIiwic3VyZmFjZURpdmlkZXIiLCJzdXJmYWNlQnJhbmQiLCJsdW1pbmFuY2UiLCJhIiwidiIsInBvdyIsImdldENvbnRyYXN0UmF0aW8iLCJub3JtYWwiLCJsYXJnZSIsImNvbG9yMWx1bWluYW5jZSIsImNvbG9yMmx1bWluYW5jZSIsImFhIiwiYWFhIiwibm9uVGV4dCIsImZsb29yIiwiZ2V0Q29tcGxpbWVudGFyeUNvbG9ycyIsImJhc2VDb2xvciIsInJhbmdlIiwibmV3SCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFBTUEsSyxHQUNMLGVBQVlDLEtBQVosRUFBbUJDLElBQW5CLEVBQXlCO0FBQUE7O0FBQ3hCLE9BQUtDLEdBQUwsR0FBV0YsS0FBWDtBQUNBLE9BQUtHLEdBQUwsR0FBV0MsUUFBUSxDQUFDSixLQUFELENBQW5CO0FBQ0EsT0FBS0MsSUFBTCxHQUFZQSxJQUFaO0FBQ0EsQzs7QUFHRixJQUFNQyxHQUFHLEdBQUcsU0FBTkEsR0FBTSxDQUFDRixLQUFELEVBQVc7QUFDdEIsTUFBTUssV0FBVyxHQUFHTCxLQUFLLENBQUNNLFFBQU4sQ0FBZSxFQUFmLENBQXBCO0FBQ0EsU0FBT0QsV0FBVyxDQUFDRSxNQUFaLEtBQXVCLENBQXZCLGNBQStCRixXQUEvQixJQUErQ0EsV0FBdEQ7QUFDQSxDQUhEOztBQUtBLElBQU1HLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQ0MsTUFBRCxFQUFTQyxNQUFULEVBQWlCQyxLQUFqQixFQUEyQjtBQUNqREEsT0FBSyxHQUFHLENBQUNDLElBQUksQ0FBQ0MsS0FBTCxDQUFXRixLQUFLLEdBQUcsR0FBbkIsSUFBMEIsR0FBM0IsRUFBZ0NHLE9BQWhDLENBQXdDLENBQXhDLENBQVI7QUFFQSxNQUFNQyxDQUFDLEdBQUdILElBQUksQ0FBQ0MsS0FBTCxDQUNURyxRQUFRLENB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QUQsRUFBWXBJLFVBQVosRUFBMkI7QUFDaEUsTUFBSSxDQUFDb0ksU0FBRCxJQUFjLENBQUNwSSxVQUFuQixFQUErQjtBQUM5QixXQUFPLEVBQVA7QUFDQTs7QUFIK0QsbUJBSzlDcUIsUUFBUSxDQUFDK0csU0FBRCxDQUxzQztBQUFBLE1BS3pEM0csQ0FMeUQsY0FLekRBLENBTHlEO0FBQUEsTUFLdERGLENBTHNELGNBS3REQSxDQUxzRDtBQUFBLE1BS25ESyxDQUxtRCxjQUtuREEsQ0FMbUQ7O0FBTWhFLE1BQU15RyxLQUFLLEdBQUdqSixJQUFJLENBQUNDLEtBQUwsQ0FBVyxNQUFNVyxVQUFqQixDQUFkO0FBQ0EsTUFBTWlDLEdBQUcsR0FBRyxDQUFDLElBQUkxRCxLQUFKLENBQVU2SixTQUFWLENBQUQsQ0FBWjs7QUFFQSxPQUFLLElBQUloSSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSixVQUFwQixFQUFnQ0ksQ0FBQyxFQUFqQyxFQUFxQztBQUNwQyxRQUFJa0ksSUFBSSxHQUFHN0csQ0FBQyxHQUFHNEcsS0FBSyxHQUFHakksQ0FBdkI7O0FBQ0EsUUFBSWtJLElBQUksR0FBRyxDQUFYLEVBQWM7QUFDYkEsVUFBSSxHQUFHLE1BQU1sSixJQUFJLENBQUNzQyxHQUFMLENBQVM0RyxJQUFULENBQWI7QUFDQTs7QUFFRHJHLE9BQUcsQ0FBQ2EsSUFBSixDQUFTLElBQUl2RSxLQUFKLENBQVVvRCxRQUFRLENBQUMyRyxJQUFELEVBQU8vRyxDQUFQLEVBQVVLLENBQVYsQ0FBbEIsQ0FBVDtBQUNBOztBQUVELFNBQU9LLEdBQVA7QUFDQSxDQW5CTSIsImZpbGUiOiIuL2xpYi9jb2xvci1nZW5lcmF0b3IvZ2VuZXJhdGVDb2xvcnNQLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ29sb3Ige1xuXHRjb25zdHJ1Y3Rvcihjb2xvciwgbmFtZSkge1xuXHRcdHRoaXMuaGV4ID0gY29sb3I7XG5cdFx0dGhpcy5yZ2IgPSBoZXhUb1JnYihjb2xvcik7XG5cdFx0dGhpcy5uYW1lID0gbmFtZTtcblx0fVxufVxuXG5jb25zdCBoZXggPSAoY29sb3IpID0+IHtcblx0Y29uc3QgY29sb3JTdHJpbmcgPSBjb2xvci50b1N0cmluZygxNik7XG5cdHJldHVybiBjb2xvclN0cmluZy5sZW5ndGggPT09IDEgPyBgMCR7Y29sb3JTdHJpbmd9YCA6IGNvbG9yU3RyaW5nO1xufTtcblxuY29uc3QgY2FsY3VsYXRlQ29sb3IgPSAoY29sb3IxLCBjb2xvcjIsIHJhdGlvKSA9PiB7XG5cdHJhdGlvID0gKE1hdGgucm91bmQocmF0aW8gKiAxMDApIC8gMTAwKS50b0ZpeGVkKDIpO1xuXG5cdGNvbnN0IHIgPSBNYXRoLnJvdW5kKFxuXHRcdHBhcnNlSW50KGNvbG9yMi5zdWJzdHJpbmcoMCwgMiksIDE2KSAqIHJhdGlvICtcblx0XHRcdHBhcnNlSW50KGNvbG9yMS5zdWJzdHJpbmcoMCwgMiksIDE2KSAqICgxIC0gcmF0aW8pXG5cdCk7XG5cdGNvbnN0IGcgPSBNYXRoLnJvdW5kKFxuXHRcdHBhcnNlSW50KGNvbG9yMi5zdWJzdHJpbmcoMiwgNCksIDE2KSAqIHJhdGlvICtcblx0XHRcdHBhcnNlSW50KGNvbG9yMS5zdWJzdHJpbmcoMiwgNCksIDE2KSAqICgxIC0gcmF0aW8pXG5cdCk7XG5cdGNvbnN0IGIgPSBNYXRoLnJvdW5kKFxuXHRcdHBhcnNlSW50KGNvbG9yMi5zdWJzdHJpbmcoNCwgNiksIDE2KSAqIHJhdGlvICtcblx0XHRcdHBhcnNlSW50KGNvbG9yMS5zdWJzdHJpbmcoNCwgNiksIDE2KSAqICgxIC0gcmF0aW8pXG5cdCk7XG5cblx0cmV0dXJuIGhleChyKSArIGhleChnKSArIGhleChiKTtcbn07XG5cbmNvbnN0IGhleFRvUmdiID0gKGhleCkgPT4ge1xuXHRjb25zdCByID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZygxLCAzKSwgMTYpO1xuXHRjb25zdCBnID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZygzLCA1KSwgMTYpO1xuXHRjb25zdCBiID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZyg1LCA3KSwgMTYpO1xuXG5cdHJldHVybiBgJHtyfSwke2d9LCR7Yn1gO1xufTtcblxuY29uc3QgcmdiVG9IZXggPSAocmdiKSA9PiB7XG5cdGlmICghcmdiKSByZXR1cm4gJyc7XG5cblx0Y29uc3QgbmV3UkdCID0gcmdiLnNwbGl0KCcsJyk7XG5cblx0bGV0IHIgPSBwYXJzZUludChuZXdSR0JbMF0pLnRvU3RyaW5nKDE2KTtcblx0bGV0IGcgPSBwYXJzZUludChuZXdSR0JbMV0pLnRvU3RyaW5nKDE2KTtcblx0bGV0IGIgPSBwYXJzZUludChuZXdSR0JbMl0pLnRvU3RyaW5nKDE2KTtcblxuXHRpZiAoci5sZW5ndGggPT09IDEpIHIgPSAnMCcgKyByO1xuXHRpZiAoZy5sZW5ndGggPT09IDEpIGcgPSAnMCcgKyBnO1xuXHRpZiAoYi5sZW5ndGggPT09IDEpIGIgPSAnMCcgKyBiO1xuXG5cdHJldHVybiAnIycgKyByICsgZyArIGI7XG59O1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVDb2xvcnMgPSAoY29sb3IxLCBjb2xvcjIsIHZhcmlhdGlvbnMpID0+IHtcblx0aWYgKCF2YXJpYXRpb25zKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cblx0Y29sb3IxID0gY29sb3IxLnN0YXJ0c1dpdGgoJyMnKSA/IGNvbG9yMSA6IGAjJHtjb2xvcjF9YDtcblx0Y29sb3IyID0gY29sb3IyLnN0YXJ0c1dpdGgoJyMnKSA/IGNvbG9yMiA6IGAjJHtjb2xvcjJ9YDtcblx0bGV0IHBlcmNlbnRhZ2UgPSAxIC8gdmFyaWF0aW9ucztcblx0bGV0IGNvbG9ycyA9IFtdO1xuXG5cdGZvciAobGV0IGkgPSAxOyBpIDw9IHZhcmlhdGlvbnMgLSAxOyBpKyspIHtcblx0XHRjb2xvcnMgPSBbXG5cdFx0XHQuLi5jb2xvcnMsXG5cdFx0XHQnIycgKyBjYWxjdWxhdGVDb2xvcihjb2xvcjEuc2xpY2UoMSksIGNvbG9yMi5zbGljZSgxKSwgaSAqIHBlcmNlbnRhZ2UpLFxuXHRcdF07XG5cdH1cblxuXHRyZXR1cm4gY29sb3JzO1xufTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ29sb3JSYW5nZSA9ICh7XG5cdGNvbG9yLFxuXHRsaWdodFZhcmlhdGlvbnMsXG5cdGxpZ2h0UGVyY2VudGFnZSxcblx0bGlnaHRTYXR1cmF0aW9uLFxuXHRkYXJrVmFyaWF0aW9ucyxcblx0ZGFya1BlcmNlbnRhZ2UsXG5cdGRhcmtTYXR1cmF0aW9uLFxuXHRob29rID0gJ2hvb2snLFxuXHRzdGFydEluZGV4LFxuXHRpbmNsdWRlRW5kcyxcblx0aXNEYXJrLFxuXHRyZW1vdmVFbmQsXG59KSA9PiB7XG5cdGlmICghY29sb3IpIHJldHVybiBbXTtcblxuXHRsZXQgZmlyc3RDb2xvciA9IGNhbGN1bGF0ZUNvbG9yKFxuXHRcdCdmZmZmZmYnLFxuXHRcdGNvbG9yLnNsaWNlKDEpLFxuXHRcdDEgLSBsaWdodFBlcmNlbnRhZ2Vcblx0KTtcblx0bGV0IGxhc3RDb2xvciA9IGNhbGN1bGF0ZUNvbG9yKGNvbG9yLnNsaWNlKDEpLCAnMDAwMDAwJywgZGFya1BlcmNlbnRhZ2UpO1xuXG5cdGlmIChsaWdodFNhdHVyYXRpb24pIHtcblx0XHRsZXQgZmlyc3RIU0wgPSBoZXhUb0hTTCgnIycgKyBmaXJzdENvbG9yKTtcblx0XHRjb25zdCBuZXdGaXJzdFMgPSBmaXJzdEhTTC5zICsgbGlnaHRTYXR1cmF0aW9uICogZmlyc3RIU0wucztcblx0XHRmaXJzdEhTTC5zID0gbmV3Rmlyc3RTID4gMTAwID8gMTAwIDogbmV3Rmlyc3RTO1xuXG5cdFx0Y29uc3QgZmlyc3RIRGlmZiA9IGhleFRvSFNMKGNvbG9yKS5oIC0gZmlyc3RIU0wuaDtcblx0XHRpZiAoTWF0aC5hYnMoZmlyc3RIRGlmZikgPiAyMCkge1xuXHRcdFx0Zmlyc3RIU0wuaCA9IGhleFRvSFNMKGNvbG9yKS5oO1xuXHRcdH1cblxuXHRcdGZpcnN0Q29sb3IgPSBIU0xUb0hleChmaXJzdEhTTC5oLCBmaXJzdEhTTC5zLCBmaXJzdEhTTC5sKS5zdWJzdHJpbmcoMSk7XG5cdH1cblxuXHRpZiAoZGFya1NhdHVyYXRpb24pIHtcblx0XHRsZXQgbGFzdEhTTCA9IGhleFRvSFNMKCcjJyArIGxhc3RDb2xvcik7XG5cdFx0Y29uc3QgbmV3TGFzdFMgPSBsYXN0SFNMLnMgKyBkYXJrU2F0dXJhdGlvbiAqIGxhc3RIU0wucztcblx0XHRsYXN0SFNMLnMgPSBuZXdMYXN0UyA+IDEwMCA/IDEwMCA6IG5ld0xhc3RTO1xuXG5cdFx0Ly8gY29uc3QgbGFzdEhEaWZmID0gaGV4VG9IU0woY29sb3IpLmggLSBsYXN0SFNMLmg7XG5cdFx0Ly8gaWYgKE1hdGguYWJzKGxhc3RIRGlmZikgPiAyMCkge1xuXHRcdC8vIFx0bGFzdEhTTC5oID0gaGV4VG9IU0woY29sb3IpLmg7XG5cdFx0Ly8gfVxuXG5cdFx0bGFzdENvbG9yID0gSFNMVG9IZXgobGFzdEhTTC5oLCBsYXN0SFNMLnMsIGxhc3RIU0wubCkuc3Vic3RyaW5nKDEpO1xuXHR9XG5cblx0Y29uc3QgbGlnaHRDb2xvcnMgPSBnZW5lcmF0ZUNvbG9ycyhmaXJzdENvbG9yLCBjb2xvciwgbGlnaHRWYXJpYXRpb25zKTtcblx0Y29uc3QgZGFya0NvbG9ycyA9IGdlbmVyYXRlQ29sb3JzKGNvbG9yLCBsYXN0Q29sb3IsIGRhcmtWYXJpYXRpb25zKTtcblxuXHRsZXQgb3V0ID0gW107XG5cdGlmIChsaWdodFZhcmlhdGlvbnMpIHtcblx0XHRvdXQgPSBbYCMke2ZpcnN0Q29sb3J9YCwgLi4ubGlnaHRDb2xvcnMsIC4uLm91dF07XG5cdH1cblxuXHRvdXQgPSBbLi4ub3V0LCBjb2xvcl07XG5cblx0aWYgKGRhcmtWYXJpYXRpb25zKSB7XG5cdFx0b3V0ID0gWy4uLm91dCwgLi4uZGFya0NvbG9ycywgYCMke2xhc3RDb2xvcn1gXTtcblx0fVxuXG5cdGlmIChpbmNsdWRlRW5kcykge1xuXHRcdG91dCA9IFtgI2ZmZmZmZmAsIC4uLm91dCwgYCMwMDAwMDBgXTtcblx0fVxuXG5cdGlmIChyZW1vdmVFbmQpIHtcblx0XHRvdXQucG9wKCk7XG5cdH1cblxuXHRpZiAoaXNEYXJrKSB7XG5cdFx0b3V0LnJldmVyc2UoKTtcblx0fVxuXG5cdHJldHVybiBvdXQubWFwKChjb2xvciwgaW5kZXgpID0+IHtcblx0XHRsZXQgbmFtZSA9IGAtLSR7aG9va31gO1xuXHRcdGlmIChzdGFydEluZGV4ICE9PSBudWxsKSB7XG5cdFx0XHRuYW1lICs9IGAtJHtpbmRleCArIChzdGFydEluZGV4ID8gc3RhcnRJbmRleCA6IDApfWA7XG5cdFx0fVxuXHRcdHJldHVybiBuZXcgQ29sb3IoY29sb3IsIG5hbWUpO1xuXHR9KTtcbn07XG5cblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ29sb3JTY2FsZSA9ICh7XG5cdGNvbG9yLFxuXHRsaWdodFZhcmlhdGlvbnMsXG5cdGxpZ2h0UGVyY2VudGFnZSxcblx0bGlnaHRTYXR1cmF0aW9uLFxuXHRkYXJrVmFyaWF0aW9ucyxcblx0ZGFya1BlcmNlbnRhZ2UsXG5cdGRhcmtTYXR1cmF0aW9uLFxuXHRob29rID0gJ2hvb2snLFxuXHRzdGFydEluZGV4LFxuXHRpbmNsdWRlRW5kcyxcblx0aXNEYXJrLFxuXHRyZW1vdmVFbmQsXG59KSA9PiB7XG5cdGlmICghY29sb3IpIHJldHVybiBbXTtcblxuXHRjb25zdCBsaWdodENvbG9ycyA9IFtdO1xuXHRjb25zdCBkYXJrQ29sb3JzID0gW107XG5cblxuXG5cdC8vIC45NSA9IDFcblxuXHQvLyB2YXJpYXRpb25zID0gLjk1L2xpZ2h0VmFyaWF0aW9ucztcblxuXHQvLyAjNGY1NjY0XG5cdC8vIDc5LCA4NiwgMTAwXG5cdC8vIDIyMMKwLCAxMiUsIDM1JVxuXG5cdC8vICM2MTY4NzVcblx0Ly8gOTcsIDEwNCwgMTE3XG5cdC8vIDIxOcKwLCA5JSwgNDIlXG5cblxuXHQvLyAjNjI2ODc0XG5cdC8vIDk4LCAxMDQsIDExNlxuXHQvLyAyMjDCsCwgOCUsIDQyJVxuXG5cblxuXG5cdGNvbnN0IGxpZ2h0SW5jcmVtZW50cyA9IGxpZ2h0UGVyY2VudGFnZS9saWdodFZhcmlhdGlvbnM7XG5cdGNvbnN0IHNhdHVyYXRpb25JbmNyZW1lbnRzID0gbGlnaHRTYXR1cmF0aW9uL2xpZ2h0VmFyaWF0aW9ucztcblxuXHRmb3IodmFyIGk9MDsgaTxsaWdodFZhcmlhdGlvbnM7IGkrKykge1xuXHRcdGNvbnN0IGNhbGN1bGF0ZWRDb2xvciA9IGNhbGN1bGF0ZUNvbG9yKFxuXHRcdFx0J2ZmZmZmZicsXG5cdFx0XHRjb2xvci5zbGljZSgxKSxcblx0XHRcdDEgLSAoKGkgKyAxKSAqIGxpZ2h0SW5jcmVtZW50cylcblx0XHQpO1xuXHRcdGNvbnNvbGUubG9nKGNhbGN1bGF0ZWRDb2xvcilcblxuXHRcdGxldCB7aCwgcywgbH0gPSBoZXhUb0hTTChgIyR7Y2FsY3VsYXRlZENvbG9yfWApO1xuXHRcdGNvbnNvbGUubG9nKHMpO1xuXHRcdGNvbnNvbGUubG9nKHNhdHVyYXRpb25JbmNyZW1lbnRzKVxuXHRcdGNvbnN0IHNJbmMgPSBzICsgKHMgKiBzYXR1cmF0aW9uSW5jcmVtZW50cyk7XG5cdFx0cyA9IHNJbmMgPiAxMDAgPyAxMDAgOiBzSW5jO1xuXG5cdFx0Y29uc3QgbmV3SGV4ID0gSFNMVG9IZXgoaCwgcywgbCk7XG5cdFx0bGlnaHRDb2xvcnMucHVzaChuZXdIZXgpO1xuXHR9XG5cblx0Y29uc29sZS5sb2cobGlnaHRDb2xvcnMpXG5cblx0aWYgKGluY2x1ZGVFbmRzKSB7XG5cdFx0bGlnaHRDb2xvcnMucHVzaCgnI2ZmZmZmZicpXG5cdH1cblxuXHRsaWdodENvbG9ycy5yZXZlcnNlKCk7XG5cblxuXHRjb25zdCBvdXQgPSBbLi4ubGlnaHRDb2xvcnMsIGNvbG9yXTtcblxuXG5cdHJldHVybiBvdXQubWFwKChjb2xvciwgaW5kZXgpID0+IHtcblx0XHRsZXQgbmFtZSA9IGAtLSR7aG9va31gO1xuXHRcdGlmIChzdGFydEluZGV4ICE9PSBudWxsKSB7XG5cdFx0XHRuYW1lICs9IGAtJHtpbmRleCArIChzdGFydEluZGV4ID8gc3RhcnRJbmRleCA6IDApfWA7XG5cdFx0fVxuXHRcdHJldHVybiBuZXcgQ29sb3IoY29sb3IsIG5hbWUpO1xuXHR9KTtcblxufTtcblxuZXhwb3J0IGNvbnN0IGdldENvbG9ycyA9IChzZWxlY3RlZENvbG9ycywgaXNEYXJrID0gZmFsc2UpID0+IHtcblx0Y29uc3QgZ2VuZXJhdGVkID0ge307XG5cblx0Zm9yIChjb25zdCBpIGluIHNlbGVjdGVkQ29sb3JzKSB7XG5cdFx0c3dpdGNoIChpKSB7XG5cdFx0XHRjYXNlICduZXV0cmFscyc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldE5ldXRyYWxzKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0Z2VuZXJhdGVkWydzdXJmYWNlTmV1dHJhbCddID0gZ2V0U3VyZmFjZU5ldXRyYWwoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnc3VyZmFjZURpdmlkZXInXSA9IGdldFN1cmZhY2VEaXZpZGVyKFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2JhY2tncm91bmRQcmltYXJ5J10gPSBnZXRCYWNrZ3JvdW5kUHJpbWFyeShcblx0XHRcdFx0XHRzZWxlY3RlZENvbG9yc1tpXSxcblx0XHRcdFx0XHRpc0Rhcmtcblx0XHRcdFx0KTtcblx0XHRcdFx0Z2VuZXJhdGVkWydiYWNrZ3JvdW5kU2Vjb25kYXJ5J10gPSBnZXRCYWNrZ3JvdW5kU2Vjb25kYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2JhY2tncm91bmRUZXJ0aWFyeSddID0gZ2V0QmFja2dyb3VuZFRlcnRpYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2RpdmlkZXJQcmltYXJ5J10gPSBnZXREaXZpZGVyUHJpbWFyeShcblx0XHRcdFx0XHRzZWxlY3RlZENvbG9yc1tpXSxcblx0XHRcdFx0XHRpc0Rhcmtcblx0XHRcdFx0KTtcblx0XHRcdFx0Z2VuZXJhdGVkWydkaXZpZGVyU2Vjb25kYXJ5J10gPSBnZXREaXZpZGVyU2Vjb25kYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2RpdmlkZXJUZXJ0aWFyeSddID0gZ2V0RGl2aWRlclRlcnRpYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ3RleHRQcmltYXJ5J10gPSBnZXRUZXh0UHJpbWFyeShzZWxlY3RlZENvbG9yc1tpXSwgaXNEYXJrKTtcblx0XHRcdFx0Z2VuZXJhdGVkWyd0ZXh0U2Vjb25kYXJ5J10gPSBnZXRUZXh0U2Vjb25kYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ3RleHRUZXJ0aWFyeSddID0gZ2V0VGV4dFRlcnRpYXJ5KHNlbGVjdGVkQ29sb3JzW2ldLCBpc0RhcmspO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2JvcmRlclByaW1hcnknXSA9IGdldEJvcmRlclByaW1hcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnYm9yZGVyU2Vjb25kYXJ5J10gPSBnZXRCb3JkZXJTZWNvbmRhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnYm9yZGVyVGVydGlhcnknXSA9IGdldEJvcmRlclRlcnRpYXJ5KHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ3ByaW1hcnknOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRQcmltYXJ5KHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ3NlY29uZGFyeSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldFNlY29uZGFyeShzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdzZWxlY3Rpb25QcmltYXJ5Jzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0U2VsZWN0aW9uUHJpbWFyeShzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdzZWxlY3Rpb25TZWNvbmRhcnknOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRTZWxlY3Rpb25TZWNvbmRhcnkoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnaW50ZXJhY3RpdmUnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRJbnRlcmFjdGl2ZShzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdsaW5rJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0TGluayhzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdmb2N1cyc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEZvY3VzKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2FsZXJ0Q3JpdGljYWwnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRBbGVydENyaXRpY2FsKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2FsZXJ0SGlnaCc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEFsZXJ0SGlnaChzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdhbGVydFdhcm5pbmcnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRBbGVydFdhcm5pbmcoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRNb2RlcmF0ZSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEFsZXJ0TW9kZXJhdGUoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRJbmZvJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0QWxlcnRJbmZvKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2FsZXJ0UG9zaXRpdmUnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRBbGVydFBvc2l0aXZlKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2FsZXJ0TG93Jzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0QWxlcnRMb3coc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYnJhbmROZXV0cmFsJzpcblx0XHRcdGNhc2UgJ2JyYW5kUHJpbWFyeSc6XG5cdFx0XHRjYXNlICdicmFuZFNlY29uZGFyeSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEJyYW5kKHNlbGVjdGVkQ29sb3JzW2ldLCBpKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdzdXJmYWNlQnJhbmQnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRTdXJmYWNlQnJhbmQoc2VsZWN0ZWRDb2xvcnNbaV0sIGlzRGFyayk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnY2hyb21lQnJhbmQnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRDaHJvbWVCcmFuZChzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdjaHJvbWVEaXZpZGVyJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0Q2hyb21lRGl2aWRlcihzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdncm91cGVkQmx1ZSc6XG5cdFx0XHRjYXNlICdncm91cGVkQnJvd24nOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZEdyYXknOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZEdyZWVuJzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRHcmVlblllbGxvdyc6XG5cdFx0XHRjYXNlICdncm91cGVkTWFnZW50YSc6XG5cdFx0XHRjYXNlICdncm91cGVkT3JhbmdlJzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRQaW5rJzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRQdXJwbGUnOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZFRlYWwnOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZFllbGxvdyc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEdyb3VwZWQoc2VsZWN0ZWRDb2xvcnNbaV0sIGkpO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0ZGVmYXVsdDpcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZ2VuZXJhdGVkO1xufTtcblxuZXhwb3J0IGNvbnN0IGlzSGV4ID0gKGhleCkgPT4ge1xuXHRyZXR1cm4gL14jWzAtOUEtRl17Nn0kL2kudGVzdChoZXgpO1xufTtcblxuZXhwb3J0IGNvbnN0IGhleFRvSFNMID0gKEgpID0+IHtcblx0Ly8gQ29udmVydCBoZXggdG8gUkdCIGZpcnN0XG5cdGxldCByID0gMCxcblx0XHRnID0gMCxcblx0XHRiID0gMDtcblx0aWYgKEgubGVuZ3RoID09IDQpIHtcblx0XHRyID0gJzB4JyArIEhbMV0gKyBIWzFdO1xuXHRcdGcgPSAnMHgnICsgSFsyXSArIEhbMl07XG5cdFx0YiA9ICcweCcgKyBIWzNdICsgSFszXTtcblx0fSBlbHNlIGlmIChILmxlbmd0aCA9PSA3KSB7XG5cdFx0ciA9ICcweCcgKyBIWzFdICsgSFsyXTtcblx0XHRnID0gJzB4JyArIEhbM10gKyBIWzRdO1xuXHRcdGIgPSAnMHgnICsgSFs1XSArIEhbNl07XG5cdH1cblx0Ly8gVGhlbiB0byBIU0xcblx0ciAvPSAyNTU7XG5cdGcgLz0gMjU1O1xuXHRiIC89IDI1NTtcblx0bGV0IGNtaW4gPSBNYXRoLm1pbihyLCBnLCBiKSxcblx0XHRjbWF4ID0gTWF0aC5tYXgociwgZywgYiksXG5cdFx0ZGVsdGEgPSBjbWF4IC0gY21pbixcblx0XHRoID0gMCxcblx0XHRzID0gMCxcblx0XHRsID0gMDtcblxuXHRpZiAoZGVsdGEgPT0gMCkgaCA9IDA7XG5cdGVsc2UgaWYgKGNtYXggPT0gcikgaCA9ICgoZyAtIGIpIC8gZGVsdGEpICUgNjtcblx0ZWxzZSBpZiAoY21heCA9PSBnKSBoID0gKGIgLSByKSAvIGRlbHRhICsgMjtcblx0ZWxzZSBoID0gKHIgLSBnKSAvIGRlbHRhICsgNDtcblxuXHRoID0gTWF0aC5yb3VuZChoICogNjApO1xuXG5cdGlmIChoIDwgMCkgaCArPSAzNjA7XG5cblx0bCA9IChjbWF4ICsgY21pbikgLyAyO1xuXHRzID0gZGVsdGEgPT0gMCA/IDAgOiBkZWx0YSAvICgxIC0gTWF0aC5hYnMoMiAqIGwgLSAxKSk7XG5cdHMgPSArKHMgKiAxMDApLnRvRml4ZWQoMSk7XG5cdGwgPSArKGwgKiAxMDApLnRvRml4ZWQoMSk7XG5cblx0Ly8gcmV0dXJuIFwiaHNsKFwiICsgTWF0aC5yb3VuZChoKSArIFwiLFwiICsgTWF0aC5yb3VuZChzKSArIFwiLFwiICsgTWF0aC5yb3VuZChsKSArIFwiKVwiO1xuXHRyZXR1cm4ge1xuXHRcdGg6IE1hdGgucm91bmQoaCksXG5cdFx0czogTWF0aC5yb3VuZChzKSxcblx0XHRsOiBNYXRoLnJvdW5kKGwpLFxuXHR9O1xufTtcblxuZXhwb3J0IGNvbnN0IEhTTFRvSGV4ID0gKGgsIHMsIGwpID0+IHtcblx0cyAvPSAxMDA7XG5cdGwgLz0gMTAwO1xuXG5cdGxldCBjID0gKDEgLSBNYXRoLmFicygyICogbCAtIDEpKSAqIHMsXG5cdFx0eCA9IGMgKiAoMSAtIE1hdGguYWJzKCgoaCAvIDYwKSAlIDIpIC0gMSkpLFxuXHRcdG0gPSBsIC0gYyAvIDIsXG5cdFx0ciA9IDAsXG5cdFx0ZyA9IDAsXG5cdFx0YiA9IDA7XG5cblx0aWYgKDAgPD0gaCAmJiBoIDwgNjApIHtcblx0XHRyID0gYztcblx0XHRnID0geDtcblx0XHRiID0gMDtcblx0fSBlbHNlIGlmICg2MCA8PSBoICYmIGggPCAxMjApIHtcblx0XHRyID0geDtcblx0XHRnID0gYztcblx0XHRiID0gMDtcblx0fSBlbHNlIGlmICgxMjAgPD0gaCAmJiBoIDwgMTgwKSB7XG5cdFx0ciA9IDA7XG5cdFx0ZyA9IGM7XG5cdFx0YiA9IHg7XG5cdH0gZWxzZSBpZiAoMTgwIDw9IGggJiYgaCA8IDI0MCkge1xuXHRcdHIgPSAwO1xuXHRcdGcgPSB4O1xuXHRcdGIgPSBjO1xuXHR9IGVsc2UgaWYgKDI0MCA8PSBoICYmIGggPCAzMDApIHtcblx0XHRyID0geDtcblx0XHRnID0gMDtcblx0XHRiID0gYztcblx0fSBlbHNlIGlmICgzMDAgPD0gaCAmJiBoIDwgMzYwKSB7XG5cdFx0ciA9IGM7XG5cdFx0ZyA9IDA7XG5cdFx0YiA9IHg7XG5cdH1cblx0Ly8gSGF2aW5nIG9idGFpbmVkIFJHQiwgY29udmVydCBjaGFubmVscyB0byBoZXhcblx0ciA9IE1hdGgucm91bmQoKHIgKyBtKSAqIDI1NSkudG9TdHJpbmcoMTYpO1xuXHRnID0gTWF0aC5yb3VuZCgoZyArIG0pICogMjU1KS50b1N0cmluZygxNik7XG5cdGIgPSBNYXRoLnJvdW5kKChiICsgbSkgKiAyNTUpLnRvU3RyaW5nKDE2KTtcblxuXHQvLyBQcmVwZW5kIDBzLCBpZiBuZWNlc3Nhcnlcblx0aWYgKHIubGVuZ3RoID09IDEpIHIgPSAnMCcgKyByO1xuXHRpZiAoZy5sZW5ndGggPT0gMSkgZyA9ICcwJyArIGc7XG5cdGlmIChiLmxlbmd0aCA9PSAxKSBiID0gJzAnICsgYjtcblxuXHRyZXR1cm4gJyMnICsgciArIGcgKyBiO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE5ldXRyYWxCYXNlQ29sb3JzRnJvbUJyYW5kUHJpbWFyeUhleCA9IChoZXgpID0+IHtcblx0bGV0IHtoLCBzLCBsfSA9IGhleFRvSFNMKGhleCk7XG5cdHMgPSBzIC0gMjUgPCAwID8gMCA6IHMgLSAyNTtcblx0bCA9IGwgLSAxOCA8IDAgPyAwIDogbCAtIDE4O1xuXG5cdHJldHVybiBIU0xUb0hleChoLCBzLCBsKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXROZXV0cmFscyA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMTAsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjk1LFxuXHRcdGxpZ2h0U2F0dXJhdGlvbjogMSxcblx0XHRkYXJrVmFyaWF0aW9uczogOSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC45LFxuXHRcdGRhcmtTYXR1cmF0aW9uOiAxLFxuXHRcdGhvb2s6ICdub3ctY29sb3ItLW5ldXRyYWwnLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aW5jbHVkZUVuZHM6IHRydWUsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0UHJpbWFyeSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDEsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNjUsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDIsXG5cdFx0aG9vazogJ25vdy1jb2xvci0tcHJpbWFyeScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0U2Vjb25kYXJ5ID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC42NSxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yLS1zZWNvbmRhcnknLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldFNlbGVjdGlvblByaW1hcnkgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuODUsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjUsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDIsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9zZWxlY3Rpb24tLXByaW1hcnknLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldFNlbGVjdGlvblNlY29uZGFyeSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNjUsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDIsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9zZWxlY3Rpb24tLXNlY29uZGFyeScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0SW50ZXJhY3RpdmUgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzQsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjcsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDIsXG5cdFx0aG9vazogJ25vdy1jb2xvci0taW50ZXJhY3RpdmUnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldExpbmsgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuMzIsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAxLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjYzLFxuXHRcdGRhcmtWYXJpYXRpb25zOiAyLFxuXHRcdHN0YXJ0SW5kZXg6IDEsXG5cdFx0aG9vazogJ25vdy1jb2xvci0tbGluaycsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0Rm9jdXMgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuMyxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDEsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNjMsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDEsXG5cdFx0c3RhcnRJbmRleDogMSxcblx0XHRob29rOiAnbm93LWNvbG9yLS1mb2N1cycsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QWxlcnRDcml0aWNhbCA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NSxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNixcblx0XHRkYXJrVmFyaWF0aW9uczogMyxcblx0XHRzdGFydEluZGV4OiAwLFxuXHRcdGhvb2s6ICdub3ctY29sb3JfYWxlcnQtLWNyaXRpY2FsJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRBbGVydEhpZ2ggPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzUsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjcyLFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9hbGVydC0taGlnaCcsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QWxlcnRXYXJuaW5nID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc1LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC43Mixcblx0XHRkYXJrVmFyaWF0aW9uczogMyxcblx0XHRzdGFydEluZGV4OiAwLFxuXHRcdGhvb2s6ICdub3ctY29sb3JfYWxlcnQtLXdhcm5pbmcnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEFsZXJ0TW9kZXJhdGUgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzQsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjcyLFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9hbGVydC0tbW9kZXJhdGUnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEFsZXJ0SW5mbyA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNzIsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDMsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0XHRob29rOiAnbm93LWNvbG9yX2FsZXJ0LS1pbmZvJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRBbGVydFBvc2l0aXZlID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC43OSxcblx0XHRkYXJrVmFyaWF0aW9uczogMyxcblx0XHRzdGFydEluZGV4OiAwLFxuXHRcdGhvb2s6ICdub3ctY29sb3JfYWxlcnQtLXBvc2l0aXZlJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRBbGVydExvdyA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNzksXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDMsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0XHRob29rOiAnbm93LWNvbG9yX2FsZXJ0LS1sb3cnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEJyYW5kID0gKGhleCwgbmFtZSkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXHRuYW1lID1cblx0XHQnLS1ub3ctY29sb3JfYnJhbmQtLScgK1xuXHRcdG5hbWVcblx0XHRcdC5yZXBsYWNlKC8oW2Etel0oPz1bQS1aXSkpL2csICckMSAnKVxuXHRcdFx0LnNwbGl0KCcgJylbMV1cblx0XHRcdC50b0xvd2VyQ2FzZSgpO1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGhleCwgbmFtZSldO1xufTtcblxuY29uc3QgZ2V0U3VyZmFjZU5ldXRyYWwgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGxldCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzE4XS5oZXggOiBuZXV0cmFsc1s0XS5oZXg7XG5cblx0aWYgKGlzRGFyaykge1xuXHRcdGNvbnN0IHtoLCBzLCBsfSA9IGhleFRvSFNMKGJhc2VOZXV0cmFsKTtcblx0XHRiYXNlTmV1dHJhbCA9IEhTTFRvSGV4KGgsIHMgKiAyID4gMTAwID8gMTAwIDogcyAqIDIsIGwpO1xuXHR9XG5cblx0Y29uc3QgY29sb3JzID0gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogYmFzZU5ldXRyYWwsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiBpc0RhcmsgPyAwLjIgOiAwLjk1LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNixcblx0XHRkYXJrUGVyY2VudGFnZTogaXNEYXJrID8gMC40IDogMC44MSxcblx0XHRkYXJrVmFyaWF0aW9uczogMCxcblx0XHRzdGFydEluZGV4OiAxLFxuXHRcdGhvb2s6ICdub3ctY29sb3Jfc3VyZmFjZS0tbmV1dHJhbCcsXG5cdFx0aW5jbHVkZUVuZHM6IGZhbHNlLFxuXHRcdGlzRGFyayxcblx0XHRyZW1vdmVFbmQ6IHRydWUsXG5cdH0pO1xuXG5cdHJldHVybiBjb2xvcnM7XG59O1xuXG5jb25zdCBnZXRTdXJmYWNlRGl2aWRlciA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0bGV0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMTZdLmhleCA6IG5ldXRyYWxzWzhdLmhleDtcblxuXHRpZiAoaXNEYXJrKSB7XG5cdFx0Y29uc3Qge2gsIHMsIGx9ID0gaGV4VG9IU0woYmFzZU5ldXRyYWwpO1xuXHRcdGJhc2VOZXV0cmFsID0gSFNMVG9IZXgoaCwgcyAqIDIgPiAxMDAgPyAxMDAgOiBzICogMiwgbCk7XG5cdH1cblxuXHRjb25zdCBjb2xvcnMgPSBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBiYXNlTmV1dHJhbCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IGlzRGFyayA/IDAuMiA6IDAuOSxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDYsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IGlzRGFyayA/IDAuNCA6IDAuODEsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDAsXG5cdFx0c3RhcnRJbmRleDogMSxcblx0XHRob29rOiAnbm93LWNvbG9yX3N1cmZhY2UtLWRpdmlkZXInLFxuXHRcdGluY2x1ZGVFbmRzOiBmYWxzZSxcblx0XHRpc0RhcmssXG5cdFx0cmVtb3ZlRW5kOiB0cnVlLFxuXHR9KTtcblxuXHRyZXR1cm4gY29sb3JzO1xufTtcblxuY29uc3QgZ2V0U3VyZmFjZUJyYW5kID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgY29sb3JzID0gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogaXNEYXJrID8gMC4xNSA6IDAuOSxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDUsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNSxcblx0XHRkYXJrVmFyaWF0aW9uczogMCxcblx0XHRzdGFydEluZGV4OiAxLFxuXHRcdGhvb2s6ICdub3ctY29sb3Jfc3VyZmFjZS0tYnJhbmQnLFxuXHRcdGluY2x1ZGVFbmRzOiBmYWxzZSxcblx0XHRpc0RhcmssXG5cdH0pO1xuXG5cdHJldHVybiBjb2xvcnM7XG59O1xuXG5jb25zdCBnZXRDaHJvbWVCcmFuZCA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC44NSxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDUsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNSxcblx0XHRkYXJrVmFyaWF0aW9uczogNSxcblx0XHRob29rOiAnbm93LWNvbG9yX2Nocm9tZS0tYnJhbmQnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldENocm9tZURpdmlkZXIgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNixcblx0XHRsaWdodFZhcmlhdGlvbnM6IDUsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuOCxcblx0XHRkYXJrVmFyaWF0aW9uczogNSxcblx0XHRob29rOiAnbm93LWNvbG9yX2Nocm9tZS0tZGl2aWRlcicsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0R3JvdXBlZCA9IChoZXgsIG5hbWUpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblx0bmFtZSA9IG5hbWUucmVwbGFjZSgvKFthLXpdKD89W0EtWl0pKS9nLCAnJDEgJykuc3BsaXQoJyAnKTtcblx0bmFtZS5zaGlmdCgpO1xuXHRuYW1lID0gbmFtZS5tYXAoKGUpID0+IGUudG9Mb3dlckNhc2UoKSkuam9pbignLScpO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NSxcblx0XHRkYXJrVmFyaWF0aW9uczogMyxcblx0XHRkYXJrUGVyY2VudGFnZTogMC42NSxcblx0XHRob29rOiBgbm93LWNvbG9yX2dyb3VwZWQtLSR7bmFtZX1gLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QmFja2dyb3VuZFByaW1hcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMThdLmhleCA6IG5ldXRyYWxzWzBdLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX2JhY2tncm91bmQtLXByaW1hcnknKV07XG59O1xuXG5jb25zdCBnZXRCYWNrZ3JvdW5kU2Vjb25kYXJ5ID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRjb25zdCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzE2XS5oZXggOiBuZXV0cmFsc1sxXS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl9iYWNrZ3JvdW5kLS1zZWNvbmRhcnknKV07XG59O1xuXG5jb25zdCBnZXRCYWNrZ3JvdW5kVGVydGlhcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMTRdLmhleCA6IG5ldXRyYWxzWzJdLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX2JhY2tncm91bmQtLXRlcnRpYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0RGl2aWRlclByaW1hcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbOF0uaGV4IDogbmV1dHJhbHNbNF0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfZGl2aWRlci0tcHJpbWFyeScpXTtcbn07XG5cbmNvbnN0IGdldERpdmlkZXJTZWNvbmRhcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMTBdLmhleCA6IG5ldXRyYWxzWzNdLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX2RpdmlkZXItLXNlY29uZGFyeScpXTtcbn07XG5cbmNvbnN0IGdldERpdmlkZXJUZXJ0aWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxMl0uaGV4IDogbmV1dHJhbHNbMl0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfZGl2aWRlci0tdGVydGlhcnknKV07XG59O1xuXG5jb25zdCBnZXRUZXh0UHJpbWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1swXS5oZXggOiBuZXV0cmFsc1sxOF0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfdGV4dC0tcHJpbWFyeScpXTtcbn07XG5cbmNvbnN0IGdldFRleHRTZWNvbmRhcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbNF0uaGV4IDogbmV1dHJhbHNbMTJdLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX3RleHQtLXNlY29uZGFyeScpXTtcbn07XG5cbmNvbnN0IGdldFRleHRUZXJ0aWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1s2XS5oZXggOiBuZXV0cmFsc1s5XS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl90ZXh0LS10ZXJ0aWFyeScpXTtcbn07XG5cbmNvbnN0IGdldEJvcmRlclByaW1hcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMV0uaGV4IDogbmV1dHJhbHNbN10uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfYm9yZGVyLS1wcmltYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0Qm9yZGVyU2Vjb25kYXJ5ID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRjb25zdCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzJdLmhleCA6IG5ldXRyYWxzWzVdLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX2JvcmRlci0tc2Vjb25kYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0Qm9yZGVyVGVydGlhcnkgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXG5cdHJldHVybiBbbmV3IENvbG9yKG5ldXRyYWxzWzNdLmhleCwgJy0tbm93LWNvbG9yX2JvcmRlci0tdGVydGlhcnknKV07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0QmFzZUNvbG9ycyA9ICh0aGVtZSkgPT4ge1xuXHRyZXR1cm4ge1xuXHRcdG5ldXRyYWxzOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0cHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1wcmltYXJ5LTEnXSksXG5cdFx0c2Vjb25kYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLXNlY29uZGFyeS0xJ10pLFxuXHRcdHNlbGVjdGlvblByaW1hcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9zZWxlY3Rpb24tLXByaW1hcnktMiddKSxcblx0XHRzZWxlY3Rpb25TZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9zZWxlY3Rpb24tLXNlY29uZGFyeS0yJ10pLFxuXHRcdGludGVyYWN0aXZlOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLWludGVyYWN0aXZlLTInXSksXG5cdFx0Y2hyb21lQnJhbmQ6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9jaHJvbWUtLWJyYW5kLTUnXSksXG5cdFx0Y2hyb21lRGl2aWRlcjogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2Nocm9tZS0tZGl2aWRlci01J10pLFxuXHRcdGJyYW5kTmV1dHJhbDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2JyYW5kLS1uZXV0cmFsJ10pLFxuXHRcdGJyYW5kUHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2JyYW5kLS1wcmltYXJ5J10pLFxuXHRcdGJyYW5kU2Vjb25kYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYnJhbmQtLXNlY29uZGFyeSddKSxcblx0XHRzdXJmYWNlTmV1dHJhbDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdHN1cmZhY2VEaXZpZGVyOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0c3VyZmFjZUJyYW5kOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3Jfc3VyZmFjZS0tYnJhbmQtNiddKSxcblx0XHRjaHJvbWVCcmFuZDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2Nocm9tZS0tYnJhbmQtNSddKSxcblx0XHRjaHJvbWVEaXZpZGVyOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfY2hyb21lLS1kaXZpZGVyLTUnXSksXG5cdFx0YmFja2dyb3VuZFByaW1hcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRiYWNrZ3JvdW5kU2Vjb25kYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0YmFja2dyb3VuZFRlcnRpYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0ZGl2aWRlclByaW1hcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRkaXZpZGVyU2Vjb25kYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0ZGl2aWRlclRlcnRpYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0dGV4dFByaW1hcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHR0ZXh0U2Vjb25kYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0dGV4dFRlcnRpYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0Ym9yZGVyUHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdGJvcmRlclNlY29uZGFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdGJvcmRlclRlcnRpYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0YWxlcnRDcml0aWNhbDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2FsZXJ0LS1jcml0aWNhbC0yJ10pLFxuXHRcdGFsZXJ0SGlnaDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2FsZXJ0LS1oaWdoLTInXSksXG5cdFx0YWxlcnRXYXJuaW5nOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYWxlcnQtLXdhcm5pbmctMiddKSxcblx0XHRhbGVydE1vZGVyYXRlOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYWxlcnQtLW1vZGVyYXRlLTInXSksXG5cdFx0YWxlcnRJbmZvOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYWxlcnQtLWluZm8tMiddKSxcblx0XHRhbGVydFBvc2l0aXZlOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYWxlcnQtLXBvc2l0aXZlLTInXSksXG5cdFx0YWxlcnRMb3c6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0tbG93LTInXSksXG5cdFx0Z3JvdXBlZEJsdWU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1ibHVlLTInXSksXG5cdFx0Z3JvdXBlZEJyb3duOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tYnJvd24tMiddKSxcblx0XHRncm91cGVkR3JheTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLWdyYXktMiddKSxcblx0XHRncm91cGVkR3JlZW46IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1ncmVlbi0yJ10pLFxuXHRcdGdyb3VwZWRHcmVlblllbGxvdzogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLWdyZWVuLXllbGxvdy0yJ10pLFxuXHRcdGdyb3VwZWRNYWdlbnRhOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tbWFnZW50YS0yJ10pLFxuXHRcdGdyb3VwZWRPcmFuZ2U6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1vcmFuZ2UtMiddKSxcblx0XHRncm91cGVkUGluazogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLXBpbmstMiddKSxcblx0XHRncm91cGVkUHVycGxlOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tcHVycGxlLTInXSksXG5cdFx0Z3JvdXBlZFRlYWw6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS10ZWFsLTInXSksXG5cdFx0Z3JvdXBlZFllbGxvdzogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLXllbGxvdy0yJ10pLFxuXHRcdGxpbms6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbGluay0yJ10pLFxuXHRcdGZvY3VzOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLWZvY3VzLTInXSksXG5cdH07XG59O1xuXG5jb25zdCBsdW1pbmFuY2UgPSAocmdiKSA9PiB7XG5cdHZhciBhID0gcmdiLnNwbGl0KCcsJykubWFwKGZ1bmN0aW9uICh2KSB7XG5cdFx0diAvPSAyNTU7XG5cdFx0cmV0dXJuIHYgPD0gMC4wMzkyOCA/IHYgLyAxMi45MiA6IE1hdGgucG93KCh2ICsgMC4wNTUpIC8gMS4wNTUsIDIuNCk7XG5cdH0pO1xuXHRyZXR1cm4gYVswXSAqIDAuMjEyNiArIGFbMV0gKiAwLjcxNTIgKyBhWzJdICogMC4wNzIyO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldENvbnRyYXN0UmF0aW8gPSAoY29sb3IxLCBjb2xvcjIpID0+IHtcblx0aWYgKCFjb2xvcjEgfHwgIWNvbG9yMikgcmV0dXJuIHtub3JtYWw6IHt9LCBsYXJnZToge30sIHJhdGlvOiBudWxsfTtcblxuXHRpZiAoaXNIZXgoY29sb3IxKSkge1xuXHRcdGNvbG9yMSA9IGhleFRvUmdiKGNvbG9yMSk7XG5cdH1cblxuXHRpZiAoaXNIZXgoY29sb3IyKSkge1xuXHRcdGNvbG9yMiA9IGhleFRvUmdiKGNvbG9yMik7XG5cdH1cblxuXHRjb25zdCBjb2xvcjFsdW1pbmFuY2UgPSBsdW1pbmFuY2UoY29sb3IxKTtcblx0Y29uc3QgY29sb3IybHVtaW5hbmNlID0gbHVtaW5hbmNlKGNvbG9yMik7XG5cblx0Y29uc3QgcmF0aW8gPVxuXHRcdGNvbG9yMWx1bWluYW5jZSA+IGNvbG9yMmx1bWluYW5jZVxuXHRcdFx0PyAoY29sb3IybHVtaW5hbmNlICsgMC4wNSkgLyAoY29sb3IxbHVtaW5hbmNlICsgMC4wNSlcblx0XHRcdDogKGNvbG9yMWx1bWluYW5jZSArIDAuMDUpIC8gKGNvbG9yMmx1bWluYW5jZSArIDAuMDUpO1xuXG5cdGNvbnN0IG91dCA9IHtcblx0XHRub3JtYWw6IHtcblx0XHRcdGFhOiByYXRpbyA8IDEgLyA0LjUgPyAnUGFzcycgOiAnRmFpbCcsXG5cdFx0XHRhYWE6IHJhdGlvIDwgMSAvIDcgPyAnUGFzcycgOiAnRmFpbCcsXG5cdFx0fSxcblx0XHRsYXJnZToge1xuXHRcdFx0YWE6IHJhdGlvIDwgMSAvIDMgPyAnUGFzcycgOiAnRmFpbCcsXG5cdFx0XHRhYWE6IHJhdGlvIDwgMSAvIDQuNSA/ICdQYXNzJyA6ICdGYWlsJyxcblx0XHR9LFxuXHRcdG5vblRleHQ6IHtcblx0XHRcdGFhOiByYXRpbyA8IDEgLyAzID8gJ1Bhc3MnIDogJ0ZhaWwnLFxuXHRcdH0sXG5cdFx0cmF0aW86IE1hdGguZmxvb3IoKDEgLyByYXRpbykgKiAxMCkgLyAxMCxcblx0fTtcblxuXHRyZXR1cm4gb3V0O1xufTtcblxuZXhwb3J0IGNvbnN0IGdldENvbXBsaW1lbnRhcnlDb2xvcnMgPSAoYmFzZUNvbG9yLCB2YXJpYXRpb25zKSA9PiB7XG5cdGlmICghYmFzZUNvbG9yIHx8ICF2YXJpYXRpb25zKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cblx0Y29uc3Qge2gsIHMsIGx9ID0gaGV4VG9IU0woYmFzZUNvbG9yKTtcblx0Y29uc3QgcmFuZ2UgPSBNYXRoLnJvdW5kKDM2MCAvIHZhcmlhdGlvbnMpO1xuXHRjb25zdCBvdXQgPSBbbmV3IENvbG9yKGJhc2VDb2xvcildO1xuXG5cdGZvciAobGV0IGkgPSAxOyBpIDwgdmFyaWF0aW9uczsgaSsrKSB7XG5cdFx0bGV0IG5ld0ggPSBoIC0gcmFuZ2UgKiBpO1xuXHRcdGlmIChuZXdIIDwgMCkge1xuXHRcdFx0bmV3SCA9IDM2MCAtIE1hdGguYWJzKG5ld0gpO1xuXHRcdH1cblxuXHRcdG91dC5wdXNoKG5ldyBDb2xvcihIU0xUb0hleChuZXdILCBzLCBsKSkpO1xuXHR9XG5cblx0cmV0dXJuIG91dDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/color-generator/generateColorsP.js\n");

/***/ })

})