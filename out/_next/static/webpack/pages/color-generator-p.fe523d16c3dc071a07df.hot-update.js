webpackHotUpdate_N_E("pages/color-generator-p",{

/***/ "./lib/color-generator/generateColorsP.js":
/*!************************************************!*\
  !*** ./lib/color-generator/generateColorsP.js ***!
  \************************************************/
/*! exports provided: generateColors, generateColorRange, getColors, isHex, hexToHSL, HSLToHex, getNeutralBaseColorsFromBrandPrimaryHex, getNeutrals, getBaseColors, getContrastRatio, getComplimentaryColors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColors\", function() { return generateColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColorRange\", function() { return generateColorRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColors\", function() { return getColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHex\", function() { return isHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToHSL\", function() { return hexToHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HSLToHex\", function() { return HSLToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutralBaseColorsFromBrandPrimaryHex\", function() { return getNeutralBaseColorsFromBrandPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutrals\", function() { return getNeutrals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBaseColors\", function() { return getBaseColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContrastRatio\", function() { return getContrastRatio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getComplimentaryColors\", function() { return getComplimentaryColors; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n\n\n\n\nvar Color = function Color(color, name) {\n  Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Color);\n\n  this.hex = color;\n  this.rgb = hexToRgb(color);\n  this.name = name;\n};\n\nvar hex = function hex(color) {\n  var colorString = color.toString(16);\n  return colorString.length === 1 ? \"0\".concat(colorString) : colorString;\n};\n\nvar calculateColor = function calculateColor(color1, color2, ratio) {\n  ratio = (Math.round(ratio * 100) / 100).toFixed(2);\n  var r = Math.round(parseInt(color2.substring(0, 2), 16) * ratio + parseInt(color1.substring(0, 2), 16) * (1 - ratio));\n  var g = Math.round(parseInt(color2.substring(2, 4), 16) * ratio + parseInt(color1.substring(2, 4), 16) * (1 - ratio));\n  var b = Math.round(parseInt(color2.substring(4, 6), 16) * ratio + parseInt(color1.substring(4, 6), 16) * (1 - ratio));\n  return hex(r) + hex(g) + hex(b);\n};\n\nvar hexToRgb = function hexToRgb(hex) {\n  var r = parseInt(hex.substring(1, 3), 16);\n  var g = parseInt(hex.substring(3, 5), 16);\n  var b = parseInt(hex.substring(5, 7), 16);\n  return \"\".concat(r, \",\").concat(g, \",\").concat(b);\n};\n\nvar rgbToHex = function rgbToHex(rgb) {\n  if (!rgb) return '';\n  var newRGB = rgb.split(',');\n  var r = parseInt(newRGB[0]).toString(16);\n  var g = parseInt(newRGB[1]).toString(16);\n  var b = parseInt(newRGB[2]).toString(16);\n  if (r.length === 1) r = '0' + r;\n  if (g.length === 1) g = '0' + g;\n  if (b.length === 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n\nvar generateColors = function generateColors(color1, color2, variations) {\n  if (!variations) {\n    return [];\n  }\n\n  color1 = color1.startsWith('#') ? color1 : \"#\".concat(color1);\n  color2 = color2.startsWith('#') ? color2 : \"#\".concat(color2);\n  var percentage = 1 / variations;\n  var colors = [];\n\n  for (var i = 1; i <= variations - 1; i++) {\n    colors = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(colors), ['#' + calculateColor(color1.slice(1), color2.slice(1), i * percentage)]);\n  }\n\n  return colors;\n};\nvar generateColorRange = function generateColorRange(_ref) {\n  var color = _ref.color,\n      lightVariations = _ref.lightVariations,\n      lightPercentage = _ref.lightPercentage,\n      lightSaturation = _ref.lightSaturation,\n      darkVariations = _ref.darkVariations,\n      darkPercentage = _ref.darkPercentage,\n      darkSaturation = _ref.darkSaturation,\n      _ref$hook = _ref.hook,\n      hook = _ref$hook === void 0 ? 'hook' : _ref$hook,\n      startIndex = _ref.startIndex,\n      includeEnds = _ref.includeEnds,\n      isDark = _ref.isDark,\n      removeEnd = _ref.removeEnd,\n      saturationMultiply = _ref.saturationMultiply;\n  if (!color) return [];\n  var firstColor = calculateColor('ffffff', color.slice(1), 1 - lightPercentage);\n  var lastColor = calculateColor(color.slice(1), '000000', darkPercentage);\n\n  if (saturationMultiply) {\n    console.log(firstColor);\n    var firstHSL = hexToHSL('#' + firstColor);\n    firstHSL.s = firstHSL.s * saturationMultiply > 100 ? 100 : firstHSL.s * saturationMultiply;\n    console.log(firstHSL);\n    firstHSL.h = 240;\n    firstColor = HSLToHex(firstHSL.h, firstHSL.s, firstHSL.l).substring(1);\n    var lastHSL = hexToHSL('#' + lastColor);\n    lastHSL.s = lastHSL.s * saturationMultiply > 100 ? 100 : lastHSL.s * saturationMultiply;\n    lastColor = HSLToHex(lastHSL.h, lastHSL.s, lastHSL.l).substring(1);\n  }\n\n  var lightColors = generateColors(firstColor, color, lightVariations);\n  var darkColors = generateColors(color, lastColor, darkVariations);\n  var out = [];\n\n  if (lightVariations) {\n    out = [\"#\".concat(firstColor)].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lightColors), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out));\n  }\n\n  out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [color]);\n\n  if (darkVariations) {\n    out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(darkColors), [\"#\".concat(lastColor)]);\n  }\n\n  if (includeEnds) {\n    out = [\"#ffffff\"].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(out), [\"#000000\"]);\n  }\n\n  if (removeEnd) {\n    out.pop();\n  }\n\n  if (isDark) {\n    out.reverse();\n  }\n\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\nvar getColors = function getColors(selectedColors) {\n  var isDark = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var generated = {};\n\n  for (var i in selectedColors) {\n    switch (i) {\n      case 'neutrals':\n        generated[i] = getNeutrals(selectedColors[i]);\n        generated['surfaceNeutral'] = getSurfaceNeutral(selectedColors[i], isDark);\n        generated['surfaceDivider'] = getSurfaceDivider(selectedColors[i], isDark);\n        generated['backgroundPrimary'] = getBackgroundPrimary(selectedColors[i], isDark);\n        generated['backgroundSecondary'] = getBackgroundSecondary(selectedColors[i], isDark);\n        generated['backgroundTertiary'] = getBackgroundTertiary(selectedColors[i], isDark);\n        generated['dividerPrimary'] = getDividerPrimary(selectedColors[i], isDark);\n        generated['dividerSecondary'] = getDividerSecondary(selectedColors[i], isDark);\n        generated['dividerTertiary'] = getDividerTertiary(selectedColors[i], isDark);\n        generated['textPrimary'] = getTextPrimary(selectedColors[i], isDark);\n        generated['textSecondary'] = getTextSecondary(selectedColors[i], isDark);\n        generated['textTertiary'] = getTextTertiary(selectedColors[i], isDark);\n        generated['borderPrimary'] = getBorderPrimary(selectedColors[i], isDark);\n        generated['borderSecondary'] = getBorderSecondary(selectedColors[i], isDark);\n        generated['borderTertiary'] = getBorderTertiary(selectedColors[i]);\n        break;\n\n      case 'primary':\n        generated[i] = getPrimary(selectedColors[i]);\n        break;\n\n      case 'secondary':\n        generated[i] = getSecondary(selectedColors[i]);\n        break;\n\n      case 'selectionPrimary':\n        generated[i] = getSelectionPrimary(selectedColors[i]);\n        break;\n\n      case 'selectionSecondary':\n        generated[i] = getSelectionSecondary(selectedColors[i]);\n        break;\n\n      case 'interactive':\n        generated[i] = getInteractive(selectedColors[i]);\n        break;\n\n      case 'link':\n        generated[i] = getLink(selectedColors[i]);\n        break;\n\n      case 'focus':\n        generated[i] = getFocus(selectedColors[i]);\n        break;\n\n      case 'alertCritical':\n        generated[i] = getAlertCritical(selectedColors[i]);\n        break;\n\n      case 'alertHigh':\n        generated[i] = getAlertHigh(selectedColors[i]);\n        break;\n\n      case 'alertWarning':\n        generated[i] = getAlertWarning(selectedColors[i]);\n        break;\n\n      case 'alertModerate':\n        generated[i] = getAlertModerate(selectedColors[i]);\n        break;\n\n      case 'alertInfo':\n        generated[i] = getAlertInfo(selectedColors[i]);\n        break;\n\n      case 'alertPositive':\n        generated[i] = getAlertPositive(selectedColors[i]);\n        break;\n\n      case 'alertLow':\n        generated[i] = getAlertLow(selectedColors[i]);\n        break;\n\n      case 'brandNeutral':\n      case 'brandPrimary':\n      case 'brandSecondary':\n        generated[i] = getBrand(selectedColors[i], i);\n        break;\n\n      case 'surfaceBrand':\n        generated[i] = getSurfaceBrand(selectedColors[i], isDark);\n        break;\n\n      case 'chromeBrand':\n        generated[i] = getChromeBrand(selectedColors[i]);\n        break;\n\n      case 'chromeDivider':\n        generated[i] = getChromeDivider(selectedColors[i]);\n        break;\n\n      case 'groupedBlue':\n      case 'groupedBrown':\n      case 'groupedGray':\n      case 'groupedGreen':\n      case 'groupedGreenYellow':\n      case 'groupedMagenta':\n      case 'groupedOrange':\n      case 'groupedPink':\n      case 'groupedPurple':\n      case 'groupedTeal':\n      case 'groupedYellow':\n        generated[i] = getGrouped(selectedColors[i], i);\n        break;\n\n      default:\n    }\n  }\n\n  return generated;\n};\nvar isHex = function isHex(hex) {\n  return /^#[0-9A-F]{6}$/i.test(hex);\n};\nvar hexToHSL = function hexToHSL(H) {\n  // Convert hex to RGB first\n  var r = 0,\n      g = 0,\n      b = 0;\n\n  if (H.length == 4) {\n    r = '0x' + H[1] + H[1];\n    g = '0x' + H[2] + H[2];\n    b = '0x' + H[3] + H[3];\n  } else if (H.length == 7) {\n    r = '0x' + H[1] + H[2];\n    g = '0x' + H[3] + H[4];\n    b = '0x' + H[5] + H[6];\n  } // Then to HSL\n\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta == 0) h = 0;else if (cmax == r) h = (g - b) / delta % 6;else if (cmax == g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1); // return \"hsl(\" + Math.round(h) + \",\" + Math.round(s) + \",\" + Math.round(l) + \")\";\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n};\nvar HSLToHex = function HSLToHex(h, s, l) {\n  s /= 100;\n  l /= 100;\n  var c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n      m = l - c / 2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  } // Having obtained RGB, convert channels to hex\n\n\n  r = Math.round((r + m) * 255).toString(16);\n  g = Math.round((g + m) * 255).toString(16);\n  b = Math.round((b + m) * 255).toString(16); // Prepend 0s, if necessary\n\n  if (r.length == 1) r = '0' + r;\n  if (g.length == 1) g = '0' + g;\n  if (b.length == 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n_c = HSLToHex;\nvar getNeutralBaseColorsFromBrandPrimaryHex = function getNeutralBaseColorsFromBrandPrimaryHex(hex) {\n  var _hexToHSL = hexToHSL(hex),\n      h = _hexToHSL.h,\n      s = _hexToHSL.s,\n      l = _hexToHSL.l;\n\n  s = s - 25 < 0 ? 0 : s - 25;\n  l = l - 18 < 0 ? 0 : l - 18;\n  return HSLToHex(h, s, l);\n};\nvar getNeutrals = function getNeutrals(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightVariations: 10,\n    lightPercentage: 0.95,\n    darkVariations: 9,\n    darkPercentage: 0.9,\n    hook: 'now-color--neutral',\n    startIndex: 0,\n    includeEnds: true,\n    saturationMultiply: 2\n  });\n};\n\nvar getPrimary = function getPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 1,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color--primary'\n  });\n};\n\nvar getSecondary = function getSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 1,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color--secondary'\n  });\n};\n\nvar getSelectionPrimary = function getSelectionPrimary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 2,\n    darkPercentage: 0.5,\n    darkVariations: 2,\n    hook: 'now-color_selection--primary'\n  });\n};\n\nvar getSelectionSecondary = function getSelectionSecondary(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.65,\n    darkVariations: 2,\n    hook: 'now-color_selection--secondary'\n  });\n};\n\nvar getInteractive = function getInteractive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.7,\n    darkVariations: 2,\n    hook: 'now-color--interactive'\n  });\n};\n\nvar getLink = function getLink(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.32,\n    lightVariations: 1,\n    darkPercentage: 0.63,\n    darkVariations: 2,\n    startIndex: 1,\n    hook: 'now-color--link'\n  });\n};\n\nvar getFocus = function getFocus(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.3,\n    lightVariations: 1,\n    darkPercentage: 0.63,\n    darkVariations: 1,\n    startIndex: 1,\n    hook: 'now-color--focus'\n  });\n};\n\nvar getAlertCritical = function getAlertCritical(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.6,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--critical'\n  });\n};\n\nvar getAlertHigh = function getAlertHigh(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--high'\n  });\n};\n\nvar getAlertWarning = function getAlertWarning(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.75,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--warning'\n  });\n};\n\nvar getAlertModerate = function getAlertModerate(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--moderate'\n  });\n};\n\nvar getAlertInfo = function getAlertInfo(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.72,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--info'\n  });\n};\n\nvar getAlertPositive = function getAlertPositive(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.79,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--positive'\n  });\n};\n\nvar getAlertLow = function getAlertLow(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.74,\n    lightVariations: 2,\n    darkPercentage: 0.79,\n    darkVariations: 3,\n    startIndex: 0,\n    hook: 'now-color_alert--low'\n  });\n};\n\nvar getBrand = function getBrand(hex, name) {\n  if (!hex) return [];\n  name = '--now-color_brand--' + name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ')[1].toLowerCase();\n  return [new Color(hex, name)];\n};\n\nvar getSurfaceNeutral = function getSurfaceNeutral(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[4].hex;\n\n  if (isDark) {\n    var _hexToHSL2 = hexToHSL(baseNeutral),\n        h = _hexToHSL2.h,\n        s = _hexToHSL2.s,\n        l = _hexToHSL2.l;\n\n    baseNeutral = HSLToHex(h, s * 2 > 100 ? 100 : s * 2, l);\n  }\n\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: isDark ? 0.2 : 0.95,\n    lightVariations: 6,\n    darkPercentage: isDark ? 0.4 : 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--neutral',\n    includeEnds: false,\n    isDark: isDark,\n    removeEnd: true\n  });\n  return colors;\n};\n\nvar getSurfaceDivider = function getSurfaceDivider(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[8].hex;\n\n  if (isDark) {\n    var _hexToHSL3 = hexToHSL(baseNeutral),\n        h = _hexToHSL3.h,\n        s = _hexToHSL3.s,\n        l = _hexToHSL3.l;\n\n    baseNeutral = HSLToHex(h, s * 2 > 100 ? 100 : s * 2, l);\n  }\n\n  var colors = generateColorRange({\n    color: baseNeutral,\n    lightPercentage: isDark ? 0.2 : 0.9,\n    lightVariations: 6,\n    darkPercentage: isDark ? 0.4 : 0.81,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--divider',\n    includeEnds: false,\n    isDark: isDark,\n    removeEnd: true\n  });\n  return colors;\n};\n\nvar getSurfaceBrand = function getSurfaceBrand(hex, isDark) {\n  if (!hex) return [];\n  var colors = generateColorRange({\n    color: hex,\n    lightPercentage: isDark ? 0.15 : 0.9,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 0,\n    startIndex: 1,\n    hook: 'now-color_surface--brand',\n    includeEnds: false,\n    isDark: isDark\n  });\n  return colors;\n};\n\nvar getChromeBrand = function getChromeBrand(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.85,\n    lightVariations: 5,\n    darkPercentage: 0.5,\n    darkVariations: 5,\n    hook: 'now-color_chrome--brand'\n  });\n};\n\nvar getChromeDivider = function getChromeDivider(hex) {\n  if (!hex) return [];\n  return generateColorRange({\n    color: hex,\n    lightPercentage: 0.6,\n    lightVariations: 5,\n    darkPercentage: 0.8,\n    darkVariations: 5,\n    hook: 'now-color_chrome--divider'\n  });\n};\n\nvar getGrouped = function getGrouped(hex, name) {\n  if (!hex) return [];\n  name = name.replace(/([a-z](?=[A-Z]))/g, '$1 ').split(' ');\n  name.shift();\n  name = name.map(function (e) {\n    return e.toLowerCase();\n  }).join('-');\n  return generateColorRange({\n    color: hex,\n    lightVariations: 2,\n    lightPercentage: 0.75,\n    darkVariations: 3,\n    darkPercentage: 0.65,\n    hook: \"now-color_grouped--\".concat(name),\n    startIndex: 0\n  });\n};\n\nvar getBackgroundPrimary = function getBackgroundPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[18].hex : neutrals[0].hex;\n  return [new Color(baseNeutral, '--now-color_background--primary')];\n};\n\nvar getBackgroundSecondary = function getBackgroundSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[16].hex : neutrals[1].hex;\n  return [new Color(baseNeutral, '--now-color_background--secondary')];\n};\n\nvar getBackgroundTertiary = function getBackgroundTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[14].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_background--tertiary')];\n};\n\nvar getDividerPrimary = function getDividerPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[8].hex : neutrals[4].hex;\n  return [new Color(baseNeutral, '--now-color_divider--primary')];\n};\n\nvar getDividerSecondary = function getDividerSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[10].hex : neutrals[3].hex;\n  return [new Color(baseNeutral, '--now-color_divider--secondary')];\n};\n\nvar getDividerTertiary = function getDividerTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[12].hex : neutrals[2].hex;\n  return [new Color(baseNeutral, '--now-color_divider--tertiary')];\n};\n\nvar getTextPrimary = function getTextPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[0].hex : neutrals[18].hex;\n  return [new Color(baseNeutral, '--now-color_text--primary')];\n};\n\nvar getTextSecondary = function getTextSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[4].hex : neutrals[12].hex;\n  return [new Color(baseNeutral, '--now-color_text--secondary')];\n};\n\nvar getTextTertiary = function getTextTertiary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[6].hex : neutrals[9].hex;\n  return [new Color(baseNeutral, '--now-color_text--tertiary')];\n};\n\nvar getBorderPrimary = function getBorderPrimary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[1].hex : neutrals[7].hex;\n  return [new Color(baseNeutral, '--now-color_border--primary')];\n};\n\nvar getBorderSecondary = function getBorderSecondary(hex, isDark) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  var baseNeutral = isDark ? neutrals[2].hex : neutrals[5].hex;\n  return [new Color(baseNeutral, '--now-color_border--secondary')];\n};\n\nvar getBorderTertiary = function getBorderTertiary(hex) {\n  if (!hex) return [];\n  var neutrals = getNeutrals(hex);\n  return [new Color(neutrals[3].hex, '--now-color_border--tertiary')];\n};\n\nvar getBaseColors = function getBaseColors(theme) {\n  var _ref2;\n\n  return _ref2 = {\n    neutrals: rgbToHex(theme['--now-color--neutral-11']),\n    primary: rgbToHex(theme['--now-color--primary-1']),\n    secondary: rgbToHex(theme['--now-color--secondary-1']),\n    selectionPrimary: rgbToHex(theme['--now-color_selection--primary-2']),\n    selectionSecondary: rgbToHex(theme['--now-color_selection--secondary-2']),\n    interactive: rgbToHex(theme['--now-color--interactive-2']),\n    chromeBrand: rgbToHex(theme['--now-color_chrome--brand-5']),\n    chromeDivider: rgbToHex(theme['--now-color_chrome--divider-5']),\n    brandNeutral: rgbToHex(theme['--now-color_brand--neutral']),\n    brandPrimary: rgbToHex(theme['--now-color_brand--primary']),\n    brandSecondary: rgbToHex(theme['--now-color_brand--secondary']),\n    surfaceNeutral: rgbToHex(theme['--now-color--neutral-11']),\n    surfaceDivider: rgbToHex(theme['--now-color--neutral-11']),\n    surfaceBrand: rgbToHex(theme['--now-color_surface--brand-6'])\n  }, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"chromeBrand\", rgbToHex(theme['--now-color_chrome--brand-5'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"chromeDivider\", rgbToHex(theme['--now-color_chrome--divider-5'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"backgroundPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"backgroundSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"backgroundTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"dividerPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"dividerSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"dividerTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"textPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"textSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"textTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"borderPrimary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"borderSecondary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"borderTertiary\", rgbToHex(theme['--now-color--neutral-11'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertCritical\", rgbToHex(theme['--now-color_alert--critical-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertHigh\", rgbToHex(theme['--now-color_alert--high-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertWarning\", rgbToHex(theme['--now-color_alert--warning-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertModerate\", rgbToHex(theme['--now-color_alert--moderate-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertInfo\", rgbToHex(theme['--now-color_alert--info-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertPositive\", rgbToHex(theme['--now-color_alert--positive-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"alertLow\", rgbToHex(theme['--now-color_alert--low-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedBlue\", rgbToHex(theme['--now-color_grouped--blue-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedBrown\", rgbToHex(theme['--now-color_grouped--brown-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedGray\", rgbToHex(theme['--now-color_grouped--gray-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedGreen\", rgbToHex(theme['--now-color_grouped--green-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedGreenYellow\", rgbToHex(theme['--now-color_grouped--green-yellow-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedMagenta\", rgbToHex(theme['--now-color_grouped--magenta-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedOrange\", rgbToHex(theme['--now-color_grouped--orange-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedPink\", rgbToHex(theme['--now-color_grouped--pink-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedPurple\", rgbToHex(theme['--now-color_grouped--purple-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedTeal\", rgbToHex(theme['--now-color_grouped--teal-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"groupedYellow\", rgbToHex(theme['--now-color_grouped--yellow-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"link\", rgbToHex(theme['--now-color--link-2'])), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, \"focus\", rgbToHex(theme['--now-color--focus-2'])), _ref2;\n};\n\nvar luminance = function luminance(rgb) {\n  var a = rgb.split(',').map(function (v) {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n};\n\nvar getContrastRatio = function getContrastRatio(color1, color2) {\n  if (!color1 || !color2) return {\n    normal: {},\n    large: {},\n    ratio: null\n  };\n\n  if (isHex(color1)) {\n    color1 = hexToRgb(color1);\n  }\n\n  if (isHex(color2)) {\n    color2 = hexToRgb(color2);\n  }\n\n  var color1luminance = luminance(color1);\n  var color2luminance = luminance(color2);\n  var ratio = color1luminance > color2luminance ? (color2luminance + 0.05) / (color1luminance + 0.05) : (color1luminance + 0.05) / (color2luminance + 0.05);\n  var out = {\n    normal: {\n      aa: ratio < 1 / 4.5 ? 'Pass' : 'Fail',\n      aaa: ratio < 1 / 7 ? 'Pass' : 'Fail'\n    },\n    large: {\n      aa: ratio < 1 / 3 ? 'Pass' : 'Fail',\n      aaa: ratio < 1 / 4.5 ? 'Pass' : 'Fail'\n    },\n    ratio: Math.floor(1 / ratio * 10) / 10\n  };\n  return out;\n};\nvar getComplimentaryColors = function getComplimentaryColors(baseColor, variations) {\n  if (!baseColor || !variations) {\n    return [];\n  }\n\n  var _hexToHSL4 = hexToHSL(baseColor),\n      h = _hexToHSL4.h,\n      s = _hexToHSL4.s,\n      l = _hexToHSL4.l;\n\n  var range = Math.round(360 / variations);\n  var out = [new Color(baseColor)];\n\n  for (var i = 1; i < variations; i++) {\n    var newH = h - range * i;\n\n    if (newH < 0) {\n      newH = 360 - Math.abs(newH);\n    }\n\n    out.push(new Color(HSLToHex(newH, s, l)));\n  }\n\n  return out;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HSLToHex\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2NvbG9yLWdlbmVyYXRvci9nZW5lcmF0ZUNvbG9yc1AuanM/YWQyNCJdLCJuYW1lcyI6WyJDb2xvciIsImNvbG9yIiwibmFtZSIsImhleCIsInJnYiIsImhleFRvUmdiIiwiY29sb3JTdHJpbmciLCJ0b1N0cmluZyIsImxlbmd0aCIsImNhbGN1bGF0ZUNvbG9yIiwiY29sb3IxIiwiY29sb3IyIiwicmF0aW8iLCJNYXRoIiwicm91bmQiLCJ0b0ZpeGVkIiwiciIsInBhcnNlSW50Iiwic3Vic3RyaW5nIiwiZyIsImIiLCJyZ2JUb0hleCIsIm5ld1JHQiIsInNwbGl0IiwiZ2VuZXJhdGVDb2xvcnMiLCJ2YXJpYXRpb25zIiwic3RhcnRzV2l0aCIsInBlcmNlbnRhZ2UiLCJjb2xvcnMiLCJpIiwic2xpY2UiLCJnZW5lcmF0ZUNvbG9yUmFuZ2UiLCJsaWdodFZhcmlhdGlvbnMiLCJsaWdodFBlcmNlbnRhZ2UiLCJsaWdodFNhdHVyYXRpb24iLCJkYXJrVmFyaWF0aW9ucyIsImRhcmtQZXJjZW50YWdlIiwiZGFya1NhdHVyYXRpb24iLCJob29rIiwic3RhcnRJbmRleCIsImluY2x1ZGVFbmRzIiwiaXNEYXJrIiwicmVtb3ZlRW5kIiwic2F0dXJhdGlvbk11bHRpcGx5IiwiZmlyc3RDb2xvciIsImxhc3RDb2xvciIsImNvbnNvbGUiLCJsb2ciLCJmaXJzdEhTTCIsImhleFRvSFNMIiwicyIsImgiLCJIU0xUb0hleCIsImwiLCJsYXN0SFNMIiwibGlnaHRDb2xvcnMiLCJkYXJrQ29sb3JzIiwib3V0IiwicG9wIiwicmV2ZXJzZSIsIm1hcCIsImluZGV4IiwiZ2V0Q29sb3JzIiwic2VsZWN0ZWRDb2xvcnMiLCJnZW5lcmF0ZWQiLCJnZXROZXV0cmFscyIsImdldFN1cmZhY2VOZXV0cmFsIiwiZ2V0U3VyZmFjZURpdmlkZXIiLCJnZXRCYWNrZ3JvdW5kUHJpbWFyeSIsImdldEJhY2tncm91bmRTZWNvbmRhcnkiLCJnZXRCYWNrZ3JvdW5kVGVydGlhcnkiLCJnZXREaXZpZGVyUHJpbWFyeSIsImdldERpdmlkZXJTZWNvbmRhcnkiLCJnZXREaXZpZGVyVGVydGlhcnkiLCJnZXRUZXh0UHJpbWFyeSIsImdldFRleHRTZWNvbmRhcnkiLCJnZXRUZXh0VGVydGlhcnkiLCJnZXRCb3JkZXJQcmltYXJ5IiwiZ2V0Qm9yZGVyU2Vjb25kYXJ5IiwiZ2V0Qm9yZGVyVGVydGlhcnkiLCJnZXRQcmltYXJ5IiwiZ2V0U2Vjb25kYXJ5IiwiZ2V0U2VsZWN0aW9uUHJpbWFyeSIsImdldFNlbGVjdGlvblNlY29uZGFyeSIsImdldEludGVyYWN0aXZlIiwiZ2V0TGluayIsImdldEZvY3VzIiwiZ2V0QWxlcnRDcml0aWNhbCIsImdldEFsZXJ0SGlnaCIsImdldEFsZXJ0V2FybmluZyIsImdldEFsZXJ0TW9kZXJhdGUiLCJnZXRBbGVydEluZm8iLCJnZXRBbGVydFBvc2l0aXZlIiwiZ2V0QWxlcnRMb3ciLCJnZXRCcmFuZCIsImdldFN1cmZhY2VCcmFuZCIsImdldENocm9tZUJyYW5kIiwiZ2V0Q2hyb21lRGl2aWRlciIsImdldEdyb3VwZWQiLCJpc0hleCIsInRlc3QiLCJIIiwiY21pbiIsIm1pbiIsImNtYXgiLCJtYXgiLCJkZWx0YSIsImFicyIsImMiLCJ4IiwibSIsImdldE5ldXRyYWxCYXNlQ29sb3JzRnJvbUJyYW5kUHJpbWFyeUhleCIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsIm5ldXRyYWxzIiwiYmFzZU5ldXRyYWwiLCJzaGlmdCIsImUiLCJqb2luIiwiZ2V0QmFzZUNvbG9ycyIsInRoZW1lIiwicHJpbWFyeSIsInNlY29uZGFyeSIsInNlbGVjdGlvblByaW1hcnkiLCJzZWxlY3Rpb25TZWNvbmRhcnkiLCJpbnRlcmFjdGl2ZSIsImNocm9tZUJyYW5kIiwiY2hyb21lRGl2aWRlciIsImJyYW5kTmV1dHJhbCIsImJyYW5kUHJpbWFyeSIsImJyYW5kU2Vjb25kYXJ5Iiwic3VyZmFjZU5ldXRyYWwiLCJzdXJmYWNlRGl2aWRlciIsInN1cmZhY2VCcmFuZCIsImx1bWluYW5jZSIsImEiLCJ2IiwicG93IiwiZ2V0Q29udHJhc3RSYXRpbyIsIm5vcm1hbCIsImxhcmdlIiwiY29sb3IxbHVtaW5hbmNlIiwiY29sb3IybHVtaW5hbmNlIiwiYWEiLCJhYWEiLCJmbG9vciIsImdldENvbXBsaW1lbnRhcnlDb2xvcnMiLCJiYXNlQ29sb3IiLCJyYW5nZSIsIm5ld0giLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBQU1BLEssR0FDTCxlQUFZQyxLQUFaLEVBQW1CQyxJQUFuQixFQUF5QjtBQUFBOztBQUN4QixPQUFLQyxHQUFMLEdBQVdGLEtBQVg7QUFDQSxPQUFLRyxHQUFMLEdBQVdDLFFBQVEsQ0FBQ0osS0FBRCxDQUFuQjtBQUNBLE9BQUtDLElBQUwsR0FBWUEsSUFBWjtBQUNBLEM7O0FBR0YsSUFBTUMsR0FBRyxHQUFHLFNBQU5BLEdBQU0sQ0FBQ0YsS0FBRCxFQUFXO0FBQ3RCLE1BQU1LLFdBQVcsR0FBR0wsS0FBSyxDQUFDTSxRQUFOLENBQWUsRUFBZixDQUFwQjtBQUNBLFNBQU9ELFdBQVcsQ0FBQ0UsTUFBWixLQUF1QixDQUF2QixjQUErQkYsV0FBL0IsSUFBK0NBLFdBQXREO0FBQ0EsQ0FIRDs7QUFLQSxJQUFNRyxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNDLE1BQUQsRUFBU0MsTUFBVCxFQUFpQkMsS0FBakIsRUFBMkI7QUFDakRBLE9BQUssR0FBRyxDQUFDQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0YsS0FBSyxHQUFHLEdBQW5CLElBQTBCLEdBQTNCLEVBQWdDRyxPQUFoQyxDQUF3QyxDQUF4QyxDQUFSO0FBRUEsTUFBTUMsQ0FBQyxHQUFHSCxJQUFJLENBQUNDLEtBQUwsQ0FDVEcsUUFBUSxDQUFDTixNQUFNLENBQUNPLFNBQVAsQ0FBaUIsQ0FBakIsRUFBb0IsQ0FBcEIsQ0FBRCxFQUF5QixFQUF6QixDQUFSLEdBQXVDTixLQUF2QyxHQUNDSyxRQUFRLENBQUNQLE1BQU0sQ0FBQ1EsU0FBUCxDQUFpQixDQUFq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QUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSixVQUFwQixFQUFnQ0ksQ0FBQyxFQUFqQyxFQUFxQztBQUNwQyxRQUFJd0gsSUFBSSxHQUFHbEcsQ0FBQyxHQUFHaUcsS0FBSyxHQUFHdkgsQ0FBdkI7O0FBQ0EsUUFBSXdILElBQUksR0FBRyxDQUFYLEVBQWM7QUFDYkEsVUFBSSxHQUFHLE1BQU14SSxJQUFJLENBQUM4RixHQUFMLENBQVMwQyxJQUFULENBQWI7QUFDQTs7QUFFRDVGLE9BQUcsQ0FBQzZGLElBQUosQ0FBUyxJQUFJdEosS0FBSixDQUFVb0QsUUFBUSxDQUFDaUcsSUFBRCxFQUFPbkcsQ0FBUCxFQUFVRyxDQUFWLENBQWxCLENBQVQ7QUFDQTs7QUFFRCxTQUFPSSxHQUFQO0FBQ0EsQ0FuQk0iLCJmaWxlIjoiLi9saWIvY29sb3ItZ2VuZXJhdG9yL2dlbmVyYXRlQ29sb3JzUC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENvbG9yIHtcblx0Y29uc3RydWN0b3IoY29sb3IsIG5hbWUpIHtcblx0XHR0aGlzLmhleCA9IGNvbG9yO1xuXHRcdHRoaXMucmdiID0gaGV4VG9SZ2IoY29sb3IpO1xuXHRcdHRoaXMubmFtZSA9IG5hbWU7XG5cdH1cbn1cblxuY29uc3QgaGV4ID0gKGNvbG9yKSA9PiB7XG5cdGNvbnN0IGNvbG9yU3RyaW5nID0gY29sb3IudG9TdHJpbmcoMTYpO1xuXHRyZXR1cm4gY29sb3JTdHJpbmcubGVuZ3RoID09PSAxID8gYDAke2NvbG9yU3RyaW5nfWAgOiBjb2xvclN0cmluZztcbn07XG5cbmNvbnN0IGNhbGN1bGF0ZUNvbG9yID0gKGNvbG9yMSwgY29sb3IyLCByYXRpbykgPT4ge1xuXHRyYXRpbyA9IChNYXRoLnJvdW5kKHJhdGlvICogMTAwKSAvIDEwMCkudG9GaXhlZCgyKTtcblxuXHRjb25zdCByID0gTWF0aC5yb3VuZChcblx0XHRwYXJzZUludChjb2xvcjIuc3Vic3RyaW5nKDAsIDIpLCAxNikgKiByYXRpbyArXG5cdFx0XHRwYXJzZUludChjb2xvcjEuc3Vic3RyaW5nKDAsIDIpLCAxNikgKiAoMSAtIHJhdGlvKVxuXHQpO1xuXHRjb25zdCBnID0gTWF0aC5yb3VuZChcblx0XHRwYXJzZUludChjb2xvcjIuc3Vic3RyaW5nKDIsIDQpLCAxNikgKiByYXRpbyArXG5cdFx0XHRwYXJzZUludChjb2xvcjEuc3Vic3RyaW5nKDIsIDQpLCAxNikgKiAoMSAtIHJhdGlvKVxuXHQpO1xuXHRjb25zdCBiID0gTWF0aC5yb3VuZChcblx0XHRwYXJzZUludChjb2xvcjIuc3Vic3RyaW5nKDQsIDYpLCAxNikgKiByYXRpbyArXG5cdFx0XHRwYXJzZUludChjb2xvcjEuc3Vic3RyaW5nKDQsIDYpLCAxNikgKiAoMSAtIHJhdGlvKVxuXHQpO1xuXG5cblx0cmV0dXJuIGhleChyKSArIGhleChnKSArIGhleChiKTtcbn07XG5cbmNvbnN0IGhleFRvUmdiID0gKGhleCkgPT4ge1xuXHRjb25zdCByID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZygxLCAzKSwgMTYpO1xuXHRjb25zdCBnID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZygzLCA1KSwgMTYpO1xuXHRjb25zdCBiID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZyg1LCA3KSwgMTYpO1xuXG5cdHJldHVybiBgJHtyfSwke2d9LCR7Yn1gO1xufTtcblxuY29uc3QgcmdiVG9IZXggPSAocmdiKSA9PiB7XG5cdGlmICghcmdiKSByZXR1cm4gJyc7XG5cblx0Y29uc3QgbmV3UkdCID0gcmdiLnNwbGl0KCcsJyk7XG5cblx0bGV0IHIgPSBwYXJzZUludChuZXdSR0JbMF0pLnRvU3RyaW5nKDE2KTtcblx0bGV0IGcgPSBwYXJzZUludChuZXdSR0JbMV0pLnRvU3RyaW5nKDE2KTtcblx0bGV0IGIgPSBwYXJzZUludChuZXdSR0JbMl0pLnRvU3RyaW5nKDE2KTtcblxuXHRpZiAoci5sZW5ndGggPT09IDEpIHIgPSAnMCcgKyByO1xuXHRpZiAoZy5sZW5ndGggPT09IDEpIGcgPSAnMCcgKyBnO1xuXHRpZiAoYi5sZW5ndGggPT09IDEpIGIgPSAnMCcgKyBiO1xuXG5cdHJldHVybiAnIycgKyByICsgZyArIGI7XG59O1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVDb2xvcnMgPSAoY29sb3IxLCBjb2xvcjIsIHZhcmlhdGlvbnMpID0+IHtcblx0aWYgKCF2YXJpYXRpb25zKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cblx0Y29sb3IxID0gY29sb3IxLnN0YXJ0c1dpdGgoJyMnKSA/IGNvbG9yMSA6IGAjJHtjb2xvcjF9YDtcblx0Y29sb3IyID0gY29sb3IyLnN0YXJ0c1dpdGgoJyMnKSA/IGNvbG9yMiA6IGAjJHtjb2xvcjJ9YDtcblx0bGV0IHBlcmNlbnRhZ2UgPSAxIC8gdmFyaWF0aW9ucztcblx0bGV0IGNvbG9ycyA9IFtdO1xuXG5cdGZvciAobGV0IGkgPSAxOyBpIDw9IHZhcmlhdGlvbnMgLSAxOyBpKyspIHtcblx0XHRjb2xvcnMgPSBbXG5cdFx0XHQuLi5jb2xvcnMsXG5cdFx0XHQnIycgKyBjYWxjdWxhdGVDb2xvcihjb2xvcjEuc2xpY2UoMSksIGNvbG9yMi5zbGljZSgxKSwgaSAqIHBlcmNlbnRhZ2UpLFxuXHRcdF07XG5cdH1cblxuXHRyZXR1cm4gY29sb3JzO1xufTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ29sb3JSYW5nZSA9ICh7XG5cdGNvbG9yLFxuXHRsaWdodFZhcmlhdGlvbnMsXG5cdGxpZ2h0UGVyY2VudGFnZSxcblx0bGlnaHRTYXR1cmF0aW9uLFxuXHRkYXJrVmFyaWF0aW9ucyxcblx0ZGFya1BlcmNlbnRhZ2UsXG5cdGRhcmtTYXR1cmF0aW9uLFxuXHRob29rID0gJ2hvb2snLFxuXHRzdGFydEluZGV4LFxuXHRpbmNsdWRlRW5kcyxcblx0aXNEYXJrLFxuXHRyZW1vdmVFbmQsXG5cdHNhdHVyYXRpb25NdWx0aXBseSxcbn0pID0+IHtcblx0aWYgKCFjb2xvcikgcmV0dXJuIFtdO1xuXG5cdGxldCBmaXJzdENvbG9yID0gY2FsY3VsYXRlQ29sb3IoXG5cdFx0J2ZmZmZmZicsXG5cdFx0Y29sb3Iuc2xpY2UoMSksXG5cdFx0MSAtIGxpZ2h0UGVyY2VudGFnZVxuXHQpO1xuXHRsZXQgbGFzdENvbG9yID0gY2FsY3VsYXRlQ29sb3IoY29sb3Iuc2xpY2UoMSksICcwMDAwMDAnLCBkYXJrUGVyY2VudGFnZSk7XG5cblx0aWYgKHNhdHVyYXRpb25NdWx0aXBseSkge1xuXHRcdGNvbnNvbGUubG9nKGZpcnN0Q29sb3IpXG5cdFx0Y29uc3QgZmlyc3RIU0wgPSBoZXhUb0hTTCgnIycgKyBmaXJzdENvbG9yKTtcblx0XHRmaXJzdEhTTC5zID1cblx0XHRcdGZpcnN0SFNMLnMgKiBzYXR1cmF0aW9uTXVsdGlwbHkgPiAxMDBcblx0XHRcdFx0PyAxMDBcblx0XHRcdFx0OiBmaXJzdEhTTC5zICogc2F0dXJhdGlvbk11bHRpcGx5O1xuXHRcdGNvbnNvbGUubG9nKGZpcnN0SFNMKTtcblx0XHRmaXJzdEhTTC5oID0gMjQwO1xuXHRcdGZpcnN0Q29sb3IgPSBIU0xUb0hleChmaXJzdEhTTC5oLCBmaXJzdEhTTC5zLCBmaXJzdEhTTC5sKS5zdWJzdHJpbmcoMSk7XG5cblx0XHRjb25zdCBsYXN0SFNMID0gaGV4VG9IU0woJyMnICsgbGFzdENvbG9yKTtcblx0XHRsYXN0SFNMLnMgPVxuXHRcdFx0bGFzdEhTTC5zICogc2F0dXJhdGlvbk11bHRpcGx5ID4gMTAwXG5cdFx0XHRcdD8gMTAwXG5cdFx0XHRcdDogbGFzdEhTTC5zICogc2F0dXJhdGlvbk11bHRpcGx5O1xuXHRcdGxhc3RDb2xvciA9IEhTTFRvSGV4KGxhc3RIU0wuaCwgbGFzdEhTTC5zLCBsYXN0SFNMLmwpLnN1YnN0cmluZygxKTtcblx0fVxuXG5cdGNvbnN0IGxpZ2h0Q29sb3JzID0gZ2VuZXJhdGVDb2xvcnMoZmlyc3RDb2xvciwgY29sb3IsIGxpZ2h0VmFyaWF0aW9ucyk7XG5cdGNvbnN0IGRhcmtDb2xvcnMgPSBnZW5lcmF0ZUNvbG9ycyhjb2xvciwgbGFzdENvbG9yLCBkYXJrVmFyaWF0aW9ucyk7XG5cblx0bGV0IG91dCA9IFtdO1xuXHRpZiAobGlnaHRWYXJpYXRpb25zKSB7XG5cdFx0b3V0ID0gW2AjJHtmaXJzdENvbG9yfWAsIC4uLmxpZ2h0Q29sb3JzLCAuLi5vdXRdO1xuXHR9XG5cblx0b3V0ID0gWy4uLm91dCwgY29sb3JdO1xuXG5cdGlmIChkYXJrVmFyaWF0aW9ucykge1xuXHRcdG91dCA9IFsuLi5vdXQsIC4uLmRhcmtDb2xvcnMsIGAjJHtsYXN0Q29sb3J9YF07XG5cdH1cblxuXHRpZiAoaW5jbHVkZUVuZHMpIHtcblx0XHRvdXQgPSBbYCNmZmZmZmZgLCAuLi5vdXQsIGAjMDAwMDAwYF07XG5cdH1cblxuXHRpZiAocmVtb3ZlRW5kKSB7XG5cdFx0b3V0LnBvcCgpO1xuXHR9XG5cblx0aWYgKGlzRGFyaykge1xuXHRcdG91dC5yZXZlcnNlKCk7XG5cdH1cblxuXHRyZXR1cm4gb3V0Lm1hcCgoY29sb3IsIGluZGV4KSA9PiB7XG5cdFx0bGV0IG5hbWUgPSBgLS0ke2hvb2t9YDtcblx0XHRpZiAoc3RhcnRJbmRleCAhPT0gbnVsbCkge1xuXHRcdFx0bmFtZSArPSBgLSR7aW5kZXggKyAoc3RhcnRJbmRleCA/IHN0YXJ0SW5kZXggOiAwKX1gO1xuXHRcdH1cblx0XHRyZXR1cm4gbmV3IENvbG9yKGNvbG9yLCBuYW1lKTtcblx0fSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q29sb3JzID0gKHNlbGVjdGVkQ29sb3JzLCBpc0RhcmsgPSBmYWxzZSkgPT4ge1xuXHRjb25zdCBnZW5lcmF0ZWQgPSB7fTtcblxuXHRmb3IgKGNvbnN0IGkgaW4gc2VsZWN0ZWRDb2xvcnMpIHtcblx0XHRzd2l0Y2ggKGkpIHtcblx0XHRcdGNhc2UgJ25ldXRyYWxzJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0TmV1dHJhbHMoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ3N1cmZhY2VOZXV0cmFsJ10gPSBnZXRTdXJmYWNlTmV1dHJhbChcblx0XHRcdFx0XHRzZWxlY3RlZENvbG9yc1tpXSxcblx0XHRcdFx0XHRpc0Rhcmtcblx0XHRcdFx0KTtcblx0XHRcdFx0Z2VuZXJhdGVkWydzdXJmYWNlRGl2aWRlciddID0gZ2V0U3VyZmFjZURpdmlkZXIoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnYmFja2dyb3VuZFByaW1hcnknXSA9IGdldEJhY2tncm91bmRQcmltYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2JhY2tncm91bmRTZWNvbmRhcnknXSA9IGdldEJhY2tncm91bmRTZWNvbmRhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnYmFja2dyb3VuZFRlcnRpYXJ5J10gPSBnZXRCYWNrZ3JvdW5kVGVydGlhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnZGl2aWRlclByaW1hcnknXSA9IGdldERpdmlkZXJQcmltYXJ5KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3JzW2ldLFxuXHRcdFx0XHRcdGlzRGFya1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ2RpdmlkZXJTZWNvbmRhcnknXSA9IGdldERpdmlkZXJTZWNvbmRhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnZGl2aWRlclRlcnRpYXJ5J10gPSBnZXREaXZpZGVyVGVydGlhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsndGV4dFByaW1hcnknXSA9IGdldFRleHRQcmltYXJ5KHNlbGVjdGVkQ29sb3JzW2ldLCBpc0RhcmspO1xuXHRcdFx0XHRnZW5lcmF0ZWRbJ3RleHRTZWNvbmRhcnknXSA9IGdldFRleHRTZWNvbmRhcnkoXG5cdFx0XHRcdFx0c2VsZWN0ZWRDb2xvcnNbaV0sXG5cdFx0XHRcdFx0aXNEYXJrXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGdlbmVyYXRlZFsndGV4dFRlcnRpYXJ5J10gPSBnZXRUZXh0VGVydGlhcnkoc2VsZWN0ZWRDb2xvcnNbaV0sIGlzRGFyayk7XG5cdFx0XHRcdGdlbmVyYXRlZFsnYm9yZGVyUHJpbWFyeSddID0gZ2V0Qm9yZGVyUHJpbWFyeShcblx0XHRcdFx0XHRzZWxlY3RlZENvbG9yc1tpXSxcblx0XHRcdFx0XHRpc0Rhcmtcblx0XHRcdFx0KTtcblx0XHRcdFx0Z2VuZXJhdGVkWydib3JkZXJTZWNvbmRhcnknXSA9IGdldEJvcmRlclNlY29uZGFyeShcblx0XHRcdFx0XHRzZWxlY3RlZENvbG9yc1tpXSxcblx0XHRcdFx0XHRpc0Rhcmtcblx0XHRcdFx0KTtcblx0XHRcdFx0Z2VuZXJhdGVkWydib3JkZXJUZXJ0aWFyeSddID0gZ2V0Qm9yZGVyVGVydGlhcnkoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAncHJpbWFyeSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldFByaW1hcnkoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnc2Vjb25kYXJ5Jzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0U2Vjb25kYXJ5KHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ3NlbGVjdGlvblByaW1hcnknOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRTZWxlY3Rpb25QcmltYXJ5KHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ3NlbGVjdGlvblNlY29uZGFyeSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldFNlbGVjdGlvblNlY29uZGFyeShzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdpbnRlcmFjdGl2ZSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEludGVyYWN0aXZlKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2xpbmsnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRMaW5rKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2ZvY3VzJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0Rm9jdXMoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRDcml0aWNhbCc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEFsZXJ0Q3JpdGljYWwoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRIaWdoJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0QWxlcnRIaWdoKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2FsZXJ0V2FybmluZyc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEFsZXJ0V2FybmluZyhzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdhbGVydE1vZGVyYXRlJzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0QWxlcnRNb2RlcmF0ZShzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdhbGVydEluZm8nOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRBbGVydEluZm8oc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRQb3NpdGl2ZSc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldEFsZXJ0UG9zaXRpdmUoc2VsZWN0ZWRDb2xvcnNbaV0pO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSAnYWxlcnRMb3cnOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRBbGVydExvdyhzZWxlY3RlZENvbG9yc1tpXSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlICdicmFuZE5ldXRyYWwnOlxuXHRcdFx0Y2FzZSAnYnJhbmRQcmltYXJ5Jzpcblx0XHRcdGNhc2UgJ2JyYW5kU2Vjb25kYXJ5Jzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0QnJhbmQoc2VsZWN0ZWRDb2xvcnNbaV0sIGkpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3N1cmZhY2VCcmFuZCc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldFN1cmZhY2VCcmFuZChzZWxlY3RlZENvbG9yc1tpXSwgaXNEYXJrKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdjaHJvbWVCcmFuZCc6XG5cdFx0XHRcdGdlbmVyYXRlZFtpXSA9IGdldENocm9tZUJyYW5kKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2Nocm9tZURpdmlkZXInOlxuXHRcdFx0XHRnZW5lcmF0ZWRbaV0gPSBnZXRDaHJvbWVEaXZpZGVyKHNlbGVjdGVkQ29sb3JzW2ldKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgJ2dyb3VwZWRCbHVlJzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRCcm93bic6XG5cdFx0XHRjYXNlICdncm91cGVkR3JheSc6XG5cdFx0XHRjYXNlICdncm91cGVkR3JlZW4nOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZEdyZWVuWWVsbG93Jzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRNYWdlbnRhJzpcblx0XHRcdGNhc2UgJ2dyb3VwZWRPcmFuZ2UnOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZFBpbmsnOlxuXHRcdFx0Y2FzZSAnZ3JvdXBlZFB1cnBsZSc6XG5cdFx0XHRjYXNlICdncm91cGVkVGVhbCc6XG5cdFx0XHRjYXNlICdncm91cGVkWWVsbG93Jzpcblx0XHRcdFx0Z2VuZXJhdGVkW2ldID0gZ2V0R3JvdXBlZChzZWxlY3RlZENvbG9yc1tpXSwgaSk7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRkZWZhdWx0OlxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBnZW5lcmF0ZWQ7XG59O1xuXG5leHBvcnQgY29uc3QgaXNIZXggPSAoaGV4KSA9PiB7XG5cdHJldHVybiAvXiNbMC05QS1GXXs2fSQvaS50ZXN0KGhleCk7XG59O1xuXG5leHBvcnQgY29uc3QgaGV4VG9IU0wgPSAoSCkgPT4ge1xuXHQvLyBDb252ZXJ0IGhleCB0byBSR0IgZmlyc3Rcblx0bGV0IHIgPSAwLFxuXHRcdGcgPSAwLFxuXHRcdGIgPSAwO1xuXHRpZiAoSC5sZW5ndGggPT0gNCkge1xuXHRcdHIgPSAnMHgnICsgSFsxXSArIEhbMV07XG5cdFx0ZyA9ICcweCcgKyBIWzJdICsgSFsyXTtcblx0XHRiID0gJzB4JyArIEhbM10gKyBIWzNdO1xuXHR9IGVsc2UgaWYgKEgubGVuZ3RoID09IDcpIHtcblx0XHRyID0gJzB4JyArIEhbMV0gKyBIWzJdO1xuXHRcdGcgPSAnMHgnICsgSFszXSArIEhbNF07XG5cdFx0YiA9ICcweCcgKyBIWzVdICsgSFs2XTtcblx0fVxuXHQvLyBUaGVuIHRvIEhTTFxuXHRyIC89IDI1NTtcblx0ZyAvPSAyNTU7XG5cdGIgLz0gMjU1O1xuXHRsZXQgY21pbiA9IE1hdGgubWluKHIsIGcsIGIpLFxuXHRcdGNtYXggPSBNYXRoLm1heChyLCBnLCBiKSxcblx0XHRkZWx0YSA9IGNtYXggLSBjbWluLFxuXHRcdGggPSAwLFxuXHRcdHMgPSAwLFxuXHRcdGwgPSAwO1xuXG5cdGlmIChkZWx0YSA9PSAwKSBoID0gMDtcblx0ZWxzZSBpZiAoY21heCA9PSByKSBoID0gKChnIC0gYikgLyBkZWx0YSkgJSA2O1xuXHRlbHNlIGlmIChjbWF4ID09IGcpIGggPSAoYiAtIHIpIC8gZGVsdGEgKyAyO1xuXHRlbHNlIGggPSAociAtIGcpIC8gZGVsdGEgKyA0O1xuXG5cdGggPSBNYXRoLnJvdW5kKGggKiA2MCk7XG5cblx0aWYgKGggPCAwKSBoICs9IDM2MDtcblxuXHRsID0gKGNtYXggKyBjbWluKSAvIDI7XG5cdHMgPSBkZWx0YSA9PSAwID8gMCA6IGRlbHRhIC8gKDEgLSBNYXRoLmFicygyICogbCAtIDEpKTtcblx0cyA9ICsocyAqIDEwMCkudG9GaXhlZCgxKTtcblx0bCA9ICsobCAqIDEwMCkudG9GaXhlZCgxKTtcblxuXHQvLyByZXR1cm4gXCJoc2woXCIgKyBNYXRoLnJvdW5kKGgpICsgXCIsXCIgKyBNYXRoLnJvdW5kKHMpICsgXCIsXCIgKyBNYXRoLnJvdW5kKGwpICsgXCIpXCI7XG5cdHJldHVybiB7XG5cdFx0aDogTWF0aC5yb3VuZChoKSxcblx0XHRzOiBNYXRoLnJvdW5kKHMpLFxuXHRcdGw6IE1hdGgucm91bmQobCksXG5cdH07XG59O1xuXG5leHBvcnQgY29uc3QgSFNMVG9IZXggPSAoaCwgcywgbCkgPT4ge1xuXHRzIC89IDEwMDtcblx0bCAvPSAxMDA7XG5cblx0bGV0IGMgPSAoMSAtIE1hdGguYWJzKDIgKiBsIC0gMSkpICogcyxcblx0XHR4ID0gYyAqICgxIC0gTWF0aC5hYnMoKChoIC8gNjApICUgMikgLSAxKSksXG5cdFx0bSA9IGwgLSBjIC8gMixcblx0XHRyID0gMCxcblx0XHRnID0gMCxcblx0XHRiID0gMDtcblxuXHRpZiAoMCA8PSBoICYmIGggPCA2MCkge1xuXHRcdHIgPSBjO1xuXHRcdGcgPSB4O1xuXHRcdGIgPSAwO1xuXHR9IGVsc2UgaWYgKDYwIDw9IGggJiYgaCA8IDEyMCkge1xuXHRcdHIgPSB4O1xuXHRcdGcgPSBjO1xuXHRcdGIgPSAwO1xuXHR9IGVsc2UgaWYgKDEyMCA8PSBoICYmIGggPCAxODApIHtcblx0XHRyID0gMDtcblx0XHRnID0gYztcblx0XHRiID0geDtcblx0fSBlbHNlIGlmICgxODAgPD0gaCAmJiBoIDwgMjQwKSB7XG5cdFx0ciA9IDA7XG5cdFx0ZyA9IHg7XG5cdFx0YiA9IGM7XG5cdH0gZWxzZSBpZiAoMjQwIDw9IGggJiYgaCA8IDMwMCkge1xuXHRcdHIgPSB4O1xuXHRcdGcgPSAwO1xuXHRcdGIgPSBjO1xuXHR9IGVsc2UgaWYgKDMwMCA8PSBoICYmIGggPCAzNjApIHtcblx0XHRyID0gYztcblx0XHRnID0gMDtcblx0XHRiID0geDtcblx0fVxuXHQvLyBIYXZpbmcgb2J0YWluZWQgUkdCLCBjb252ZXJ0IGNoYW5uZWxzIHRvIGhleFxuXHRyID0gTWF0aC5yb3VuZCgociArIG0pICogMjU1KS50b1N0cmluZygxNik7XG5cdGcgPSBNYXRoLnJvdW5kKChnICsgbSkgKiAyNTUpLnRvU3RyaW5nKDE2KTtcblx0YiA9IE1hdGgucm91bmQoKGIgKyBtKSAqIDI1NSkudG9TdHJpbmcoMTYpO1xuXG5cdC8vIFByZXBlbmQgMHMsIGlmIG5lY2Vzc2FyeVxuXHRpZiAoci5sZW5ndGggPT0gMSkgciA9ICcwJyArIHI7XG5cdGlmIChnLmxlbmd0aCA9PSAxKSBnID0gJzAnICsgZztcblx0aWYgKGIubGVuZ3RoID09IDEpIGIgPSAnMCcgKyBiO1xuXG5cdHJldHVybiAnIycgKyByICsgZyArIGI7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0TmV1dHJhbEJhc2VDb2xvcnNGcm9tQnJhbmRQcmltYXJ5SGV4ID0gKGhleCkgPT4ge1xuXHRsZXQge2gsIHMsIGx9ID0gaGV4VG9IU0woaGV4KTtcblx0cyA9IHMgLSAyNSA8IDAgPyAwIDogcyAtIDI1O1xuXHRsID0gbCAtIDE4IDwgMCA/IDAgOiBsIC0gMTg7XG5cblx0cmV0dXJuIEhTTFRvSGV4KGgsIHMsIGwpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE5ldXRyYWxzID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAxMCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuOTUsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDksXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuOSxcblx0XHRob29rOiAnbm93LWNvbG9yLS1uZXV0cmFsJyxcblx0XHRzdGFydEluZGV4OiAwLFxuXHRcdGluY2x1ZGVFbmRzOiB0cnVlLFxuXHRcdHNhdHVyYXRpb25NdWx0aXBseTogMixcblx0fSk7XG59O1xuXG5jb25zdCBnZXRQcmltYXJ5ID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC42NSxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yLS1wcmltYXJ5Jyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRTZWNvbmRhcnkgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzQsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAxLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjY1LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAyLFxuXHRcdGhvb2s6ICdub3ctY29sb3ItLXNlY29uZGFyeScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0U2VsZWN0aW9uUHJpbWFyeSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC44NSxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNSxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yX3NlbGVjdGlvbi0tcHJpbWFyeScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0U2VsZWN0aW9uU2Vjb25kYXJ5ID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC42NSxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yX3NlbGVjdGlvbi0tc2Vjb25kYXJ5Jyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRJbnRlcmFjdGl2ZSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNyxcblx0XHRkYXJrVmFyaWF0aW9uczogMixcblx0XHRob29rOiAnbm93LWNvbG9yLS1pbnRlcmFjdGl2ZScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0TGluayA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC4zMixcblx0XHRsaWdodFZhcmlhdGlvbnM6IDEsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNjMsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDIsXG5cdFx0c3RhcnRJbmRleDogMSxcblx0XHRob29rOiAnbm93LWNvbG9yLS1saW5rJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRGb2N1cyA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC4zLFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC42Myxcblx0XHRkYXJrVmFyaWF0aW9uczogMSxcblx0XHRzdGFydEluZGV4OiAxLFxuXHRcdGhvb2s6ICdub3ctY29sb3ItLWZvY3VzJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRBbGVydENyaXRpY2FsID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc1LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC42LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9hbGVydC0tY3JpdGljYWwnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEFsZXJ0SGlnaCA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NSxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNzIsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDMsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0XHRob29rOiAnbm93LWNvbG9yX2FsZXJ0LS1oaWdoJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRBbGVydFdhcm5pbmcgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzUsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjcyLFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9hbGVydC0td2FybmluZycsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QWxlcnRNb2RlcmF0ZSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC43NCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0ZGFya1BlcmNlbnRhZ2U6IDAuNzIsXG5cdFx0ZGFya1ZhcmlhdGlvbnM6IDMsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0XHRob29rOiAnbm93LWNvbG9yX2FsZXJ0LS1tb2RlcmF0ZScsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QWxlcnRJbmZvID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC43Mixcblx0XHRkYXJrVmFyaWF0aW9uczogMyxcblx0XHRzdGFydEluZGV4OiAwLFxuXHRcdGhvb2s6ICdub3ctY29sb3JfYWxlcnQtLWluZm8nLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEFsZXJ0UG9zaXRpdmUgPSAoaGV4KSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IDAuNzQsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiAyLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjc5LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdHN0YXJ0SW5kZXg6IDAsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9hbGVydC0tcG9zaXRpdmUnLFxuXHR9KTtcbn07XG5cbmNvbnN0IGdldEFsZXJ0TG93ID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc0LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogMixcblx0XHRkYXJrUGVyY2VudGFnZTogMC43OSxcblx0XHRkYXJrVmFyaWF0aW9uczogMyxcblx0XHRzdGFydEluZGV4OiAwLFxuXHRcdGhvb2s6ICdub3ctY29sb3JfYWxlcnQtLWxvdycsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0QnJhbmQgPSAoaGV4LCBuYW1lKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cdG5hbWUgPVxuXHRcdCctLW5vdy1jb2xvcl9icmFuZC0tJyArXG5cdFx0bmFtZVxuXHRcdFx0LnJlcGxhY2UoLyhbYS16XSg/PVtBLVpdKSkvZywgJyQxICcpXG5cdFx0XHQuc3BsaXQoJyAnKVsxXVxuXHRcdFx0LnRvTG93ZXJDYXNlKCk7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoaGV4LCBuYW1lKV07XG59O1xuXG5jb25zdCBnZXRTdXJmYWNlTmV1dHJhbCA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0bGV0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMThdLmhleCA6IG5ldXRyYWxzWzRdLmhleDtcblxuXHRpZiAoaXNEYXJrKSB7XG5cdFx0Y29uc3Qge2gsIHMsIGx9ID0gaGV4VG9IU0woYmFzZU5ldXRyYWwpO1xuXHRcdGJhc2VOZXV0cmFsID0gSFNMVG9IZXgoaCwgcyAqIDIgPiAxMDAgPyAxMDAgOiBzICogMiwgbCk7XG5cdH1cblxuXHRjb25zdCBjb2xvcnMgPSBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBiYXNlTmV1dHJhbCxcblx0XHRsaWdodFBlcmNlbnRhZ2U6IGlzRGFyayA/IDAuMiA6IDAuOTUsXG5cdFx0bGlnaHRWYXJpYXRpb25zOiA2LFxuXHRcdGRhcmtQZXJjZW50YWdlOiBpc0RhcmsgPyAwLjQgOiAwLjgxLFxuXHRcdGRhcmtWYXJpYXRpb25zOiAwLFxuXHRcdHN0YXJ0SW5kZXg6IDEsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9zdXJmYWNlLS1uZXV0cmFsJyxcblx0XHRpbmNsdWRlRW5kczogZmFsc2UsXG5cdFx0aXNEYXJrLFxuXHRcdHJlbW92ZUVuZDogdHJ1ZSxcblx0fSk7XG5cblx0cmV0dXJuIGNvbG9ycztcbn07XG5cbmNvbnN0IGdldFN1cmZhY2VEaXZpZGVyID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRsZXQgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxNl0uaGV4IDogbmV1dHJhbHNbOF0uaGV4O1xuXG5cdGlmIChpc0RhcmspIHtcblx0XHRjb25zdCB7aCwgcywgbH0gPSBoZXhUb0hTTChiYXNlTmV1dHJhbCk7XG5cdFx0YmFzZU5ldXRyYWwgPSBIU0xUb0hleChoLCBzICogMiA+IDEwMCA/IDEwMCA6IHMgKiAyLCBsKTtcblx0fVxuXG5cdGNvbnN0IGNvbG9ycyA9IGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGJhc2VOZXV0cmFsLFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogaXNEYXJrID8gMC4yIDogMC45LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNixcblx0XHRkYXJrUGVyY2VudGFnZTogaXNEYXJrID8gMC40IDogMC44MSxcblx0XHRkYXJrVmFyaWF0aW9uczogMCxcblx0XHRzdGFydEluZGV4OiAxLFxuXHRcdGhvb2s6ICdub3ctY29sb3Jfc3VyZmFjZS0tZGl2aWRlcicsXG5cdFx0aW5jbHVkZUVuZHM6IGZhbHNlLFxuXHRcdGlzRGFyayxcblx0XHRyZW1vdmVFbmQ6IHRydWUsXG5cdH0pO1xuXG5cdHJldHVybiBjb2xvcnM7XG59O1xuXG5jb25zdCBnZXRTdXJmYWNlQnJhbmQgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBjb2xvcnMgPSBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiBpc0RhcmsgPyAwLjE1IDogMC45LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC41LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAwLFxuXHRcdHN0YXJ0SW5kZXg6IDEsXG5cdFx0aG9vazogJ25vdy1jb2xvcl9zdXJmYWNlLS1icmFuZCcsXG5cdFx0aW5jbHVkZUVuZHM6IGZhbHNlLFxuXHRcdGlzRGFyayxcblx0fSk7XG5cblx0cmV0dXJuIGNvbG9ycztcbn07XG5cbmNvbnN0IGdldENocm9tZUJyYW5kID0gKGhleCkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdHJldHVybiBnZW5lcmF0ZUNvbG9yUmFuZ2Uoe1xuXHRcdGNvbG9yOiBoZXgsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjg1LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC41LFxuXHRcdGRhcmtWYXJpYXRpb25zOiA1LFxuXHRcdGhvb2s6ICdub3ctY29sb3JfY2hyb21lLS1icmFuZCcsXG5cdH0pO1xufTtcblxuY29uc3QgZ2V0Q2hyb21lRGl2aWRlciA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRyZXR1cm4gZ2VuZXJhdGVDb2xvclJhbmdlKHtcblx0XHRjb2xvcjogaGV4LFxuXHRcdGxpZ2h0UGVyY2VudGFnZTogMC42LFxuXHRcdGxpZ2h0VmFyaWF0aW9uczogNSxcblx0XHRkYXJrUGVyY2VudGFnZTogMC44LFxuXHRcdGRhcmtWYXJpYXRpb25zOiA1LFxuXHRcdGhvb2s6ICdub3ctY29sb3JfY2hyb21lLS1kaXZpZGVyJyxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRHcm91cGVkID0gKGhleCwgbmFtZSkgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXHRuYW1lID0gbmFtZS5yZXBsYWNlKC8oW2Etel0oPz1bQS1aXSkpL2csICckMSAnKS5zcGxpdCgnICcpO1xuXHRuYW1lLnNoaWZ0KCk7XG5cdG5hbWUgPSBuYW1lLm1hcCgoZSkgPT4gZS50b0xvd2VyQ2FzZSgpKS5qb2luKCctJyk7XG5cblx0cmV0dXJuIGdlbmVyYXRlQ29sb3JSYW5nZSh7XG5cdFx0Y29sb3I6IGhleCxcblx0XHRsaWdodFZhcmlhdGlvbnM6IDIsXG5cdFx0bGlnaHRQZXJjZW50YWdlOiAwLjc1LFxuXHRcdGRhcmtWYXJpYXRpb25zOiAzLFxuXHRcdGRhcmtQZXJjZW50YWdlOiAwLjY1LFxuXHRcdGhvb2s6IGBub3ctY29sb3JfZ3JvdXBlZC0tJHtuYW1lfWAsXG5cdFx0c3RhcnRJbmRleDogMCxcblx0fSk7XG59O1xuXG5jb25zdCBnZXRCYWNrZ3JvdW5kUHJpbWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxOF0uaGV4IDogbmV1dHJhbHNbMF0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfYmFja2dyb3VuZC0tcHJpbWFyeScpXTtcbn07XG5cbmNvbnN0IGdldEJhY2tncm91bmRTZWNvbmRhcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMTZdLmhleCA6IG5ldXRyYWxzWzFdLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX2JhY2tncm91bmQtLXNlY29uZGFyeScpXTtcbn07XG5cbmNvbnN0IGdldEJhY2tncm91bmRUZXJ0aWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxNF0uaGV4IDogbmV1dHJhbHNbMl0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfYmFja2dyb3VuZC0tdGVydGlhcnknKV07XG59O1xuXG5jb25zdCBnZXREaXZpZGVyUHJpbWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1s4XS5oZXggOiBuZXV0cmFsc1s0XS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl9kaXZpZGVyLS1wcmltYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0RGl2aWRlclNlY29uZGFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxMF0uaGV4IDogbmV1dHJhbHNbM10uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfZGl2aWRlci0tc2Vjb25kYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0RGl2aWRlclRlcnRpYXJ5ID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRjb25zdCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzEyXS5oZXggOiBuZXV0cmFsc1syXS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl9kaXZpZGVyLS10ZXJ0aWFyeScpXTtcbn07XG5cbmNvbnN0IGdldFRleHRQcmltYXJ5ID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRjb25zdCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzBdLmhleCA6IG5ldXRyYWxzWzE4XS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl90ZXh0LS1wcmltYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0VGV4dFNlY29uZGFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1s0XS5oZXggOiBuZXV0cmFsc1sxMl0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfdGV4dC0tc2Vjb25kYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0VGV4dFRlcnRpYXJ5ID0gKGhleCwgaXNEYXJrKSA9PiB7XG5cdGlmICghaGV4KSByZXR1cm4gW107XG5cblx0Y29uc3QgbmV1dHJhbHMgPSBnZXROZXV0cmFscyhoZXgpO1xuXHRjb25zdCBiYXNlTmV1dHJhbCA9IGlzRGFyayA/IG5ldXRyYWxzWzZdLmhleCA6IG5ldXRyYWxzWzldLmhleDtcblxuXHRyZXR1cm4gW25ldyBDb2xvcihiYXNlTmV1dHJhbCwgJy0tbm93LWNvbG9yX3RleHQtLXRlcnRpYXJ5JyldO1xufTtcblxuY29uc3QgZ2V0Qm9yZGVyUHJpbWFyeSA9IChoZXgsIGlzRGFyaykgPT4ge1xuXHRpZiAoIWhleCkgcmV0dXJuIFtdO1xuXG5cdGNvbnN0IG5ldXRyYWxzID0gZ2V0TmV1dHJhbHMoaGV4KTtcblx0Y29uc3QgYmFzZU5ldXRyYWwgPSBpc0RhcmsgPyBuZXV0cmFsc1sxXS5oZXggOiBuZXV0cmFsc1s3XS5oZXg7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IoYmFzZU5ldXRyYWwsICctLW5vdy1jb2xvcl9ib3JkZXItLXByaW1hcnknKV07XG59O1xuXG5jb25zdCBnZXRCb3JkZXJTZWNvbmRhcnkgPSAoaGV4LCBpc0RhcmspID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cdGNvbnN0IGJhc2VOZXV0cmFsID0gaXNEYXJrID8gbmV1dHJhbHNbMl0uaGV4IDogbmV1dHJhbHNbNV0uaGV4O1xuXG5cdHJldHVybiBbbmV3IENvbG9yKGJhc2VOZXV0cmFsLCAnLS1ub3ctY29sb3JfYm9yZGVyLS1zZWNvbmRhcnknKV07XG59O1xuXG5jb25zdCBnZXRCb3JkZXJUZXJ0aWFyeSA9IChoZXgpID0+IHtcblx0aWYgKCFoZXgpIHJldHVybiBbXTtcblxuXHRjb25zdCBuZXV0cmFscyA9IGdldE5ldXRyYWxzKGhleCk7XG5cblx0cmV0dXJuIFtuZXcgQ29sb3IobmV1dHJhbHNbM10uaGV4LCAnLS1ub3ctY29sb3JfYm9yZGVyLS10ZXJ0aWFyeScpXTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRCYXNlQ29sb3JzID0gKHRoZW1lKSA9PiB7XG5cdHJldHVybiB7XG5cdFx0bmV1dHJhbHM6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRwcmltYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLXByaW1hcnktMSddKSxcblx0XHRzZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tc2Vjb25kYXJ5LTEnXSksXG5cdFx0c2VsZWN0aW9uUHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX3NlbGVjdGlvbi0tcHJpbWFyeS0yJ10pLFxuXHRcdHNlbGVjdGlvblNlY29uZGFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX3NlbGVjdGlvbi0tc2Vjb25kYXJ5LTInXSksXG5cdFx0aW50ZXJhY3RpdmU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0taW50ZXJhY3RpdmUtMiddKSxcblx0XHRjaHJvbWVCcmFuZDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2Nocm9tZS0tYnJhbmQtNSddKSxcblx0XHRjaHJvbWVEaXZpZGVyOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfY2hyb21lLS1kaXZpZGVyLTUnXSksXG5cdFx0YnJhbmROZXV0cmFsOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYnJhbmQtLW5ldXRyYWwnXSksXG5cdFx0YnJhbmRQcmltYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYnJhbmQtLXByaW1hcnknXSksXG5cdFx0YnJhbmRTZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9icmFuZC0tc2Vjb25kYXJ5J10pLFxuXHRcdHN1cmZhY2VOZXV0cmFsOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0c3VyZmFjZURpdmlkZXI6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRzdXJmYWNlQnJhbmQ6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9zdXJmYWNlLS1icmFuZC02J10pLFxuXHRcdGNocm9tZUJyYW5kOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfY2hyb21lLS1icmFuZC01J10pLFxuXHRcdGNocm9tZURpdmlkZXI6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9jaHJvbWUtLWRpdmlkZXItNSddKSxcblx0XHRiYWNrZ3JvdW5kUHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdGJhY2tncm91bmRTZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRiYWNrZ3JvdW5kVGVydGlhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRkaXZpZGVyUHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdGRpdmlkZXJTZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRkaXZpZGVyVGVydGlhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHR0ZXh0UHJpbWFyeTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1uZXV0cmFsLTExJ10pLFxuXHRcdHRleHRTZWNvbmRhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHR0ZXh0VGVydGlhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRib3JkZXJQcmltYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0Ym9yZGVyU2Vjb25kYXJ5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3ItLW5ldXRyYWwtMTEnXSksXG5cdFx0Ym9yZGVyVGVydGlhcnk6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tbmV1dHJhbC0xMSddKSxcblx0XHRhbGVydENyaXRpY2FsOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYWxlcnQtLWNyaXRpY2FsLTInXSksXG5cdFx0YWxlcnRIaWdoOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfYWxlcnQtLWhpZ2gtMiddKSxcblx0XHRhbGVydFdhcm5pbmc6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0td2FybmluZy0yJ10pLFxuXHRcdGFsZXJ0TW9kZXJhdGU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0tbW9kZXJhdGUtMiddKSxcblx0XHRhbGVydEluZm86IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0taW5mby0yJ10pLFxuXHRcdGFsZXJ0UG9zaXRpdmU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9hbGVydC0tcG9zaXRpdmUtMiddKSxcblx0XHRhbGVydExvdzogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2FsZXJ0LS1sb3ctMiddKSxcblx0XHRncm91cGVkQmx1ZTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLWJsdWUtMiddKSxcblx0XHRncm91cGVkQnJvd246IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1icm93bi0yJ10pLFxuXHRcdGdyb3VwZWRHcmF5OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tZ3JheS0yJ10pLFxuXHRcdGdyb3VwZWRHcmVlbjogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLWdyZWVuLTInXSksXG5cdFx0Z3JvdXBlZEdyZWVuWWVsbG93OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tZ3JlZW4teWVsbG93LTInXSksXG5cdFx0Z3JvdXBlZE1hZ2VudGE6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1tYWdlbnRhLTInXSksXG5cdFx0Z3JvdXBlZE9yYW5nZTogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLW9yYW5nZS0yJ10pLFxuXHRcdGdyb3VwZWRQaW5rOiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0tcGluay0yJ10pLFxuXHRcdGdyb3VwZWRQdXJwbGU6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvcl9ncm91cGVkLS1wdXJwbGUtMiddKSxcblx0XHRncm91cGVkVGVhbDogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yX2dyb3VwZWQtLXRlYWwtMiddKSxcblx0XHRncm91cGVkWWVsbG93OiByZ2JUb0hleCh0aGVtZVsnLS1ub3ctY29sb3JfZ3JvdXBlZC0teWVsbG93LTInXSksXG5cdFx0bGluazogcmdiVG9IZXgodGhlbWVbJy0tbm93LWNvbG9yLS1saW5rLTInXSksXG5cdFx0Zm9jdXM6IHJnYlRvSGV4KHRoZW1lWyctLW5vdy1jb2xvci0tZm9jdXMtMiddKSxcblx0fTtcbn07XG5cbmNvbnN0IGx1bWluYW5jZSA9IChyZ2IpID0+IHtcblx0dmFyIGEgPSByZ2Iuc3BsaXQoJywnKS5tYXAoZnVuY3Rpb24gKHYpIHtcblx0XHR2IC89IDI1NTtcblx0XHRyZXR1cm4gdiA8PSAwLjAzOTI4ID8gdiAvIDEyLjkyIDogTWF0aC5wb3coKHYgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcblx0fSk7XG5cdHJldHVybiBhWzBdICogMC4yMTI2ICsgYVsxXSAqIDAuNzE1MiArIGFbMl0gKiAwLjA3MjI7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q29udHJhc3RSYXRpbyA9IChjb2xvcjEsIGNvbG9yMikgPT4ge1xuXHRpZiAoIWNvbG9yMSB8fCAhY29sb3IyKSByZXR1cm4ge25vcm1hbDoge30sIGxhcmdlOiB7fSwgcmF0aW86IG51bGx9O1xuXG5cdGlmIChpc0hleChjb2xvcjEpKSB7XG5cdFx0Y29sb3IxID0gaGV4VG9SZ2IoY29sb3IxKTtcblx0fVxuXG5cdGlmIChpc0hleChjb2xvcjIpKSB7XG5cdFx0Y29sb3IyID0gaGV4VG9SZ2IoY29sb3IyKTtcblx0fVxuXG5cdGNvbnN0IGNvbG9yMWx1bWluYW5jZSA9IGx1bWluYW5jZShjb2xvcjEpO1xuXHRjb25zdCBjb2xvcjJsdW1pbmFuY2UgPSBsdW1pbmFuY2UoY29sb3IyKTtcblxuXHRjb25zdCByYXRpbyA9XG5cdFx0Y29sb3IxbHVtaW5hbmNlID4gY29sb3IybHVtaW5hbmNlXG5cdFx0XHQ/IChjb2xvcjJsdW1pbmFuY2UgKyAwLjA1KSAvIChjb2xvcjFsdW1pbmFuY2UgKyAwLjA1KVxuXHRcdFx0OiAoY29sb3IxbHVtaW5hbmNlICsgMC4wNSkgLyAoY29sb3IybHVtaW5hbmNlICsgMC4wNSk7XG5cblx0Y29uc3Qgb3V0ID0ge1xuXHRcdG5vcm1hbDoge1xuXHRcdFx0YWE6IHJhdGlvIDwgMSAvIDQuNSA/ICdQYXNzJyA6ICdGYWlsJyxcblx0XHRcdGFhYTogcmF0aW8gPCAxIC8gNyA/ICdQYXNzJyA6ICdGYWlsJyxcblx0XHR9LFxuXHRcdGxhcmdlOiB7XG5cdFx0XHRhYTogcmF0aW8gPCAxIC8gMyA/ICdQYXNzJyA6ICdGYWlsJyxcblx0XHRcdGFhYTogcmF0aW8gPCAxIC8gNC41ID8gJ1Bhc3MnIDogJ0ZhaWwnLFxuXHRcdH0sXG5cdFx0cmF0aW86IE1hdGguZmxvb3IoKDEgLyByYXRpbykgKiAxMCkgLyAxMCxcblx0fTtcblxuXHRyZXR1cm4gb3V0O1xufTtcblxuZXhwb3J0IGNvbnN0IGdldENvbXBsaW1lbnRhcnlDb2xvcnMgPSAoYmFzZUNvbG9yLCB2YXJpYXRpb25zKSA9PiB7XG5cdGlmICghYmFzZUNvbG9yIHx8ICF2YXJpYXRpb25zKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cblx0Y29uc3Qge2gsIHMsIGx9ID0gaGV4VG9IU0woYmFzZUNvbG9yKTtcblx0Y29uc3QgcmFuZ2UgPSBNYXRoLnJvdW5kKDM2MCAvIHZhcmlhdGlvbnMpO1xuXHRjb25zdCBvdXQgPSBbbmV3IENvbG9yKGJhc2VDb2xvcildO1xuXG5cdGZvciAobGV0IGkgPSAxOyBpIDwgdmFyaWF0aW9uczsgaSsrKSB7XG5cdFx0bGV0IG5ld0ggPSBoIC0gcmFuZ2UgKiBpO1xuXHRcdGlmIChuZXdIIDwgMCkge1xuXHRcdFx0bmV3SCA9IDM2MCAtIE1hdGguYWJzKG5ld0gpO1xuXHRcdH1cblxuXHRcdG91dC5wdXNoKG5ldyBDb2xvcihIU0xUb0hleChuZXdILCBzLCBsKSkpO1xuXHR9XG5cblx0cmV0dXJuIG91dDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/color-generator/generateColorsP.js\n");

/***/ })

})