webpackHotUpdate_N_E("pages/color-generator",{

/***/ "./lib/color-generator/generateColors.js":
/*!***********************************************!*\
  !*** ./lib/color-generator/generateColors.js ***!
  \***********************************************/
/*! exports provided: generateColors, getColors, isHex, hexToHSL, HSLToHex, getNeutralBaseColorsFromBrandPrimaryHex, getPrimaryColorsFromBrandPrimaryHex, getSurfaceBrandColorsFromPrimaryHex, getChromeBrandColorsFromPrimaryHex, getChromeDividerColorsFromPrimaryHex, getInteractiveColorsFromPrimaryHex, getFocusColorsFromPrimaryHex, getSecondaryColorsFromSecondaryHex, getSelectionPrimaryFromSecondaryHex, getSelectionSecondaryFromSecondaryHex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateColors\", function() { return generateColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColors\", function() { return getColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHex\", function() { return isHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToHSL\", function() { return hexToHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HSLToHex\", function() { return HSLToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNeutralBaseColorsFromBrandPrimaryHex\", function() { return getNeutralBaseColorsFromBrandPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPrimaryColorsFromBrandPrimaryHex\", function() { return getPrimaryColorsFromBrandPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSurfaceBrandColorsFromPrimaryHex\", function() { return getSurfaceBrandColorsFromPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getChromeBrandColorsFromPrimaryHex\", function() { return getChromeBrandColorsFromPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getChromeDividerColorsFromPrimaryHex\", function() { return getChromeDividerColorsFromPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getInteractiveColorsFromPrimaryHex\", function() { return getInteractiveColorsFromPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFocusColorsFromPrimaryHex\", function() { return getFocusColorsFromPrimaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSecondaryColorsFromSecondaryHex\", function() { return getSecondaryColorsFromSecondaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSelectionPrimaryFromSecondaryHex\", function() { return getSelectionPrimaryFromSecondaryHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSelectionSecondaryFromSecondaryHex\", function() { return getSelectionSecondaryFromSecondaryHex; });\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n\n\n\nvar Color = function Color(color, name) {\n  Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, Color);\n\n  this.hex = color;\n  this.rgb = hexToRgb(color);\n  this.name = name;\n};\n\nvar hex = function hex(color) {\n  var colorString = color.toString(16);\n  return colorString.length === 1 ? \"0\".concat(colorString) : colorString;\n};\n\nvar calculateColor = function calculateColor(color1, color2, ratio) {\n  ratio = (Math.round(ratio * 100) / 100).toFixed(2);\n  var r = Math.ceil(parseInt(color2.substring(0, 2), 16) * ratio + parseInt(color1.substring(0, 2), 16) * (1 - ratio));\n  var g = Math.ceil(parseInt(color2.substring(2, 4), 16) * ratio + parseInt(color1.substring(2, 4), 16) * (1 - ratio));\n  var b = Math.ceil(parseInt(color2.substring(4, 6), 16) * ratio + parseInt(color1.substring(4, 6), 16) * (1 - ratio));\n  return hex(r) + hex(g) + hex(b);\n};\n\nvar hexToRgb = function hexToRgb(hex) {\n  var r = parseInt(hex.substring(1, 3), 16);\n  var g = parseInt(hex.substring(3, 5), 16);\n  var b = parseInt(hex.substring(5, 7), 16);\n  return \"\".concat(r, \",\").concat(g, \",\").concat(b);\n};\n\nvar generateColors = function generateColors(color1, color2, variations) {\n  if (!variations) {\n    return [];\n  }\n\n  color1 = color1.startsWith('#') ? color1 : \"#\".concat(color1);\n  color2 = color2.startsWith('#') ? color2 : \"#\".concat(color2);\n  var percentage = 1 / variations;\n  var numberOfLoops = 1 / percentage - 1;\n  var colors = [];\n\n  for (var i = 1; i <= numberOfLoops; i++) {\n    colors = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(colors), ['#' + calculateColor(color1.slice(1), color2.slice(1), i * percentage)]);\n  }\n\n  return colors;\n};\n\nvar generateColorRange = function generateColorRange(color, lightVariations, lightPercentage, darkVariations, darkPercentage, hook, startIndex, includeEnds, isDark) {\n  var firstColor = calculateColor('ffffff', color.slice(1), 1 - lightPercentage);\n  var lastColor = calculateColor(color.slice(1), '000000', darkPercentage);\n  var lightColors = generateColors(firstColor, color, lightVariations);\n  var darkColors = generateColors(color, lastColor, darkVariations);\n  var out = [];\n\n  if (lightVariations) {\n    out = [\"#\".concat(firstColor)].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lightColors), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(out));\n  }\n\n  out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(out), [color]);\n\n  if (darkVariations) {\n    out = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(out), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(darkColors), [\"#\".concat(lastColor)]);\n  }\n\n  if (includeEnds) {\n    out = [\"#ffffff\"].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(out), [\"#000000\"]);\n  }\n\n  if (isDark) {\n    out.reverse();\n  }\n\n  return out.map(function (color, index) {\n    var name = \"--\".concat(hook);\n\n    if (startIndex !== null) {\n      name += \"-\".concat(index + (startIndex ? startIndex : 0));\n    }\n\n    return new Color(color, name);\n  });\n};\n\nvar getColors = function getColors(colorsJson, selectedColors, isDark) {\n  var generated = {};\n\n  for (var _i = 0, _Object$values = Object.values(colorsJson.colors); _i < _Object$values.length; _i++) {\n    var color = _Object$values[_i];\n    var id = color.id,\n        lightVariations = color.lightVariations,\n        lightPercentage = color.lightPercentage,\n        darkVariations = color.darkVariations,\n        darkPercentage = color.darkPercentage,\n        hook = color.hook,\n        startIndex = color.startIndex;\n    var baseColor = selectedColors[id];\n\n    if (!baseColor || baseColor.length !== 7 || id === 'surfaceNeutral' || id === 'surfaceDivider') {\n      continue;\n    }\n\n    generated[id] = generateColorRange(baseColor, lightVariations, lightPercentage, darkVariations, darkPercentage, hook, startIndex, id === 'neutrals' ? true : false, isDark && id === 'neutrals' ? true : false);\n  }\n\n  if (generated.neutrals) {\n    var neutralColors = generated.neutrals;\n    var surfaceNeutralBase = neutralColors[4].hex;\n    var surfaceNeutralColors = generateColorRange(surfaceNeutralBase, colorsJson.colors.surfaceNeutral.lightVariations, colorsJson.colors.surfaceNeutral.lightPercentage, colorsJson.colors.surfaceNeutral.darkVariations, colorsJson.colors.surfaceNeutral.darkPercentage, colorsJson.colors.surfaceNeutral.hook, 0, false, isDark);\n    isDark ? surfaceNeutralColors.shift() : surfaceNeutralColors.pop();\n    generated.surfaceNeutral = surfaceNeutralColors;\n    var surfaceDividerBase = neutralColors[8].hex;\n    var surfaceDividerColors = generateColorRange(surfaceDividerBase, colorsJson.colors.surfaceDivider.lightVariations, colorsJson.colors.surfaceDivider.lightPercentage, colorsJson.colors.surfaceDivider.darkVariations, colorsJson.colors.surfaceDivider.darkPercentage, colorsJson.colors.surfaceDivider.hook, 0, false, isDark);\n    console.log(surfaceDivederColors);\n    isDark ? surfaceDividerColors.shift() : surfaceDividerColors.pop();\n    generated.surfaceDivider = surfaceDividerColors;\n  }\n\n  return generated;\n};\nvar isHex = function isHex(hex) {\n  return /^#[0-9A-F]{6}$/i.test(hex);\n};\nvar hexToHSL = function hexToHSL(H) {\n  // Convert hex to RGB first\n  var r = 0,\n      g = 0,\n      b = 0;\n\n  if (H.length == 4) {\n    r = '0x' + H[1] + H[1];\n    g = '0x' + H[2] + H[2];\n    b = '0x' + H[3] + H[3];\n  } else if (H.length == 7) {\n    r = '0x' + H[1] + H[2];\n    g = '0x' + H[3] + H[4];\n    b = '0x' + H[5] + H[6];\n  } // Then to HSL\n\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta == 0) h = 0;else if (cmax == r) h = (g - b) / delta % 6;else if (cmax == g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1); // return \"hsl(\" + Math.round(h) + \",\" + Math.round(s) + \",\" + Math.round(l) + \")\";\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n};\nvar HSLToHex = function HSLToHex(h, s, l) {\n  s /= 100;\n  l /= 100;\n  var c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n      m = l - c / 2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  } // Having obtained RGB, convert channels to hex\n\n\n  r = Math.round((r + m) * 255).toString(16);\n  g = Math.round((g + m) * 255).toString(16);\n  b = Math.round((b + m) * 255).toString(16); // Prepend 0s, if necessary\n\n  if (r.length == 1) r = '0' + r;\n  if (g.length == 1) g = '0' + g;\n  if (b.length == 1) b = '0' + b;\n  return '#' + r + g + b;\n};\n_c = HSLToHex;\nvar getNeutralBaseColorsFromBrandPrimaryHex = function getNeutralBaseColorsFromBrandPrimaryHex(hex) {\n  var _hexToHSL = hexToHSL(hex),\n      h = _hexToHSL.h,\n      s = _hexToHSL.s,\n      l = _hexToHSL.l; // h = (h + 53 > 360) ? 360 : h + 53;\n\n\n  s = s - 25 < 0 ? 0 : s - 25;\n  l = l - 18 < 0 ? 0 : l - 18;\n  return HSLToHex(h, s, l);\n};\nvar getPrimaryColorsFromBrandPrimaryHex = function getPrimaryColorsFromBrandPrimaryHex(hex) {\n  // let {h, s, l} = hexToHSL(hex);\n  // h = (h - 19 < 0) ? 0 : h - 19;\n  // s = (s + 41 > 100) ? 100 : s + 41;\n  // l = (l + 11 > 100) ? 100 : l + 11;\n  // return HSLToHex(h, s, l);\n  return hex;\n};\nvar getSurfaceBrandColorsFromPrimaryHex = function getSurfaceBrandColorsFromPrimaryHex(hex) {\n  var _hexToHSL2 = hexToHSL(hex),\n      h = _hexToHSL2.h,\n      s = _hexToHSL2.s,\n      l = _hexToHSL2.l; // h = (h + 53 > 360) ? 360 : h + 53;\n  // s = (s + 4 > 100) ? 100 : s + 4;\n\n\n  l = l + 27 > 100 ? 100 : l + 27;\n  return HSLToHex(h, s, l);\n};\nvar getChromeBrandColorsFromPrimaryHex = function getChromeBrandColorsFromPrimaryHex(hex) {\n  var _hexToHSL3 = hexToHSL(hex),\n      h = _hexToHSL3.h,\n      s = _hexToHSL3.s,\n      l = _hexToHSL3.l;\n\n  h = h - 2 < 0 ? 0 : h - 2;\n  s = s - 11 < 0 ? 0 : s - 11;\n  l = l + 13 > 100 ? 100 : l + 13;\n  return HSLToHex(h, s, l);\n};\nvar getChromeDividerColorsFromPrimaryHex = function getChromeDividerColorsFromPrimaryHex(hex) {\n  var _hexToHSL4 = hexToHSL(hex),\n      h = _hexToHSL4.h,\n      s = _hexToHSL4.s,\n      l = _hexToHSL4.l;\n\n  h = h - 2 < 0 ? 0 : h - 2;\n  l = l - 3 < 0 ? 0 : l - 3;\n  return HSLToHex(h, s, l);\n};\nvar getInteractiveColorsFromPrimaryHex = function getInteractiveColorsFromPrimaryHex(hex) {\n  var _hexToHSL5 = hexToHSL(hex),\n      h = _hexToHSL5.h,\n      s = _hexToHSL5.s,\n      l = _hexToHSL5.l; // h = (h - 2 < 0) ? 0 : h - 2;\n  // l = (l - 3 < 0) ? 0 : l - 3;\n\n\n  return HSLToHex(h, s, l);\n};\nvar getFocusColorsFromPrimaryHex = function getFocusColorsFromPrimaryHex(hex) {\n  var _hexToHSL6 = hexToHSL(hex),\n      h = _hexToHSL6.h,\n      s = _hexToHSL6.s,\n      l = _hexToHSL6.l; // h = (h - 2 < 0) ? 0 : h - 2;\n  // l = (l - 3 < 0) ? 0 : l - 3;\n\n\n  return HSLToHex(h, s, l);\n};\nvar getSecondaryColorsFromSecondaryHex = function getSecondaryColorsFromSecondaryHex(hex) {\n  var _hexToHSL7 = hexToHSL(hex),\n      h = _hexToHSL7.h,\n      s = _hexToHSL7.s,\n      l = _hexToHSL7.l; // h = (h + 33 > 360) ? 360 : h + 33;\n  // s = (s + 73 > 100) ? 100 : s + 73;\n  // l = (l - 33 < 30) ? 30 : l - 33;\n\n\n  return HSLToHex(h, s, l);\n};\nvar getSelectionPrimaryFromSecondaryHex = function getSelectionPrimaryFromSecondaryHex(hex) {\n  var _hexToHSL8 = hexToHSL(hex),\n      h = _hexToHSL8.h,\n      s = _hexToHSL8.s,\n      l = _hexToHSL8.l; // h = (h + 11 > 360) ? 360 : h + 11;\n  // s = (s + 57 > 100) ? 100 : s + 57;\n  // l = (l - 29 < 0) ? 0 : l - 29;\n\n\n  return HSLToHex(h, s, l);\n};\nvar getSelectionSecondaryFromSecondaryHex = function getSelectionSecondaryFromSecondaryHex(hex) {\n  var _hexToHSL9 = hexToHSL(hex),\n      h = _hexToHSL9.h,\n      s = _hexToHSL9.s,\n      l = _hexToHSL9.l;\n\n  h = h - 3 < 0 ? 0 : h - 3;\n  s = s - 85 < 0 ? 0 : s - 85;\n  l = l + 59 > 100 ? 100 : l + 59;\n  return HSLToHex(h, s, l);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HSLToHex\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/color-generator/generateColors.js\n");

/***/ })

})